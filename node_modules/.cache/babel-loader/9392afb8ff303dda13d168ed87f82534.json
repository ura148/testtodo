{"remainingRequest":"/Users/uratomo/test/node_modules/babel-loader/lib/index.js!/Users/uratomo/test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/uratomo/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/uratomo/test/src/components/Week.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/uratomo/test/src/components/Week.vue","mtime":1594298099907},{"path":"/Users/uratomo/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Week.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA,OAAA,QAAA,MAAA,UAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,CADA;AAEA,MAAA,SAAA,EAAA,EAFA;AAGA,MAAA,QAAA,EAAA,IAHA;AAIA,MAAA,QAAA,EAAA,IAJA;AAKA,MAAA,WAAA,EAAA,EALA;AAMA,MAAA,cAAA,EAAA,EANA;AAOA,MAAA,QAAA,EAAA,EAPA;AAQA,MAAA,WAAA,EAAA,EARA;AASA,MAAA,YAAA,EAAA,KATA;AAUA,MAAA,QAAA,EAAA,EAVA;AAWA,MAAA,OAAA,EAAA,CACA;AAAA,QAAA,IAAA,EAAA,SAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,IAAA,EAAA,SAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAFA,EAGA;AAAA,QAAA,IAAA,EAAA,aAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAHA,CAXA;AAgBA,MAAA,KAAA,EAAA;AAhBA,KAAA;AAkBA,GArBA;AAsBA,EAAA,OAAA,EAAA,mBAAA;AACA,SAAA,EAAA,GAAA,QAAA,CAAA,QAAA,EAAA;AACA,SAAA,GAAA,GAAA,QAAA,CAAA,IAAA,GAAA,WAAA,CAAA,GAAA,CAFA,CAGA;;AACA,SAAA,QAAA,GAAA,KAAA,EAAA,CAAA,GAAA,CAAA,WAAA,KAAA,GAAA,CAAA;AACA,SAAA,IAAA,GAAA,KAAA,EAAA,CAAA,GAAA,CAAA,WAAA,KAAA,GAAA,GAAA,GAAA,CAAA,CALA,CAMA;;AACA,QAAA,KAAA,GAAA,IAAA;;AACA,SAAA,QAAA,CAAA,EAAA,CAAA,OAAA,EAAA,UAAA,QAAA,EAAA;AACA,MAAA,KAAA,CAAA,KAAA,GAAA,QAAA,CAAA,GAAA,EAAA,CADA,CACA;AACA,KAFA;AAGA,GAjCA;AAkCA,EAAA,QAAA,EAAA;AACA,IAAA,aAAA,EAAA,yBAAA;AACA,UAAA,YAAA,GAAA,KAAA;;AACA,UAAA,KAAA,YAAA,IAAA,UAAA,EAAA;AACA,QAAA,YAAA,GAAA,IAAA;AACA;;AACA,WAAA,IAAA,GAAA,IAAA,KAAA,KAAA,EAAA;AACA,YAAA,YAAA,GAAA,KAAA,KAAA,CAAA,GAAA,CAAA,CADA,CAEA;;AACA,aAAA,IAAA,MAAA,IAAA,YAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,MAAA;AACA,cAAA,IAAA,GAAA,YAAA,CAAA,MAAA,CAAA,CAFA,CAGA;;AACA,eAAA,IAAA,SAAA,IAAA,IAAA,CAAA,QAAA,EAAA;AACA,gBAAA,OAAA,GAAA,IAAA,CAAA,QAAA,CAAA,SAAA,CAAA;AACA,YAAA,OAAA,CAAA,GAAA,CAAA,OAAA,CAAA,OAAA;AACA,YAAA,OAAA,CAAA,GAAA,CAAA,SAAA;;AACA,gBAAA,KAAA,YAAA,IAAA,KAAA,EAAA;AACA,cAAA,OAAA,CAAA,KAAA,GAAA,IAAA;AACA,aAFA,MAGA,IAAA,OAAA,CAAA,UAAA,IAAA,YAAA,EAAA;AACA,cAAA,OAAA,CAAA,KAAA,GAAA,IAAA;AACA,aAFA,MAEA;AACA,cAAA,OAAA,CAAA,KAAA,GAAA,KAAA;AACA;AACA;AACA;AACA;;AACA,aAAA,KAAA,KAAA;AACA,KA7BA;AA8BA,IAAA,QAAA,EAAA,oBAAA;AACA,UAAA,GAAA,GAAA,CAAA;AACA,UAAA,KAAA,GAAA,IAAA,IAAA,EAAA;AACA,MAAA,KAAA,CAAA,OAAA,CAAA,KAAA,CAAA,OAAA,KAAA,GAAA;AACA,UAAA,IAAA,GAAA,KAAA,CAAA,WAAA,EAAA;AACA,UAAA,EAAA,GAAA,CAAA,OAAA,KAAA,CAAA,QAAA,KAAA,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AACA,UAAA,EAAA,GAAA,CAAA,MAAA,KAAA,CAAA,OAAA,EAAA,EAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AACA,UAAA,GAAA,GAAA,IAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,CAPA,CAQA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,aAAA,GAAA;AACA,KAzCA;AA0CA,IAAA,OAAA,EAAA,mBAAA;AACA;AACA,UAAA,KAAA,GAAA,IAAA,IAAA,EAAA;AACA,UAAA,SAAA,GAAA,KAAA,CAAA,WAAA,EAAA;AACA,UAAA,UAAA,GAAA,KAAA,CAAA,QAAA,EAAA;AACA,UAAA,IAAA,GAAA,KAAA,CAAA,OAAA,EAAA;AACA,UAAA,OAAA,GAAA,KAAA,CAAA,MAAA,EAAA;AAEA,UAAA,WAAA,GAAA,IAAA,GAAA,OAAA,GAAA,KAAA,KAAA,GAAA,CAAA;AACA,UAAA,WAAA,GAAA,WAAA,GAAA,CAAA;AACA,UAAA,GAAA,GAAA,IAAA,MAAA,CAAA,SAAA,CAAA,CAVA,CAYA;;AACA,UAAA,UAAA,GAAA,IAAA,IAAA,CAAA,SAAA,EAAA,UAAA,EAAA,WAAA,CAAA;AACA,MAAA,UAAA,GAAA,UAAA,CAAA,WAAA,KAAA,GAAA,IAAA,UAAA,CAAA,QAAA,KAAA,CAAA,IAAA,GAAA,GAAA,UAAA,CAAA,OAAA,EAAA,GAAA,GAAA,GAAA,IAAA,GAAA,GAAA,CAAA,MAAA,CAAA,UAAA,CAAA,MAAA,EAAA,CAAA,GAAA,GAAA,CAdA,CAeA;;AACA,UAAA,QAAA,GAAA,IAAA,IAAA,CAAA,SAAA,EAAA,UAAA,EAAA,WAAA,CAAA;AACA,MAAA,QAAA,GAAA,QAAA,CAAA,WAAA,KAAA,GAAA,IAAA,QAAA,CAAA,QAAA,KAAA,CAAA,IAAA,GAAA,GAAA,QAAA,CAAA,OAAA,EAAA,GAAA,GAAA,GAAA,IAAA,GAAA,GAAA,CAAA,MAAA,CAAA,QAAA,CAAA,MAAA,EAAA,CAAA,GAAA,GAAA,CAjBA,CAkBA;;AACA,UAAA,WAAA,GAAA,UAAA,GAAA,KAAA,GAAA,QAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,WAAA;AACA,aAAA,CAAA,UAAA,EAAA,QAAA,EAAA,WAAA,CAAA;AACA;AAhEA,GAlCA;AAoGA,EAAA,OAAA,EAAA;AACA,IAAA,cAAA,EAAA,wBAAA,IAAA,EAAA;AACA,UAAA,CAAA,GAAA,IAAA,CAAA,WAAA,EAAA;AACA,UAAA,CAAA,GAAA,CAAA,QAAA,IAAA,CAAA,QAAA,KAAA,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AACA,UAAA,CAAA,GAAA,CAAA,OAAA,IAAA,CAAA,OAAA,EAAA,EAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AACA,UAAA,MAAA,GAAA,CAAA,GAAA,EAAA,GAAA,CAAA,GAAA,EAAA,GAAA,CAAA;AACA,aAAA,MAAA;AACA,KAPA;AAQA,IAAA,iBAAA,EAAA,2BAAA,GAAA,EAAA;AACA,UAAA,MAAA,GAAA,KAAA,QAAA,CAAA,IAAA,CAAA,UAAA,IAAA,EAAA;AACA,eAAA,IAAA,CAAA,GAAA,KAAA,GAAA;AACA,OAFA,CAAA;AAGA,aAAA,MAAA,CAAA,QAAA;AACA,KAbA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAA,WAAA,EAAA,qBAAA,MAAA,EAAA,IAAA,EAAA,SAAA,EAAA;AACA,WAAA,QAAA,CAAA,KAAA,CAAA,IAAA,CAAA,QAAA,EAAA,KAAA,CAAA,MAAA,EAAA,KAAA,CAAA,WAAA,EAAA,KAAA,CAAA,SAAA,EAAA,MAAA;AACA,KA3BA;AA4BA,IAAA,oBAAA,EAAA,8BAAA,MAAA,EAAA,OAAA,EAAA,IAAA,EAAA,SAAA,EAAA;AACA,MAAA,OAAA,CAAA,UAAA,GAAA,CAAA,OAAA,CAAA,UAAA;AACA,UAAA,OAAA,GAAA,EAAA;AACA,MAAA,OAAA,CAAA,SAAA,CAAA,GAAA,OAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,IAAA;AACA,WAAA,QAAA,CAAA,KAAA,CAAA,IAAA,CAAA,QAAA,EAAA,KAAA,CAAA,MAAA,EAAA,KAAA,CAAA,WAAA,EAAA,MAAA,CAAA,OAAA;AACA,KAlCA;AAmCA,IAAA,EAAA,EAAA,cAAA;AACA,UAAA,KAAA,GAAA,IAAA,IAAA,EAAA;AACA,MAAA,KAAA,CAAA,OAAA,CAAA,KAAA,CAAA,OAAA,EAAA;AACA,UAAA,IAAA,GAAA,KAAA,CAAA,WAAA,EAAA;AACA,UAAA,EAAA,GAAA,CAAA,OAAA,KAAA,CAAA,QAAA,KAAA,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AACA,UAAA,EAAA,GAAA,CAAA,MAAA,KAAA,CAAA,OAAA,EAAA,EAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,IAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA;AACA,UAAA,cAAA,GAAA,EAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,KAAA;;AAEA,WAAA,IAAA,GAAA,IAAA,KAAA,KAAA,EAAA;AACA,YAAA,YAAA,GAAA,KAAA,KAAA,CAAA,GAAA,CAAA;;AACA,aAAA,IAAA,MAAA,IAAA,YAAA,EAAA;AACA,cAAA,IAAA,GAAA,YAAA,CAAA,MAAA,CAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,IAAA;;AACA,eAAA,IAAA,SAAA,IAAA,IAAA,CAAA,QAAA,EAAA;AACA,gBAAA,OAAA,GAAA,IAAA,CAAA,QAAA,CAAA,SAAA,CAAA;AACA,YAAA,OAAA,CAAA,GAAA,CAAA,OAAA;AAEA,YAAA,cAAA,CAAA,SAAA,CAAA,GAAA,OAAA;AACA;AACA;AACA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,cAAA;AACA,KA3DA;AA4DA,IAAA,SAAA,EAAA,qBAAA;AACA,UAAA,KAAA,GAAA,IAAA,IAAA,EAAA;AACA,UAAA,SAAA,GAAA,KAAA,CAAA,WAAA,EAAA;AACA,UAAA,UAAA,GAAA,KAAA,CAAA,QAAA,EAAA;AACA,UAAA,IAAA,GAAA,KAAA,CAAA,OAAA,EAAA;AACA,UAAA,OAAA,GAAA,KAAA,CAAA,MAAA,EAAA;AAEA,UAAA,WAAA,GAAA,IAAA,GAAA,OAAA,GAAA,KAAA,KAAA,GAAA,CAAA;AACA,UAAA,WAAA,GAAA,WAAA,GAAA,CAAA;AACA,UAAA,GAAA,GAAA,IAAA,MAAA,CAAA,SAAA,CAAA,CATA,CAWA;;AACA,UAAA,UAAA,GAAA,IAAA,IAAA,CAAA,SAAA,EAAA,UAAA,EAAA,WAAA,CAAA;AACA,MAAA,UAAA,GAAA,UAAA,CAAA,WAAA,KAAA,GAAA,IAAA,UAAA,CAAA,QAAA,KAAA,CAAA,IAAA,GAAA,GAAA,UAAA,CAAA,OAAA,EAAA,GAAA,GAAA,GAAA,IAAA,GAAA,GAAA,CAAA,MAAA,CAAA,UAAA,CAAA,MAAA,EAAA,CAAA,GAAA,GAAA,CAbA,CAcA;;AACA,UAAA,QAAA,GAAA,IAAA,IAAA,CAAA,SAAA,EAAA,UAAA,EAAA,WAAA,CAAA;AACA,MAAA,QAAA,GAAA,QAAA,CAAA,WAAA,KAAA,GAAA,IAAA,QAAA,CAAA,QAAA,KAAA,CAAA,IAAA,GAAA,GAAA,QAAA,CAAA,OAAA,EAAA,GAAA,GAAA,GAAA,IAAA,GAAA,GAAA,CAAA,MAAA,CAAA,QAAA,CAAA,MAAA,EAAA,CAAA,GAAA,GAAA;AACA,UAAA,WAAA,GAAA,UAAA,GAAA,KAAA,GAAA,QAAA;AAEA,UAAA,cAAA,GAAA,IAAA,IAAA,CAAA,SAAA,EAAA,UAAA,EAAA,WAAA,CAAA;AACA,MAAA,cAAA,GAAA,cAAA,CAAA,WAAA,KAAA,GAAA,GAAA,CAAA,OAAA,cAAA,CAAA,QAAA,KAAA,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA,CAAA,CAAA,GAAA,GAAA,GAAA,CAAA,MAAA,cAAA,CAAA,OAAA,EAAA,EAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AAEA,UAAA,YAAA,GAAA,IAAA,IAAA,CAAA,SAAA,EAAA,UAAA,EAAA,WAAA,CAAA;AACA,MAAA,YAAA,GAAA,YAAA,CAAA,WAAA,KAAA,GAAA,GAAA,CAAA,OAAA,YAAA,CAAA,QAAA,KAAA,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA,CAAA,CAAA,GAAA,GAAA,GAAA,CAAA,MAAA,YAAA,CAAA,OAAA,EAAA,EAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AAEA,MAAA,OAAA,CAAA,GAAA,CAAA,cAAA;AACA,aAAA,CAAA,WAAA,EAAA,cAAA,EAAA,YAAA,CAAA;AACA,KAvFA;AAwFA,IAAA,WAAA,EAAA,qBAAA,GAAA,EAAA;AACA,WAAA,QAAA,CAAA,KAAA,CAAA,GAAA,EAAA,MAAA;AACA,KA1FA;AA2FA;AACA,IAAA,QAAA,EAAA,oBAAA;AACA,UAAA,CAAA,GAAA,KAAA,SAAA,EAAA;AACA,aAAA,CAAA,CAAA,CAAA,CAAA;AACA,KA/FA;AAgGA,IAAA,MAAA,EAAA,kBAAA;AACA,UAAA,CAAA,GAAA,KAAA,SAAA,EAAA;AACA,aAAA,CAAA,CAAA,CAAA,CAAA;AACA,KAnGA;AAoGA,IAAA,KAAA,EAAA,iBAAA;AACA,UAAA,CAAA,GAAA,KAAA,SAAA,EAAA;AACA,aAAA,CAAA,CAAA,CAAA,CAAA;AACA;AAvGA;AApGA,CAAA","sourcesContent":["<template>\n  <div>\n    <h2>Week ToDos</h2>\n    <button type=\"button\" v-on:click=\"hoge()\">hoge</button>\n    <div class=\"\">\n      <button type=\"button\" v-on:click=\"count--\">◀︎</button>\n      <span>{{ weeks() }}</span>\n      <button type=\"button\" v-on:click=\"count++\">▶︎</button>\n    </div>\n\n\n\n    <router-link to=\"/\">task</router-link>\n    <button type=\"button\" v-on:click=\"ey()\">eybtn</button>\n    <template>\n      <div v-for=\"(taskCategory, key) in filteredTodos\" :key=\"taskCategory.id\">\n            <div v-for=\"(list, subkey) in taskCategory\" :key=\"list.id\" class=\"subcard\">\n              {{ \"のタスク\" }}\n              <ul>\n                <li v-for=\"(subtodo, subsubkey) in list.subTasks\" :key=\"subtodo.id\">\n                  <div v-if=\"startDay() <= subtodo.subDate && subtodo.subDate <= endDay()\" class=\"todo\">\n                    <input type=\"checkbox\" v-model=\"subtodo.isComplete\">\n                    <label v-on:click=\"updateIsCompleteTodo(subkey, subtodo, list, subsubkey)\">{{subtodo.subName}}</label>\n                    <button type=\"submit\" v-on:click=\"deleteTodos(subkey, list, subsubkey)\">削除</button>\n                  </div>\n                </li>\n              </ul>\n\n              <div>\n                <input type=\"text\" v-model=\"newSubTodoName\">\n                <input type=\"date\" v-model=\"subDeadline\">\n                <button type=\"button\" v-on:click=\"createSubTodo(list, subkey)\">サブタスク作成</button>\n              </div>\n            </div>\n        <button type=\"submit\" v-on:click=\"deleteLists(key)\">削除</button>\n      </div>\n\n    </template>\n</div>\n</template>\n\n<script>\nimport firebase from \"firebase\";\n\nexport default {\n  name: 'week',\n  data() {\n    return {\n      count: 0,\n      startDate: '',\n      database: null,\n      todosRef: null,\n      newTodoName: \"\",\n      newSubTodoName: \"\",\n      deadline:\"\",\n      subDeadline: \"\",\n      showTodoType: \"all\",\n      selected: '',\n      options: [\n        { text: 'private', value: 'private' },\n        { text: 'recruit', value: 'recruit' },\n        { text: 'bucket list', value: 'bucket list' }\n      ],\n      todos: []\n    }\n  },\n  created: function() {\n    this.db = firebase.database();\n    this.uid = firebase.auth().currentUser.uid;\n    // refはreferenceでデータベースにある特定の項目を指し示すメソッド\n    this.todosRef = this.db.ref(\"todos/\" + this.uid);\n    this.test = this.db.ref(\"todos/\" + this.uid + \"/\")\n    // データに変更があると実行されるfunction\n    var _this = this;\n    this.todosRef.on('value', function(snapshot) {\n      _this.todos = snapshot.val(); // データに変化が起きたときに再取得する\n    });\n  },\n  computed: {\n    filteredTodos: function () {\n      var showComplete = false;\n      if (this.showTodoType == 'complete') {\n        showComplete = true;\n      }\n      for (let key in this.todos) {\n        let taskCategory = this.todos[key];\n        // console.log(taskCategory);\n        for (let subkey in taskCategory) {\n          console.log(subkey);\n          let list = taskCategory[subkey];\n          // console.log(list);\n          for (let subsubkey in list.subTasks) {\n            let subtodo = list.subTasks[subsubkey];\n            console.log(subtodo.subName);\n            console.log(subsubkey);\n             if (this.showTodoType == 'all') {\n               subtodo.judge = true;\n             }\n              else if(subtodo.isComplete == showComplete) {\n                subtodo.judge = true;\n              }else {\n                subtodo.judge = false;\n              }\n          }\n        }\n      }\n      return this.todos;\n    },\n    termtest: function() {\n      var day = 7;\n      var today = new Date();\n      today.setDate(today.getDate() + day);\n      var yyyy = today.getFullYear();\n      var mm = (\"0\"+(today.getMonth()+1)).slice(-2);\n      var dd = (\"0\"+today.getDate()).slice(-2);\n      var ymd = (yyyy+'-'+mm+'-'+dd);\n      // let filterSubTodos = {};\n      console.log(ymd);\n      return ymd;\n    },\n    getweek: function () {\n      // let weekpoint = 0;\n      let today = new Date();\n      let this_year = today.getFullYear();\n      let this_month = today.getMonth();\n      let date = today.getDate();\n      let day_num = today.getDay();\n\n      let this_monday = date - day_num + this.count * 7;\n      let this_sunday = this_monday + 6;\n      let day = new String('日月火水木金土');\n\n      //月曜日の年月日\n      let start_date = new Date(this_year, this_month, this_monday);\n          start_date = start_date.getFullYear() + \"年\" + (start_date.getMonth() + 1) + \"月\" + start_date.getDate() + \"日\" + \" (\" + day.charAt( start_date.getDay() ) + \")\"\n      //日曜日の年月日\n      let end_date = new Date(this_year, this_month, this_sunday);\n          end_date =  end_date.getFullYear() + \"年\" + (end_date.getMonth() + 1) + \"月\" + end_date.getDate() + \"日\" + \" (\" + day.charAt( end_date.getDay() ) +\")\"\n      //文字列を作成\n      let target_week = start_date + \" ～ \" + end_date;\n      console.log(target_week);\n      return [start_date, end_date, target_week];\n    }\n  },\n  methods: {\n     dateToYYYYMMDD: function(date) {\n      let y = date.getFullYear()\n      let m = ('00' + (date.getMonth()+1)).slice(-2)\n      let d = ('00' + date.getDate()).slice(-2)\n      let result = y + '' + m + '' + d\n      return result\n    },\n    getContentFromKey: function(key) {\n      const target = this.dateList.find((date) => {\n        return (date.ymd === key)\n      })\n      return target.contents\n    },\n    // term: function(day) {\n    //   var today = new Date();\n    //   today.setDate(today.getDate() + day);\n    //   var yyyy = today.getFullYear();\n    //   var mm = (\"0\"+(today.getMonth()+1)).slice(-2);\n    //   var dd = (\"0\"+today.getDate()).slice(-2);\n    //   var ymd = (yyyy+'-'+mm+'-'+dd);\n    //   // let filterSubTodos = {};\n    //   console.log(ymd);\n    //   return ymd;\n    // },\n    deleteTodos: function(subkey, list, subsubkey) {\n      this.todosRef.child(list.category).child(subkey).child(\"/subTasks\").child(subsubkey).remove();\n    },\n    updateIsCompleteTodo: function(subkey, subtodo, list, subsubkey) {\n      subtodo.isComplete = !subtodo.isComplete;\n      var updates = {};\n      updates[subsubkey] = subtodo;\n      console.log(list);\n      this.todosRef.child(list.category).child(subkey).child(\"/subTasks\").update(updates)\n    },\n    ey: function() {\n      var today = new Date();\n      today.setDate(today.getDate());\n      var yyyy = today.getFullYear();\n      var mm = (\"0\"+(today.getMonth()+1)).slice(-2);\n      var dd = (\"0\"+today.getDate()).slice(-2);\n      console.log(yyyy+'-'+mm+'-'+dd);\n      let filterSubTodos = {};\n      console.log(this.todos);\n\n      for (let key in this.todos) {\n        let taskCategory = this.todos[key];\n        for (let subkey in taskCategory) {\n          let list = taskCategory[subkey];\n          console.log(list);\n          for (let subsubkey in list.subTasks) {\n            let subtodo = list.subTasks[subsubkey];\n            console.log(subtodo);\n\n            filterSubTodos[subsubkey] = subtodo;\n          }\n        }\n      }\n      console.log(filterSubTodos);\n    },\n    getsunday: function () {\n      let today = new Date();\n      let this_year = today.getFullYear();\n      let this_month = today.getMonth();\n      let date = today.getDate();\n      let day_num = today.getDay();\n\n      let this_monday = date - day_num + this.count * 7;\n      let this_sunday = this_monday + 6;\n      let day = new String('日月火水木金土');\n\n      //月曜日の年月日\n      let start_date = new Date(this_year, this_month, this_monday);\n          start_date = start_date.getFullYear() + \"年\" + (start_date.getMonth() + 1) + \"月\" + start_date.getDate() + \"日\" + \" (\" + day.charAt( start_date.getDay() ) + \")\"\n      //日曜日の年月日\n      let end_date = new Date(this_year, this_month, this_sunday);\n          end_date = end_date.getFullYear() + \"年\" + (end_date.getMonth() + 1) + \"月\" + end_date.getDate() + \"日\" + \" (\" + day.charAt( end_date.getDay() ) +\")\"\n      let target_week = start_date + \" ～ \" + end_date;\n\n      let planeStartDate = new Date(this_year, this_month, this_monday);\n          planeStartDate = planeStartDate.getFullYear() + \"-\" + (\"0\"+(planeStartDate.getMonth()+1)).slice(-2) + \"-\" + (\"0\"+planeStartDate.getDate()).slice(-2);\n\n      let planeEndDate = new Date(this_year, this_month, this_sunday);\n          planeEndDate = planeEndDate.getFullYear() + \"-\" + (\"0\"+(planeEndDate.getMonth()+1)).slice(-2) + \"-\" + (\"0\"+planeEndDate.getDate()).slice(-2);\n\n      console.log(planeStartDate);\n      return [target_week, planeStartDate, planeEndDate];\n    },\n    deleteLists: function(key) {\n      this.todosRef.child(key).remove();\n    },\n    // 秋の始まり日を取得\n    startDay: function () {\n      let a = this.getsunday();\n      return a[1];\n    },\n    endDay: function () {\n      let a = this.getsunday();\n      return a[2];\n    },\n    weeks: function () {\n      let a = this.getsunday();\n      return a[0];\n    }\n\n  }\n}\n</script>\n\n<style scoped>\n.cell-content {\n  text-align:left;\n  width: 70px;\n  height: 50px;\n  font-size: 50%;\n  /* border: 1px solid #efefef; */\n}\n.cell-content-line {\n  border-bottom: 1px solid #efefef;\n}\n</style>\n"],"sourceRoot":"src/components"}]}