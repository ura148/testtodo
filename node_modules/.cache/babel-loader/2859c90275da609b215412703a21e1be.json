{"remainingRequest":"/Users/uratomo/test/node_modules/babel-loader/lib/index.js!/Users/uratomo/test/node_modules/eslint-loader/index.js??ref--13-0!/Users/uratomo/test/src/router.js","dependencies":[{"path":"/Users/uratomo/test/src/router.js","mtime":1593586494959},{"path":"/Users/uratomo/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29tZSI7CmltcG9ydCBWdWUgZnJvbSAndnVlJzsKaW1wb3J0IFJvdXRlciBmcm9tICd2dWUtcm91dGVyJzsKaW1wb3J0IFRhc2sgZnJvbSAnQC9jb21wb25lbnRzL1Rhc2sudnVlJzsKaW1wb3J0IFNpZ251cCBmcm9tICdAL2NvbXBvbmVudHMvU2lnbnVwJzsKaW1wb3J0IFNpZ25pbiBmcm9tICdAL2NvbXBvbmVudHMvU2lnbmluJzsKaW1wb3J0IGZpcmViYXNlIGZyb20gJ2ZpcmViYXNlJzsKVnVlLnVzZShSb3V0ZXIpOwp2YXIgcm91dGVyID0gbmV3IFJvdXRlcih7CiAgbW9kZTogJ2hpc3RvcnknLAogIHJvdXRlczogW3sKICAgIHBhdGg6ICcvJywKICAgIG5hbWU6ICd0YXNrJywKICAgIGNvbXBvbmVudDogVGFzawogIH0sIHsKICAgIHBhdGg6ICcvc2lnbnVwJywKICAgIG5hbWU6ICdTaWdudXAnLAogICAgY29tcG9uZW50OiBTaWdudXAKICB9LCB7CiAgICBwYXRoOiAnL3NpZ25pbicsCiAgICBuYW1lOiAnU2lnbmluJywKICAgIGNvbXBvbmVudDogU2lnbmluCiAgfV0KfSk7IC8vIOODreOCsOOCpOODs+OBjOWujOS6huOBl+OBpuOBhOOBquOBhOWgtOWQiOOBq+OCteOCpOODs+OCpOODs+ODmuODvOOCuOOBrumjm+OBsOOBmQoKcm91dGVyLmJlZm9yZUVhY2goZnVuY3Rpb24gKHRvLCBmcm9tLCBuZXh0KSB7CiAgdmFyIHJlcXVpcmVzQXV0aCA9IHRvLm1hdGNoZWQuc29tZShmdW5jdGlvbiAocmVjb3JkKSB7CiAgICByZXR1cm4gcmVjb3JkLm1ldGEucmVxdWlyZXNBdXRoOwogIH0pOwogIHZhciBjdXJyZW50VXNlciA9IGZpcmViYXNlLmF1dGgoKS5jdXJyZW50VXNlcjsKCiAgaWYgKHJlcXVpcmVzQXV0aCkgewogICAgaWYgKCFjdXJyZW50VXNlcikgewogICAgICBuZXh0KHsKICAgICAgICBwYXRoOiAnL3NpZ25pbicsCiAgICAgICAgcXVlcnk6IHsKICAgICAgICAgIHJlZGlyZWN0OiB0by5mdWxsUGF0aAogICAgICAgIH0KICAgICAgfSk7CiAgICB9IGVsc2UgewogICAgICBuZXh0KCk7CiAgICB9CiAgfSBlbHNlIHsKICAgIG5leHQoKTsKICB9Cn0pOwpleHBvcnQgZGVmYXVsdCByb3V0ZXI7"},{"version":3,"sources":["/Users/uratomo/test/src/router.js"],"names":["Vue","Router","Task","Signup","Signin","firebase","use","router","mode","routes","path","name","component","beforeEach","to","from","next","requiresAuth","matched","some","record","meta","currentUser","auth","query","redirect","fullPath"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEAL,GAAG,CAACM,GAAJ,CAAQL,MAAR;AAEA,IAAIM,MAAM,GAAI,IAAIN,MAAJ,CAAW;AACvBO,EAAAA,IAAI,EAAE,SADiB;AAEvBC,EAAAA,MAAM,EAAE,CACN;AACEC,IAAAA,IAAI,EAAE,GADR;AAEEC,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,SAAS,EAAEV;AAHb,GADM,EAMN;AACEQ,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,IAAI,EAAE,QAFR;AAGEC,IAAAA,SAAS,EAAET;AAHb,GANM,EAWN;AACEO,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,IAAI,EAAE,QAFR;AAGEC,IAAAA,SAAS,EAAER;AAHb,GAXM;AAFe,CAAX,CAAd,C,CAqBA;;AACAG,MAAM,CAACM,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAkB;AAClC,MAAIC,YAAY,GAAGH,EAAE,CAACI,OAAH,CAAWC,IAAX,CAAgB,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACC,IAAP,CAAYJ,YAAhB;AAAA,GAAtB,CAAnB;AACA,MAAIK,WAAW,GAAGjB,QAAQ,CAACkB,IAAT,GAAgBD,WAAlC;;AACA,MAAIL,YAAJ,EAAiB;AACjB,QAAI,CAACK,WAAL,EAAiB;AACfN,MAAAA,IAAI,CAAC;AACHN,QAAAA,IAAI,EAAE,SADH;AAEHc,QAAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAEX,EAAE,CAACY;AAAd;AAFJ,OAAD,CAAJ;AAID,KALD,MAKK;AACHV,MAAAA,IAAI;AACL;AACF,GATC,MASG;AACHA,IAAAA,IAAI;AACL;AACA,CAfD;AAiBA,eAAeT,MAAf","sourcesContent":["import Vue from 'vue'\nimport Router from 'vue-router'\nimport Task from '@/components/Task.vue'\nimport Signup from '@/components/Signup'\nimport Signin from '@/components/Signin'\nimport firebase from 'firebase'\n\nVue.use(Router)\n\nlet router =  new Router({\n  mode: 'history',\n  routes: [\n    {\n      path: '/',\n      name: 'task',\n      component: Task,\n    },\n    {\n      path: '/signup',\n      name: 'Signup',\n      component: Signup,\n    },\n    {\n      path: '/signin',\n      name: 'Signin',\n      component: Signin\n    }\n  ]\n})\n\n// ログインが完了していない場合にサインインページの飛ばす\nrouter.beforeEach((to, from, next)=>{\n  let requiresAuth = to.matched.some(record => record.meta.requiresAuth)\n  let currentUser = firebase.auth().currentUser\n  if (requiresAuth){\n  if (!currentUser){\n    next({\n      path: '/signin',\n      query: {redirect: to.fullPath}\n    })\n  }else{\n    next()\n  }\n}else{\n  next()\n}\n})\n\nexport default router\n"]}]}