{"remainingRequest":"/Users/uratomo/test/node_modules/babel-loader/lib/index.js!/Users/uratomo/test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/uratomo/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/uratomo/test/src/components/Task.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/uratomo/test/src/components/Task.vue","mtime":1594002635769},{"path":"/Users/uratomo/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGZpcmViYXNlIGZyb20gImZpcmViYXNlIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJUYXNrIiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZGF0YWJhc2U6IG51bGwsCiAgICAgIHRvZG9zUmVmOiBudWxsLAogICAgICBuZXdUb2RvTmFtZTogIiIsCiAgICAgIG5ld1N1YlRvZG9OYW1lOiAiIiwKICAgICAgZGVhZGxpbmU6ICIiLAogICAgICBzdWJEZWFkbGluZTogIiIsCiAgICAgIHNob3dUb2RvVHlwZTogImFsbCIsCiAgICAgIHRvZG9zOiBbXQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmRiID0gZmlyZWJhc2UuZGF0YWJhc2UoKTsKICAgIHRoaXMudWlkID0gZmlyZWJhc2UuYXV0aCgpLmN1cnJlbnRVc2VyLnVpZDsgLy8gcmVm44GvcmVmZXJlbmNl44Gn44OH44O844K/44OZ44O844K544Gr44GC44KL54m55a6a44Gu6aCF55uu44KS5oyH44GX56S644GZ44Oh44K944OD44OJCgogICAgdGhpcy50b2Rvc1JlZiA9IHRoaXMuZGIucmVmKCJ0b2Rvcy8iICsgdGhpcy51aWQpOwogICAgdGhpcy50ZXN0ID0gdGhpcy5kYi5yZWYoInRvZG9zLyIgKyB0aGlzLnVpZCArICIvIik7IC8vIOODh+ODvOOCv+OBq+WkieabtOOBjOOBguOCi+OBqOWun+ihjOOBleOCjOOCi2Z1bmN0aW9uCgogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICB0aGlzLnRvZG9zUmVmLm9uKCd2YWx1ZScsIGZ1bmN0aW9uIChzbmFwc2hvdCkgewogICAgICBfdGhpcy50b2RvcyA9IHNuYXBzaG90LnZhbCgpOyAvLyDjg4fjg7zjgr/jgavlpInljJbjgYzotbfjgY3jgZ/jgajjgY3jgavlho3lj5blvpfjgZnjgosKICAgIH0pOwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGZpbHRlcmVkVG9kb3M6IGZ1bmN0aW9uIGZpbHRlcmVkVG9kb3MoKSB7CiAgICAgIHZhciBzaG93Q29tcGxldGUgPSBmYWxzZTsKCiAgICAgIGlmICh0aGlzLnNob3dUb2RvVHlwZSA9PSAnY29tcGxldGUnKSB7CiAgICAgICAgc2hvd0NvbXBsZXRlID0gdHJ1ZTsKICAgICAgfQoKICAgICAgdmFyIGZpbHRlclRvZG9zID0ge30sCiAgICAgICAgICBmaWx0ZXJTdWJUb2RvcyA9IHt9OwoKICAgICAgZm9yICh2YXIga2V5IGluIHRoaXMudG9kb3MpIHsKICAgICAgICB2YXIgdG9kbyA9IHRoaXMudG9kb3Nba2V5XTsKICAgICAgICBmaWx0ZXJUb2Rvc1trZXldID0gdG9kbzsKCiAgICAgICAgZm9yICh2YXIgc3Via2V5IGluIHRvZG8uc3ViVGFza3MpIHsKICAgICAgICAgIHZhciBzdWJ0b2RvID0gdG9kby5zdWJUYXNrc1tzdWJrZXldOyAvLyBhbGzjga7loLTlkIjjga/lhajjgabooajnpLoKCiAgICAgICAgICBpZiAodGhpcy5zaG93VG9kb1R5cGUgPT0gJ2FsbCcpIHsKICAgICAgICAgICAgc3VidG9kby5qdWRnZSA9IHRydWU7CiAgICAgICAgICAgIGZpbHRlclN1YlRvZG9zW3N1YmtleV0gPSBzdWJ0b2RvOwogICAgICAgICAgfSAvLyBjb21wbGV0ZeOBruWgtOWQiOOBr+ODgeOCp+ODg+OCr+OBjOOBpOOBhOOBpuOBhOOCi+OCguOBruOAgWFjdGl2ZeOBruaZguOBr+ODgeOCp+ODg+OCr+OBjOOBpOOBhOOBpuOBhOOBquOBhOOCguOBruOCkuihqOekugogICAgICAgICAgZWxzZSBpZiAoc3VidG9kby5pc0NvbXBsZXRlID09IHNob3dDb21wbGV0ZSkgewogICAgICAgICAgICAgIHN1YnRvZG8uanVkZ2UgPSB0cnVlOwogICAgICAgICAgICAgIGZpbHRlclN1YlRvZG9zW3N1YmtleV0gPSBzdWJ0b2RvOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIHN1YnRvZG8uanVkZ2UgPSBmYWxzZTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIGZpbHRlclRvZG9zOwogICAgfSwKICAgIHRhc2tOdW1iZXI6IGZ1bmN0aW9uIHRhc2tOdW1iZXIoKSB7CiAgICAgIHZhciBjb3VudCA9IDA7CgogICAgICBmb3IgKHZhciBrZXkgaW4gdGhpcy50b2RvcykgewogICAgICAgIHZhciB0b2RvID0gdGhpcy50b2Rvc1trZXldOyAvLyBjb25zb2xlLmxvZyh0b2RvLmlkKTsKCiAgICAgICAgaWYgKHRoaXMuc2hvd1RvZG9UeXBlID09ICdhbGwnKSB7CiAgICAgICAgICBjb25zb2xlLmxvZyh0b2RvKTsKICAgICAgICAgIGNvbnNvbGUubG9nKHRvZG8uc3ViVGFza3MpOwogICAgICAgICAgY291bnQgKz0gMTsKCiAgICAgICAgICBmb3IgKHZhciBzdWJrZXkgaW4gdG9kby5zdWJUYXNrcykgewogICAgICAgICAgICBjb25zb2xlLmxvZyhzdWJrZXkpOwogICAgICAgICAgICB2YXIgc3VidG9kbyA9IHRvZG8uc3ViVGFza3Nbc3Via2V5XTsKICAgICAgICAgICAgY29uc29sZS5sb2coc3VidG9kbyk7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKHN1YnRvZG8uc3ViTmFtZSk7CiAgICAgICAgICAgIGNvdW50ICs9IDE7CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnNob3dUb2RvVHlwZSA9PSAnYWN0aXZlJykgewogICAgICAgICAgaWYgKHRvZG8uaXNDb21wbGV0ZSA9PSBmYWxzZSkgewogICAgICAgICAgICBjb3VudCArPSAxOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBpZiAodG9kby5pc0NvbXBsZXRlID09IHRydWUpIHsKICAgICAgICAgICAgY291bnQgKz0gMTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiBjb3VudDsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIERC44GudG9kb3MvW3VpZF0v5Lul5LiL44Gr44OH44O844K/44KS5qC857SN44GX44Gm44GE44GP44CCCiAgICBjcmVhdGVUb2RvOiBmdW5jdGlvbiBjcmVhdGVUb2RvKCkgewogICAgICBpZiAodGhpcy5uZXdUb2RvTmFtZSA9PSAiIikgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdGhpcy50b2Rvc1JlZi5wdXNoKHsKICAgICAgICBuYW1lOiB0aGlzLm5ld1RvZG9OYW1lLAogICAgICAgIGRhdGU6IHRoaXMuZGVhZGxpbmUKICAgICAgfSk7CiAgICAgIHRoaXMubmV3VG9kb05hbWUgPSAiIjsKICAgIH0sCiAgICBjcmVhdGVTdWJUb2RvOiBmdW5jdGlvbiBjcmVhdGVTdWJUb2RvKGtleSkgewogICAgICBpZiAodGhpcy5uZXdTdWJUb2RvTmFtZSA9PSAiIikgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdGhpcy50b2Rvc1JlZi5jaGlsZChrZXkpLmNoaWxkKCIvc3ViVGFza3MiKS5wdXNoKHsKICAgICAgICBzdWJOYW1lOiB0aGlzLm5ld1N1YlRvZG9OYW1lLAogICAgICAgIGlzQ29tcGxldGU6IGZhbHNlLAogICAgICAgIHN1YkRhdGU6IHRoaXMuc3ViRGVhZGxpbmUsCiAgICAgICAgcGFpcmluZ0lkOiBrZXksCiAgICAgICAganVkZ2U6IGZhbHNlCiAgICAgIH0pOwogICAgICB0aGlzLm5ld1N1YlRvZG9OYW1lID0gIiI7CiAgICB9LAogICAgdXBkYXRlSXNDb21wbGV0ZVRvZG86IGZ1bmN0aW9uIHVwZGF0ZUlzQ29tcGxldGVUb2RvKGtleSwgc3VidG9kbywgc3Via2V5KSB7CiAgICAgIHN1YnRvZG8uaXNDb21wbGV0ZSA9ICFzdWJ0b2RvLmlzQ29tcGxldGU7IC8vIERC5YaF44Gu44OH44O844K/44KS5pu05paw44GZ44KLCgogICAgICB2YXIgdXBkYXRlcyA9IHt9OyAvLyB0b2RvLmlk44Gn5aSJ5pu044GZ44KLdG9kb+OCv+OCueOCr+OCkuaMh+WumuOBl+OAgWRhdGHjgYzmm7TmlrDjgZXjgozjgZ90b2Rv44KS5oy/5YWl44GZ44KLCgogICAgICB1cGRhdGVzW3N1YmtleV0gPSBzdWJ0b2RvOwogICAgICB0aGlzLnRvZG9zUmVmLmNoaWxkKGtleSkuY2hpbGQoIi9zdWJUYXNrcyIpLnVwZGF0ZSh1cGRhdGVzKTsKICAgIH0sCiAgICAvLyB1cGRhdGVJc0NvbXBsZXRlU3ViVG9kbzogZnVuY3Rpb24odG9kbywga2V5KSB7CiAgICAvLyAgIHRvZG8uc3ViVGFza3MuaXNDb21wbGV0ZSA9ICF0b2RvLnN1YlRhc2tzLmlzQ29tcGxldGU7CiAgICAvLyAgIC8vIERC5YaF44Gu44OH44O844K/44KS5pu05paw44GZ44KLCiAgICAvLyAgIHZhciB1cGRhdGVzID0ge307CiAgICAvLyAgIC8vIHRvZG8uaWTjgaflpInmm7TjgZnjgot0b2Rv44K/44K544Kv44KS5oyH5a6a44GX44CBZGF0YeOBjOabtOaWsOOBleOCjOOBn3RvZG/jgpLmjL/lhaXjgZnjgosKICAgIC8vICAgdXBkYXRlc1trZXldID0gdG9kby5zdWJUYXNrczsKICAgIC8vICAgdGhpcy50b2Rvc1JlZi51cGRhdGUodXBkYXRlcykKICAgIC8vIH0sCiAgICAvLyB0b2Rv44Gu5YmK6ZmkCiAgICBkZWxldGVUb2RvOiBmdW5jdGlvbiBkZWxldGVUb2RvKGtleSkgewogICAgICB0aGlzLnRvZG9zUmVmLmNoaWxkKGtleSkucmVtb3ZlKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Task.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"task\">\n     <h2>タスク</h2>\n    <div>\n      <!-- 初期はVーmodelで\"newTodoName\"を入れているが空白、故にタスク作った後に空白にしないとミスが起こる -->\n      <input type=\"text\" v-model=\"newTodoName\">\n      <input type=\"date\" v-model=\"deadline\">\n      <!-- <button type=\"submit\" v-on:click=\"createList()\">タスク作成</button> -->\n      <button type=\"submit\" v-on:click=\"createTodo()\">リスト作成</button>\n    </div>\n    <ul>\n      <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'all'\">すべて</button></li>\n      <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'active'\">未完タスク一覧</button></li>\n      <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'complete'\">完了タスク一覧</button></li>\n    </ul>\n\n\n    <!-- todoの一覧表示 -->\n    <p>{{ taskNumber + \"個のタスク\" }}</p>\n    <!-- <p>{{ judgeFalseAndTrue }}</p> -->\n\n    <ul v-for=\"(todo, key) in filteredTodos\" :key=\"todo.id\">\n      <li class=\"card\">\n        <!-- <input type=\"checkbox\" v-model=\"todo.isComplete\" v-on:click=\"updateIsCompleteTodo(todo, key)\"> -->\n        <p>{{ todo.name }}</p>\n        <p>{{ todo.date }}</p>\n\n        <!-- subTodoを表示 -->\n        <div class=\"subcard\" v-for=\"(subtodo, subkey) in todo.subTasks\" :key=\"subtodo.id\">\n          <div v-if=\"subtodo.judge == true\">\n            <input type=\"checkbox\" v-model=\"subtodo.isComplete\" v-on:click=\"updateIsCompleteTodo(key, subtodo, subkey)\">\n            <p>{{ subtodo.subName }}</p>\n            <!-- <p>{{ subtodo.subName }}</p> -->\n          </div>\n        </div>\n\n        <div>\n          <input type=\"text\" v-model=\"newSubTodoName\">\n          <input type=\"date\" v-model=\"subDeadline\">\n          <button type=\"submit\" v-on:click=\"createSubTodo(key)\">サブタスク作成</button>\n        </div>\n      </li>\n      <button type=\"submit\" v-on:click=\"deleteTodo(key)\">削除</button>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport firebase from \"firebase\";\n\nexport default {\n  name: \"Task\",\n  data() {\n    return {\n      database: null,\n      todosRef: null,\n      newTodoName: \"\",\n      newSubTodoName: \"\",\n      deadline:\"\",\n      subDeadline: \"\",\n      showTodoType: \"all\",\n      todos: []\n    };\n  },\n  created: function() {\n    this.db = firebase.database();\n    this.uid = firebase.auth().currentUser.uid;\n    // refはreferenceでデータベースにある特定の項目を指し示すメソッド\n    this.todosRef = this.db.ref(\"todos/\" + this.uid);\n    this.test = this.db.ref(\"todos/\" + this.uid + \"/\")\n    // データに変更があると実行されるfunction\n    var _this = this;\n    this.todosRef.on('value', function(snapshot) {\n      _this.todos = snapshot.val(); // データに変化が起きたときに再取得する\n    });\n  },\n  computed: {\n    filteredTodos: function () {\n      var showComplete = false;\n      if (this.showTodoType == 'complete') {\n        showComplete = true;\n      }\n      let filterTodos = {},\n          filterSubTodos = {};\n      for (let key in this.todos) {\n        let todo = this.todos[key];\n        filterTodos[key] = todo;\n        for (let subkey in todo.subTasks) {\n          let subtodo = todo.subTasks[subkey];\n          // allの場合は全て表示\n          if (this.showTodoType == 'all') {\n            subtodo.judge = true;\n            filterSubTodos[subkey] = subtodo;\n          }\n          // completeの場合はチェックがついているもの、activeの時はチェックがついていないものを表示\n          else if(subtodo.isComplete == showComplete){\n            subtodo.judge = true;\n            filterSubTodos[subkey] = subtodo;\n          } else{\n            subtodo.judge = false;\n          }\n        }\n      }\n      return filterTodos;\n    },\n    taskNumber: function () {\n      let count = 0;\n      for (var key in this.todos) {\n        var todo = this.todos[key];\n        // console.log(todo.id);\n        if (this.showTodoType == 'all'){\n          console.log(todo);\n          console.log(todo.subTasks);\n          count += 1;\n          for (var subkey in todo.subTasks) {\n            console.log(subkey);\n            var subtodo = todo.subTasks[subkey];\n            console.log(subtodo);\n            console.log(subtodo.subName);\n            count += 1;\n          }\n        } else if (this.showTodoType == 'active'){\n          if (todo.isComplete == false){\n            count += 1;\n          }\n        } else {\n          if (todo.isComplete == true){\n            count += 1;\n          }\n        }\n      }\n      return count;\n    }\n  },\n  methods: {\n    // DBのtodos/[uid]/以下にデータを格納していく。\n    createTodo: function() {\n      if (this.newTodoName == \"\") { return; }\n      this.todosRef.push({\n        name: this.newTodoName,\n        date: this.deadline,\n      })\n      this.newTodoName = \"\";\n    },\n    createSubTodo: function(key) {\n      if (this.newSubTodoName == \"\") { return; }\n      this.todosRef.child(key).child(\"/subTasks\").push({\n        subName: this.newSubTodoName,\n        isComplete: false,\n        subDate: this.subDeadline,\n        pairingId: key,\n        judge: false,\n      })\n      this.newSubTodoName = \"\";\n    },\n    updateIsCompleteTodo: function(key, subtodo, subkey) {\n      subtodo.isComplete = !subtodo.isComplete;\n      // DB内のデータを更新する\n      var updates = {};\n      // todo.idで変更するtodoタスクを指定し、dataが更新されたtodoを挿入する\n      updates[subkey] = subtodo;\n      this.todosRef.child(key).child(\"/subTasks\").update(updates)\n    },\n    // updateIsCompleteSubTodo: function(todo, key) {\n    //   todo.subTasks.isComplete = !todo.subTasks.isComplete;\n    //   // DB内のデータを更新する\n    //   var updates = {};\n    //   // todo.idで変更するtodoタスクを指定し、dataが更新されたtodoを挿入する\n    //   updates[key] = todo.subTasks;\n    //   this.todosRef.update(updates)\n    // },\n    // todoの削除\n    deleteTodo: function(key) {\n      this.todosRef.child(key).remove();\n    }\n  }\n};\n</script>\n\n<style>\n.card {\n  background-color: #c8d2e3;\n}\n\n.subcard {\n  background-color: #a6b6d5;\n}\n\n</style>\n"],"sourceRoot":"src/components"}]}