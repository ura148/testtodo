{"remainingRequest":"/Users/uratomo/test/node_modules/babel-loader/lib/index.js!/Users/uratomo/test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/uratomo/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/uratomo/test/src/components/Task.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/uratomo/test/src/components/Task.vue","mtime":1593762707088},{"path":"/Users/uratomo/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGZpcmViYXNlIGZyb20gImZpcmViYXNlIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJUYXNrIiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZGF0YWJhc2U6IG51bGwsCiAgICAgIHRvZG9zUmVmOiBudWxsLAogICAgICBuZXdUb2RvTmFtZTogIiIsCiAgICAgIGRlYWRsaW5lOiAiIiwKICAgICAgc2hvd1RvZG9UeXBlOiAiYWxsIiwKICAgICAgdG9kb3M6IFtdCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuZGF0YWJhc2UgPSBmaXJlYmFzZS5kYXRhYmFzZSgpOwogICAgdGhpcy51aWQgPSBmaXJlYmFzZS5hdXRoKCkuY3VycmVudFVzZXIudWlkOyAvLyByZWbjga9yZWZlcmVuY2Xjgafjg4fjg7zjgr/jg5njg7zjgrnjgavjgYLjgovnibnlrprjga7poIXnm67jgpLmjIfjgZfnpLrjgZnjg6Hjgr3jg4Pjg4kKCiAgICB0aGlzLnRvZG9zUmVmID0gdGhpcy5kYXRhYmFzZS5yZWYoInRvZG9zLyIgKyB0aGlzLnVpZCk7IC8vIOODh+ODvOOCv+OBq+WkieabtOOBjOOBguOCi+OBqOWun+ihjOOBleOCjOOCi2Z1bmN0aW9uCgogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICB0aGlzLnRvZG9zUmVmLm9uKCd2YWx1ZScsIGZ1bmN0aW9uIChzbmFwc2hvdCkgewogICAgICBfdGhpcy50b2RvcyA9IHNuYXBzaG90LnZhbCgpOyAvLyDjg4fjg7zjgr/jgavlpInljJbjgYzotbfjgY3jgZ/jgajjgY3jgavlho3lj5blvpfjgZnjgosKICAgIH0pOwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC8vIOODleOCo+ODq+OCv+ODvOOBruWun+ijhXNob3dUb2RvVHlwZeOBjOWkieabtOOBleOCjOOCi+OBqOWun+ihjOOBleOCjOOCiwogICAgZmlsdGVyZWRUb2RvczogZnVuY3Rpb24gZmlsdGVyZWRUb2RvcygpIHsKICAgICAgaWYgKHRoaXMuc2hvd1RvZG9UeXBlID09ICdhbGwnKSB7CiAgICAgICAgY29uc29sZS5sb2codGhpcy50b2Rvcyk7CiAgICAgICAgcmV0dXJuIHRoaXMudG9kb3M7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdmFyIHNob3dDb21wbGV0ZSA9IGZhbHNlOwoKICAgICAgICBpZiAodGhpcy5zaG93VG9kb1R5cGUgPT0gJ2NvbXBsZXRlJykgewogICAgICAgICAgc2hvd0NvbXBsZXRlID0gdHJ1ZTsKICAgICAgICB9CgogICAgICAgIHZhciBmaWx0ZXJUb2RvcyA9IHt9OwoKICAgICAgICBmb3IgKHZhciBrZXkgaW4gdGhpcy50b2RvcykgewogICAgICAgICAgdmFyIHRvZG8gPSB0aGlzLnRvZG9zW2tleV07CgogICAgICAgICAgaWYgKHRvZG8uaXNDb21wbGV0ZSA9PSBzaG93Q29tcGxldGUpIHsKICAgICAgICAgICAgZmlsdGVyVG9kb3Nba2V5XSA9IHRvZG87CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGZpbHRlclRvZG9zW2tleV0pOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgY29uc29sZS5sb2coZmlsdGVyVG9kb3MpOwogICAgICAgIHJldHVybiBmaWx0ZXJUb2RvczsKICAgICAgfQogICAgfSwKICAgIHRhc2tOdW1iZXI6IGZ1bmN0aW9uIHRhc2tOdW1iZXIoKSB7CiAgICAgIHZhciBjb3VudCA9IDA7CgogICAgICBmb3IgKHZhciBrZXkgaW4gdGhpcy50b2RvcykgewogICAgICAgIHZhciB0b2RvID0gdGhpcy50b2Rvc1trZXldOwoKICAgICAgICBpZiAodGhpcy5zaG93VG9kb1R5cGUgPT0gJ2FsbCcpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKGtleSk7CiAgICAgICAgICBjb3VudCArPSAxOwogICAgICAgICAgY29uc29sZS5sb2coY291bnQpOwogICAgICAgIH0gZWxzZSBpZiAodGhpcy5zaG93VG9kb1R5cGUgPT0gJ2FjdGl2ZScpIHsKICAgICAgICAgIGlmICh0b2RvLmlzQ29tcGxldGUgPT0gZmFsc2UpIHsKICAgICAgICAgICAgY291bnQgKz0gMTsKICAgICAgICAgICAgY29uc29sZS5sb2coY291bnQpOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBpZiAodG9kby5pc0NvbXBsZXRlID09IHRydWUpIHsKICAgICAgICAgICAgY291bnQgKz0gMTsKICAgICAgICAgIH0KICAgICAgICB9IC8vIHZhciB0b2RvID0gdGhpcy50b2Rvc1trZXldOwogICAgICAgIC8vIGlmICh0b2RvLmlzQ29tcGxldGUgPT0gc2hvd0NvbXBsZXRlKSB7CiAgICAgICAgLy8gICBmaWx0ZXJUb2Rvc1trZXldID0gdG9kbzsKICAgICAgICAvLyAgIGNvbnNvbGUubG9nKGZpbHRlclRvZG9zW2tleV0pOwogICAgICAgIC8vIH0KCiAgICAgIH0KCiAgICAgIHJldHVybiBjb3VudDsgLy8gdmFyIHNob3dDb21wbGV0ZSA9IGZhbHNlOwogICAgICAvLyBpZiAodGhpcy5zaG93VG9kb1R5cGUgPT0gJ2NvbXBsZXRlJykgewogICAgICAvLyAgIHNob3dDb21wbGV0ZSA9IHRydWUKICAgICAgLy8gfQogICAgICAvLyB2YXIgZmlsdGVyVG9kb3MgPSB7fTsKICAgICAgLy8gZm9yICh2YXIga2V5IGluIHRoaXMudG9kb3MpIHsKICAgICAgLy8gICB2YXIgdG9kbyA9IHRoaXMudG9kb3Nba2V5XTsKICAgICAgLy8gICBpZiAodG9kby5pc0NvbXBsZXRlID09IHNob3dDb21wbGV0ZSkgewogICAgICAvLyAgICAgZmlsdGVyVG9kb3Nba2V5XSA9IHRvZG87CiAgICAgIC8vICAgICBjb25zb2xlLmxvZyhmaWx0ZXJUb2Rvc1trZXldKTsKICAgICAgLy8gICB9CiAgICAgIC8vIH0KICAgIH0gLy8gcmVtYWluaW5nOiBmdW5jdGlvbigpIHsKICAgIC8vIAl2YXIgY291bnQgPSAwOwogICAgLy8gCXZhciB0b2RvcyA9IHRoaXMudG9kb3M7CiAgICAvLyAJdmFyIGxlbmd0aCA9IHRvZG9zLmxlbmd0aDsKICAgIC8vICAgY29uc29sZS5sb2cobGVuZ3RoKTsKICAgIC8vIGZvcih2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykgewogICAgLy8gCWlmKCF0b2Rvc1tpXS5kb25lKSB7CiAgICAvLyAJCWNvdW50Kys7CiAgICAvLyAJfQogICAgLy8gfQogICAgLy8gcmV0dXJuIGNvdW50OwoKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIERC44GudG9kb3MvW3VpZF0v5Lul5LiL44Gr44OH44O844K/44KS5qC857SN44GX44Gm44GE44GPCiAgICBjcmVhdGVUb2RvOiBmdW5jdGlvbiBjcmVhdGVUb2RvKCkgewogICAgICBpZiAodGhpcy5uZXdUb2RvTmFtZSA9PSAiIikgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdGhpcy50b2Rvc1JlZi5wdXNoKHsKICAgICAgICBuYW1lOiB0aGlzLm5ld1RvZG9OYW1lLAogICAgICAgIGlzQ29tcGxldGU6IGZhbHNlLAogICAgICAgIGRhdGU6IHRoaXMuZGVhZGxpbmUKICAgICAgfSk7CiAgICAgIHRoaXMubmV3VG9kb05hbWUgPSAiIjsKICAgIH0sCiAgICAvLyDlrozkuobjg7vmnKrlrozkuobjga7lgKTjga7mm7TmlrAKICAgIHVwZGF0ZUlzQ29tcGxldGVUb2RvOiBmdW5jdGlvbiB1cGRhdGVJc0NvbXBsZXRlVG9kbyh0b2RvLCBrZXkpIHsKICAgICAgdG9kby5pc0NvbXBsZXRlID0gIXRvZG8uaXNDb21wbGV0ZTsgLy8gRELlhoXjga7jg4fjg7zjgr/jgpLmm7TmlrDjgZnjgosKCiAgICAgIHZhciB1cGRhdGVzID0ge307IC8vIHRvZG8uaWTjgaflpInmm7TjgZnjgot0b2Rv44K/44K544Kv44KS5oyH5a6a44GX44CBZGF0YeOBjOabtOaWsOOBleOCjOOBn3RvZG/jgpLmjL/lhaXjgZnjgosKCiAgICAgIHVwZGF0ZXNba2V5XSA9IHRvZG87CiAgICAgIHRoaXMudG9kb3NSZWYudXBkYXRlKHVwZGF0ZXMpOwogICAgfSwKICAgIC8vIHRvZG/jga7liYrpmaQKICAgIGRlbGV0ZVRvZG86IGZ1bmN0aW9uIGRlbGV0ZVRvZG8oa2V5KSB7CiAgICAgIHRoaXMudG9kb3NSZWYuY2hpbGQoa2V5KS5yZW1vdmUoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Task.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"task\">\n     <h2>タスク</h2>\n    <div>\n      <!-- 初期はVーmodelで\"newTodoName\"を入れているが空白、故にタスク作った後に空白にしないとミスが起こる -->\n      <input type=\"text\" v-model=\"newTodoName\">\n      <input type=\"date\" v-model=\"deadline\">\n      <button type=\"submit\" v-on:click=\"createTodo()\">タスク作成</button>\n    </div>\n    <ul>\n      <li><button type=\"submit\" v-on:click=\"showTodoType = 'all'\">すべて</button></li>\n      <li><button type=\"submit\" v-on:click=\"showTodoType = 'active'\">未完タスク一覧</button></li>\n      <li><button type=\"submit\" v-on:click=\"showTodoType = 'complete'\">完了タスク一覧</button></li>\n    </ul>\n    <!-- todoの一覧表示 -->\n    <p>{{ taskNumber + \"個のタスク\" }}</p>\n    <ul v-for=\"(todo, key) in filteredTodos\" :key=\"todo.id\">\n      <li class=\"card\">\n        <input type=\"checkbox\" v-model=\"todo.isComplete\" v-on:click=\"updateIsCompleteTodo(todo, key)\">\n        <p>{{ todo.name }}</p>\n        <p>{{ todo.date }}</p>\n      </li>\n      <button type=\"submit\" v-on:click=\"deleteTodo(key)\">削除</button>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport firebase from \"firebase\";\n\nexport default {\n  name: \"Task\",\n  data() {\n    return {\n      database: null,\n      todosRef: null,\n      newTodoName: \"\",\n      deadline:\"\",\n      showTodoType: \"all\",\n      todos: []\n    };\n  },\n  created: function() {\n    this.database = firebase.database();\n    this.uid = firebase.auth().currentUser.uid;\n    // refはreferenceでデータベースにある特定の項目を指し示すメソッド\n    this.todosRef = this.database.ref(\"todos/\" + this.uid);\n    // データに変更があると実行されるfunction\n    var _this = this;\n    this.todosRef.on('value', function(snapshot) {\n      _this.todos = snapshot.val(); // データに変化が起きたときに再取得する\n    });\n  },\n  computed: {\n    // フィルターの実装showTodoTypeが変更されると実行される\n    filteredTodos: function () {\n      if (this.showTodoType == 'all') {\n        console.log(this.todos);\n        return this.todos;\n      } else {\n        var showComplete = false;\n        if (this.showTodoType == 'complete') {\n          showComplete = true\n        }\n        var filterTodos = {};\n\n        for (var key in this.todos) {\n          var todo = this.todos[key];\n          if (todo.isComplete == showComplete) {\n            filterTodos[key] = todo;\n            console.log(filterTodos[key]);\n          }\n        }\n        console.log(filterTodos);\n        return filterTodos;\n      }\n    },\n    taskNumber: function () {\n      let count = 0;\n      for (var key in this.todos) {\n        var todo = this.todos[key];\n        if (this.showTodoType == 'all'){\n          console.log(key);\n          count += 1;\n          console.log(count);\n        } else if (this.showTodoType == 'active'){\n          if (todo.isComplete == false){\n            count += 1;\n            console.log(count);\n          }    \n        } else {\n          if (todo.isComplete == true){\n            count += 1;\n          }\n        }\n        // var todo = this.todos[key];\n        // if (todo.isComplete == showComplete) {\n        //   filterTodos[key] = todo;\n        //   console.log(filterTodos[key]);\n        // }\n      }\n      return count;\n\n      // var showComplete = false;\n      // if (this.showTodoType == 'complete') {\n      //   showComplete = true\n      // }\n      // var filterTodos = {};\n      // for (var key in this.todos) {\n      //   var todo = this.todos[key];\n      //   if (todo.isComplete == showComplete) {\n      //     filterTodos[key] = todo;\n      //     console.log(filterTodos[key]);\n      //   }\n      // }\n    },\n    // remaining: function() {\n\t\t// \tvar count = 0;\n\t\t// \tvar todos = this.todos;\n\t\t// \tvar length = todos.length;\n    //   console.log(length);\n\t\t\t// for(var i = 0; i < length; i++) {\n\t\t\t// \tif(!todos[i].done) {\n\t\t\t// \t\tcount++;\n\t\t\t// \t}\n\t\t\t// }\n\t\t\t// return count;\n  },\n  methods: {\n    // DBのtodos/[uid]/以下にデータを格納していく\n    createTodo: function() {\n      if (this.newTodoName == \"\") { return; }\n      this.todosRef.push({\n        name: this.newTodoName,\n        isComplete: false,\n        date: this.deadline,\n      })\n      this.newTodoName = \"\";\n    },\n    // 完了・未完了の値の更新\n    updateIsCompleteTodo: function(todo, key) {\n      todo.isComplete = !todo.isComplete;\n      // DB内のデータを更新する\n      var updates = {};\n      // todo.idで変更するtodoタスクを指定し、dataが更新されたtodoを挿入する\n      updates[key] = todo;\n      this.todosRef.update(updates)\n    },\n    // todoの削除\n    deleteTodo: function(key) {\n      this.todosRef.child(key).remove();\n    }\n  }\n};\n</script>\n\n<style>\n\n</style>\n"],"sourceRoot":"src/components"}]}