{"remainingRequest":"/Users/uratomo/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/uratomo/test/src/components/Task.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/uratomo/test/src/components/Task.vue","mtime":1594620551738},{"path":"/Users/uratomo/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBmaXJlYmFzZSBmcm9tICJmaXJlYmFzZSI7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlRhc2siLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBhY3RpdmV0YWI6IDAsCiAgICAgIGRhdGFiYXNlOiBudWxsLAogICAgICB0b2Rvc1JlZjogbnVsbCwKICAgICAgbmV3VG9kb05hbWU6ICIiLAogICAgICBuZXdTdWJUb2RvTmFtZTogIiIsCiAgICAgIGRlYWRsaW5lOiIiLAogICAgICBzdWJEZWFkbGluZTogIiIsCiAgICAgIHNob3dUb2RvVHlwZTogImFsbCIsCiAgICAgIHNlbGVjdGVkOiAnJywKICAgICAgb3B0aW9uczogWwogICAgICAgIHsgdGV4dDogJ3ByaXZhdGUnLCB2YWx1ZTogJ3ByaXZhdGUnIH0sCiAgICAgICAgeyB0ZXh0OiAncmVjcnVpdCcsIHZhbHVlOiAncmVjcnVpdCcgfSwKICAgICAgICB7IHRleHQ6ICdidWNrZXQgbGlzdCcsIHZhbHVlOiAnYnVja2V0IGxpc3QnIH0KICAgICAgXSwKICAgICAgdG9kb3M6IFtdCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24oKSB7CiAgICB0aGlzLmRiID0gZmlyZWJhc2UuZGF0YWJhc2UoKTsKICAgIHRoaXMudWlkID0gZmlyZWJhc2UuYXV0aCgpLmN1cnJlbnRVc2VyLnVpZDsKICAgIC8vIHJlZuOBr3JlZmVyZW5jZeOBp+ODh+ODvOOCv+ODmeODvOOCueOBq+OBguOCi+eJueWumuOBrumgheebruOCkuaMh+OBl+ekuuOBmeODoeOCveODg+ODiQogICAgdGhpcy50b2Rvc1JlZiA9IHRoaXMuZGIucmVmKCJ0b2Rvcy8iICsgdGhpcy51aWQpOwogICAgdGhpcy50ZXN0ID0gdGhpcy5kYi5yZWYoInRvZG9zLyIgKyB0aGlzLnVpZCArICIvIikKICAgIC8vIOODh+ODvOOCv+OBq+WkieabtOOBjOOBguOCi+OBqOWun+ihjOOBleOCjOOCi2Z1bmN0aW9uCiAgICB2YXIgX3RoaXMgPSB0aGlzOwogICAgdGhpcy50b2Rvc1JlZi5vbigndmFsdWUnLCBmdW5jdGlvbihzbmFwc2hvdCkgewogICAgICBfdGhpcy50b2RvcyA9IHNuYXBzaG90LnZhbCgpOyAvLyDjg4fjg7zjgr/jgavlpInljJbjgYzotbfjgY3jgZ/jgajjgY3jgavlho3lj5blvpfjgZnjgosKICAgIH0pOwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGZpbHRlcmVkVG9kb3M6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIHNob3dDb21wbGV0ZSA9IGZhbHNlOwogICAgICBpZiAodGhpcy5zaG93VG9kb1R5cGUgPT0gJ2NvbXBsZXRlJykgewogICAgICAgIHNob3dDb21wbGV0ZSA9IHRydWU7CiAgICAgIH0KICAgICAgZm9yIChsZXQga2V5IGluIHRoaXMudG9kb3MpIHsKICAgICAgICBsZXQgdGFza0NhdGVnb3J5ID0gdGhpcy50b2Rvc1trZXldOwogICAgICAgIC8vIGNvbnNvbGUubG9nKHRhc2tDYXRlZ29yeSk7CiAgICAgICAgZm9yIChsZXQgc3Via2V5IGluIHRhc2tDYXRlZ29yeSkgewogICAgICAgICAgbGV0IGxpc3QgPSB0YXNrQ2F0ZWdvcnlbc3Via2V5XTsKICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGxpc3QpOwogICAgICAgICAgZm9yIChsZXQgc3Vic3Via2V5IGluIGxpc3Quc3ViVGFza3MpIHsKICAgICAgICAgICAgbGV0IHN1YnRvZG8gPSBsaXN0LnN1YlRhc2tzW3N1YnN1YmtleV07CiAgICAgICAgICAgICBpZiAodGhpcy5zaG93VG9kb1R5cGUgPT0gJ2FsbCcpIHsKICAgICAgICAgICAgICAgc3VidG9kby50b2RvU3RhdHVzID0gdHJ1ZTsKICAgICAgICAgICAgIH0KICAgICAgICAgICAgICBlbHNlIGlmKHN1YnRvZG8uaXNDb21wbGV0ZSA9PSBzaG93Q29tcGxldGUpIHsKICAgICAgICAgICAgICAgIHN1YnRvZG8udG9kb1N0YXR1cyA9IHRydWU7CiAgICAgICAgICAgICAgfWVsc2UgewogICAgICAgICAgICAgICAgc3VidG9kby50b2RvU3RhdHVzID0gZmFsc2U7CiAgICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgICByZXR1cm4gdGhpcy50b2RvczsKICAgIH0sCiAgICB0YXNrTnVtYmVyOiBmdW5jdGlvbiAoKSB7CiAgICAgIGxldCBzaG93Q29tcGxldGUgPSBmYWxzZSwKICAgICAgICAgIGFsbENvdW50ID0gMCwKICAgICAgICAgIGNvdW50ID0gMDsKICAgICAgaWYgKHRoaXMuc2hvd1RvZG9UeXBlID09ICdjb21wbGV0ZScpIHsKICAgICAgICBzaG93Q29tcGxldGUgPSB0cnVlOwogICAgICB9CiAgICAgIGZvciAobGV0IGtleSBpbiB0aGlzLnRvZG9zKSB7CiAgICAgICAgbGV0IHRhc2tDYXRlZ29yeSA9IHRoaXMudG9kb3Nba2V5XTsKICAgICAgICBmb3IgKGxldCBzdWJrZXkgaW4gdGFza0NhdGVnb3J5KSB7CiAgICAgICAgICBsZXQgbGlzdCA9IHRhc2tDYXRlZ29yeVtzdWJrZXldOwogICAgICAgICAgZm9yIChsZXQgc3Vic3Via2V5IGluIGxpc3Quc3ViVGFza3MpIHsKICAgICAgICAgICAgbGV0IHN1YnRvZG8gPSBsaXN0LnN1YlRhc2tzW3N1YnN1YmtleV07CiAgICAgICAgICAgIGNvbnNvbGUubG9nKHN1YnRvZG8pOwogICAgICAgICAgICBhbGxDb3VudCArPSAxOwogICAgICAgICAgICBpZiAodGhpcy5zaG93VG9kb1R5cGUgPT0gJ2FsbCcpOwogICAgICAgICAgICBlbHNlIGlmIChzdWJ0b2RvLmlzQ29tcGxldGUgPT0gc2hvd0NvbXBsZXRlKSB7CiAgICAgICAgICAgICAgY291bnQgKz0gMTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgICBpZiAodGhpcy5zaG93VG9kb1R5cGUgPT0gJ2FsbCcpIHsKICAgICAgICByZXR1cm4gYWxsQ291bnQ7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIGNvdW50OwogICAgICB9CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBjcmVhdGVMaXN0OiBmdW5jdGlvbigpIHsKICAgICAgaWYgKHRoaXMubmV3VG9kb05hbWUgPT0gIiIpIHsgcmV0dXJuOyB9CiAgICAgIGlmICh0aGlzLnNlbGVjdGVkID09ICIiKXtyZXR1cm47IH0KICAgICAgZWxzZSAgewogICAgICAgIHRoaXMudG9kb3NSZWYuY2hpbGQodGhpcy5zZWxlY3RlZCkucHVzaCh7CiAgICAgICAgICBoYXZlY2hpbGRyZW46IDAsCiAgICAgICAgICBuYW1lOiB0aGlzLm5ld1RvZG9OYW1lLAogICAgICAgICAgZGF0ZTogdGhpcy5kZWFkbGluZSwKICAgICAgICAgIGNhdGVnb3J5OiB0aGlzLnNlbGVjdGVkLAogICAgICAgICAgYWNoaWV2ZW1lbnRSYXRlOiAwLAogICAgICAgIH0pCiAgICAgIH0KICAgICAgdGhpcy5uZXdUb2RvTmFtZSA9ICIiOwogICAgfSwKICAgIGNyZWF0ZVN1YlRvZG86IGZ1bmN0aW9uKGxpc3QsIHN1YmtleSkgewogICAgICBjb25zb2xlLmxvZyhsaXN0LmNhdGVnb3J5KTsKICAgICAgaWYgKHRoaXMubmV3U3ViVG9kb05hbWUgPT0gIiIpIHsgcmV0dXJuOyB9CiAgICAgIGlmIChsaXN0LmNhdGVnb3J5ID09ICdwcml2YXRlJykgewogICAgICAgIHRoaXMudG9kb3NSZWYuY2hpbGQobGlzdC5jYXRlZ29yeSkuY2hpbGQoc3Via2V5KS5jaGlsZCgiL3N1YlRhc2tzIikucHVzaCh7CiAgICAgICAgICBzdWJOYW1lOiB0aGlzLm5ld1N1YlRvZG9OYW1lLAogICAgICAgICAgaXNDb21wbGV0ZTogZmFsc2UsCiAgICAgICAgICBzdWJEYXRlOiB0aGlzLnN1YkRlYWRsaW5lLAogICAgICAgICAgdG9kb1N0YXR1czogZmFsc2UsCiAgICAgICAgfSkKICAgICAgfSBlbHNlIGlmIChsaXN0LmNhdGVnb3J5ID09ICdyZWNydWl0JykgewogICAgICAgIHRoaXMudG9kb3NSZWYuY2hpbGQobGlzdC5jYXRlZ29yeSkuY2hpbGQoc3Via2V5KS5jaGlsZCgiL3N1YlRhc2tzIikucHVzaCh7CiAgICAgICAgICBzdWJOYW1lOiB0aGlzLm5ld1N1YlRvZG9OYW1lLAogICAgICAgICAgaXNDb21wbGV0ZTogZmFsc2UsCiAgICAgICAgICBzdWJEYXRlOiB0aGlzLnN1YkRlYWRsaW5lLAogICAgICAgICAgdG9kb1N0YXR1czogZmFsc2UsCiAgICAgICAgfSkKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnRvZG9zUmVmLmNoaWxkKGxpc3QuY2F0ZWdvcnkpLmNoaWxkKHN1YmtleSkuY2hpbGQoIi9zdWJUYXNrcyIpLnB1c2goewogICAgICAgICAgc3ViTmFtZTogdGhpcy5uZXdTdWJUb2RvTmFtZSwKICAgICAgICAgIGlzQ29tcGxldGU6IGZhbHNlLAogICAgICAgICAgc3ViRGF0ZTogdGhpcy5zdWJEZWFkbGluZSwKICAgICAgICAgIHRvZG9TdGF0dXM6IGZhbHNlLAogICAgICAgIH0pCiAgICAgIH0KICAgICAgdGhpcy5uZXdTdWJUb2RvTmFtZSA9ICIiOwogICAgfSwKICAgIHVwZGF0ZUlzQ29tcGxldGVUb2RvOiBmdW5jdGlvbihzdWJrZXksIHN1YnRvZG8sIGxpc3QsIHN1YnN1YmtleSkgewogICAgICBzdWJ0b2RvLmlzQ29tcGxldGUgPSAhc3VidG9kby5pc0NvbXBsZXRlOwogICAgICB2YXIgdXBkYXRlcyA9IHt9OwogICAgICB1cGRhdGVzW3N1YnN1YmtleV0gPSBzdWJ0b2RvOwogICAgICBjb25zb2xlLmxvZyhsaXN0KTsKICAgICAgdGhpcy50b2Rvc1JlZi5jaGlsZChsaXN0LmNhdGVnb3J5KS5jaGlsZChzdWJrZXkpLmNoaWxkKCIvc3ViVGFza3MiKS51cGRhdGUodXBkYXRlcykKICAgIH0sCiAgICBkZWxldGVMaXN0czogZnVuY3Rpb24oa2V5KSB7CiAgICAgIHRoaXMudG9kb3NSZWYuY2hpbGQoa2V5KS5yZW1vdmUoKTsKICAgIH0sCiAgICAvLyB0b2Rv44Gu5YmK6ZmkCiAgICBkZWxldGVUb2RvczogZnVuY3Rpb24oc3Via2V5LCBsaXN0LCBzdWJzdWJrZXkpIHsKICAgICAgdGhpcy50b2Rvc1JlZi5jaGlsZChsaXN0LmNhdGVnb3J5KS5jaGlsZChzdWJrZXkpLmNoaWxkKCIvc3ViVGFza3MiKS5jaGlsZChzdWJzdWJrZXkpLnJlbW92ZSgpOwogICAgfSwKICAgIGFjaGlldmVtZW50UmF0ZTogZnVuY3Rpb24gKCkgewogICAgICBmb3IgKGxldCBrZXkgaW4gdGhpcy50b2RvcykgewogICAgICAgIGxldCB0YXNrQ2F0ZWdvcnkgPSB0aGlzLnRvZG9zW2tleV07CiAgICAgICAgZm9yIChsZXQgc3Via2V5IGluIHRhc2tDYXRlZ29yeSkgewogICAgICAgICAgbGV0IGxpc3QgPSB0YXNrQ2F0ZWdvcnlbc3Via2V5XSwKICAgICAgICAgICAgICBudW1lcmF0b3IgPSAwLAogICAgICAgICAgICAgIGRlbm9taW5hdG9yID0gMDsKICAgICAgICAgZm9yIChsZXQgc3Vic3Via2V5IGluIGxpc3Quc3ViVGFza3MpIHsKICAgICAgICAgICBsZXQgc3VidG9kbyA9IGxpc3Quc3ViVGFza3Nbc3Vic3Via2V5XTsKICAgICAgICAgICBkZW5vbWluYXRvciArPSAxOwogICAgICAgICAgICAgaWYgKHN1YnRvZG8uaXNDb21wbGV0ZSA9PSB0cnVlKXsKICAgICAgICAgICAgICAgbnVtZXJhdG9yICs9IDE7CiAgICAgICAgICAgICB9CiAgICAgICAgICAgbGlzdC5hY2hpZXZlbWVudFJhdGUgPSBudW1lcmF0b3IgLyBkZW5vbWluYXRvciAqIDEwMDsKICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQogIH0KfTsK"},{"version":3,"sources":["Task.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"Task.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"task\">\n    <header>\n      <h1>CategoList</h1>\n    </header>\n\n    <!-- Category filter radio button -->\n    <div class=\"tabs\">\n      <button v-on:click=\"activetab=0\" v-bind:class=\"[ activetab === 0 ? 'active' : '' ]\" class=\"button-category\">All</button>\n      <button v-on:click=\"activetab=1\" v-bind:class=\"[ activetab === 1 ? 'active' : '' ]\" class=\"button-category\">Recruit</button>\n      <button v-on:click=\"activetab=2\" v-bind:class=\"[ activetab === 2 ? 'active' : '' ]\" class=\"button-category\">Private</button>\n      <button v-on:click=\"activetab=3\" v-bind:class=\"[ activetab === 3 ? 'active' : '' ]\" class=\"button-category\">Bucket List</button>\n    </div>\n\n    <div class=\"content\">\n      <div v-show=\"activetab === 0\" class=\"tabcontent\">\n        <ul>\n          <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'all'; achievementRate()\">すべて</button></li>\n          <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'active'; achievementRate()\">未完タスク一覧</button></li>\n          <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'complete'; achievementRate()\">完了タスク一覧</button></li>\n        </ul>\n        <!-- listの一覧表示 -->\n        <p>{{ taskNumber + \"個のタスク\" }}</p>\n\n        <router-link to=\"/calendar\">Calendar</router-link>\n\n        <div v-for=\"(taskCategory, key) in filteredTodos\" :key=\"taskCategory.id\">\n          <div class=\"card\">\n            <p>{{ key }}</p>\n              <div v-for=\"(list, subkey) in taskCategory\" :key=\"list.id\" class=\"subcard\">\n                <p>{{list.name}}</p>\n                <p>{{ list.achievementRate + \"%完了\" }}</p>\n                <ul>\n                  <li v-for=\"(subtodo, subsubkey) in list.subTasks\" :key=\"subtodo.id\">\n                    <div v-if=\"subtodo.todoStatus == true\" class=\"todo\">\n                      <input type=\"checkbox\" v-model=\"subtodo.isComplete\">\n                      <label v-on:click=\"updateIsCompleteTodo(subkey, subtodo, list, subsubkey)\">{{subtodo.subName}}</label>\n                      <p>{{subtodo.subDate}}</p>\n                      <button type=\"submit\" v-on:click=\"deleteTodos(subkey, list, subsubkey)\">削除</button>\n                    </div>\n                  </li>\n                </ul>\n\n                <div>\n                  <input type=\"text\" v-model=\"newSubTodoName\">\n                  <input type=\"date\" v-model=\"subDeadline\">\n                  <button type=\"button\" v-on:click=\"createSubTodo(list, subkey)\">サブタスク作成</button>\n                </div>\n              </div>\n          </div>\n          <button type=\"submit\" v-on:click=\"deleteLists(key)\">削除</button>\n        </div>\n      </div>\n      <div v-show=\"activetab === 1\" class=\"tabcontent\">\n        <ul>\n          <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'all'; achievementRate()\">すべて</button></li>\n          <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'active'; achievementRate()\">未完タスク一覧</button></li>\n          <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'complete'; achievementRate()\">完了タスク一覧</button></li>\n        </ul>\n        <!-- listの一覧表示 -->\n        <p>{{ taskNumber + \"個のタスク\" }}</p>\n\n        <router-link to=\"/calendar\">Calendar</router-link>\n\n        <div v-for=\"(taskCategory, key) in filteredTodos\" :key=\"taskCategory.id\">\n          <div v-if=\"key == 'recruit'\" class=\"card\">\n            <p>{{ key }}</p>\n              <div v-for=\"(list, subkey) in taskCategory\" :key=\"list.id\" class=\"subcard\">\n                <p>{{list.name}}</p>\n                <p>{{ list.achievementRate + \"%完了\" }}</p>\n                <ul>\n                  <li v-for=\"(subtodo, subsubkey) in list.subTasks\" :key=\"subtodo.id\" class=\"todo\">\n                    <input v-if=\"subtodo.todoStatus == true\" type=\"checkbox\" v-model=\"subtodo.isComplete\">\n                    <label v-if=\"subtodo.todoStatus == true\" v-on:click=\"updateIsCompleteTodo(subkey, subtodo, list, subsubkey)\">{{subtodo.subName}}</label>\n                    {{subtodo.subDate}}\n                    <button type=\"button\" name=\"button\">タスク再編集</button>\n                    <button v-if=\"subtodo.todoStatus == true\" type=\"submit\" v-on:click=\"deleteTodos(subkey, list, subsubkey)\">削除</button>\n                  </li>\n                </ul>\n\n                <div>\n                  <input type=\"text\" v-model=\"newSubTodoName\">\n                  <input type=\"date\" v-model=\"subDeadline\">\n                  <button type=\"button\" v-on:click=\"createSubTodo(list, subkey)\">サブタスク作成</button>\n                </div>\n              </div>\n              <button type=\"submit\" v-on:click=\"deleteLists(key)\">削除</button>\n          </div>\n        </div>\n      </div>\n      <div v-show=\"activetab === 2\" class=\"tabcontent\">\n        <ul>\n          <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'all'; achievementRate()\">すべて</button></li>\n          <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'active'; achievementRate()\">未完タスク一覧</button></li>\n          <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'complete'; achievementRate()\">完了タスク一覧</button></li>\n        </ul>\n        <!-- listの一覧表示 -->\n        <p>{{ taskNumber + \"個のタスク\" }}</p>\n\n        <router-link to=\"/calendar\">Calendar</router-link>\n\n        <div v-for=\"(taskCategory, key) in filteredTodos\" :key=\"taskCategory.id\">\n          <div v-if=\"key == 'private'\" class=\"card\">\n            <p>{{ key }}</p>\n              <div v-for=\"(list, subkey) in taskCategory\" :key=\"list.id\" class=\"subcard\">\n                <p>{{list.name}}</p>\n                <p>{{ list.achievementRate + \"%完了\" }}</p>\n                <ul>\n                  <li v-for=\"(subtodo, subsubkey) in list.subTasks\" :key=\"subtodo.id\">\n                      <input v-if=\"subtodo.todoStatus == true\" type=\"checkbox\" v-model=\"subtodo.isComplete\">\n                      <label v-if=\"subtodo.todoStatus == true\" v-on:click=\"updateIsCompleteTodo(subkey, subtodo, list, subsubkey)\">{{subtodo.subName}}</label>\n                      p{{subtodo.subDate}}\n                      <button v-if=\"subtodo.todoStatus == true\" type=\"submit\" v-on:click=\"deleteTodos(subkey, list, subsubkey)\">削除</button>\n                  </li>\n                </ul>\n\n                <div>\n                  <input type=\"text\" v-model=\"newSubTodoName\">\n                  <input type=\"date\" v-model=\"subDeadline\">\n                  <button type=\"button\" v-on:click=\"createSubTodo(list, subkey)\">サブタスク作成</button>\n                </div>\n              </div>\n            <button type=\"submit\" v-on:click=\"deleteLists(key)\">削除</button>\n          </div>\n        </div>\n      </div>\n      <div v-show=\"activetab === 3\" class=\"tabcontent\">\n        <ul>\n          <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'all'; achievementRate()\">すべて</button></li>\n          <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'active'; achievementRate()\">未完タスク一覧</button></li>\n          <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'complete'; achievementRate()\">完了タスク一覧</button></li>\n        </ul>\n        <!-- listの一覧表示 -->\n        <p>{{ taskNumber + \"個のタスク\" }}</p>\n\n        <router-link to=\"/calendar\">Calendar</router-link>\n\n        <div v-for=\"(taskCategory, key) in filteredTodos\" :key=\"taskCategory.id\">\n          <div v-if=\"key == 'bucket list'\" class=\"card\">\n            <p>{{ key }}</p>\n              <div v-for=\"(list, subkey) in taskCategory\" :key=\"list.id\" class=\"subcard\">\n                <p>{{list.name}}</p>\n                <p>{{ list.achievementRate + \"%完了\" }}</p>\n                <ul>\n                  <li v-for=\"(subtodo, subsubkey) in list.subTasks\" :key=\"subtodo.id\" class=\"todo\">\n                      <input v-if=\"subtodo.todoStatus == true\" type=\"checkbox\" v-model=\"subtodo.isComplete\">\n                      <label v-if=\"subtodo.todoStatus == true\" v-on:click=\"updateIsCompleteTodo(subkey, subtodo, list, subsubkey)\">{{subtodo.subName}}</label>\n                      <p v-if=\"subtodo.todoStatus == true\">{{subtodo.subDate}}</p>\n                      <button v-if=\"subtodo.todoStatus == true\" type=\"submit\" v-on:click=\"deleteTodos(subkey, list, subsubkey)\">削除</button>\n                  </li>\n                </ul>\n\n                <div>\n                  <input type=\"text\" v-model=\"newSubTodoName\">\n                  <input type=\"date\" v-model=\"subDeadline\">\n                  <button type=\"button\" v-on:click=\"createSubTodo(list, subkey)\">サブタスク作成</button>\n                </div>\n              </div>\n              <button type=\"submit\" v-on:click=\"deleteLists(key)\">削除</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Make list button -->\n    <button type=\"button\" name=\"makelist\">make list</button>\n\n    <!-- Make list contents -->\n    <div>\n      <!-- 初期はVーmodelで\"newTodoName\"を入れているが空白、故にタスク作った後に空白にしないとミスが起こる -->\n      <input type=\"text\" v-model=\"newTodoName\">\n      <input type=\"date\" v-model=\"deadline\">\n\n      <select v-model=\"selected\">\n        <option v-for=\"option in options\" v-bind:value=\"option.value\" :key=\"option.id\">\n          {{ option.text }}\n        </option>\n      </select>\n      <!-- <button type=\"submit\" v-on:click=\"createList()\">タスク作成</button> -->\n      <button type=\"submit\" v-on:click=\"createList()\">リスト作成</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport firebase from \"firebase\";\n\nexport default {\n  name: \"Task\",\n  data() {\n    return {\n      activetab: 0,\n      database: null,\n      todosRef: null,\n      newTodoName: \"\",\n      newSubTodoName: \"\",\n      deadline:\"\",\n      subDeadline: \"\",\n      showTodoType: \"all\",\n      selected: '',\n      options: [\n        { text: 'private', value: 'private' },\n        { text: 'recruit', value: 'recruit' },\n        { text: 'bucket list', value: 'bucket list' }\n      ],\n      todos: []\n    };\n  },\n  created: function() {\n    this.db = firebase.database();\n    this.uid = firebase.auth().currentUser.uid;\n    // refはreferenceでデータベースにある特定の項目を指し示すメソッド\n    this.todosRef = this.db.ref(\"todos/\" + this.uid);\n    this.test = this.db.ref(\"todos/\" + this.uid + \"/\")\n    // データに変更があると実行されるfunction\n    var _this = this;\n    this.todosRef.on('value', function(snapshot) {\n      _this.todos = snapshot.val(); // データに変化が起きたときに再取得する\n    });\n  },\n  computed: {\n    filteredTodos: function () {\n      var showComplete = false;\n      if (this.showTodoType == 'complete') {\n        showComplete = true;\n      }\n      for (let key in this.todos) {\n        let taskCategory = this.todos[key];\n        // console.log(taskCategory);\n        for (let subkey in taskCategory) {\n          let list = taskCategory[subkey];\n          // console.log(list);\n          for (let subsubkey in list.subTasks) {\n            let subtodo = list.subTasks[subsubkey];\n             if (this.showTodoType == 'all') {\n               subtodo.todoStatus = true;\n             }\n              else if(subtodo.isComplete == showComplete) {\n                subtodo.todoStatus = true;\n              }else {\n                subtodo.todoStatus = false;\n              }\n          }\n        }\n      }\n      return this.todos;\n    },\n    taskNumber: function () {\n      let showComplete = false,\n          allCount = 0,\n          count = 0;\n      if (this.showTodoType == 'complete') {\n        showComplete = true;\n      }\n      for (let key in this.todos) {\n        let taskCategory = this.todos[key];\n        for (let subkey in taskCategory) {\n          let list = taskCategory[subkey];\n          for (let subsubkey in list.subTasks) {\n            let subtodo = list.subTasks[subsubkey];\n            console.log(subtodo);\n            allCount += 1;\n            if (this.showTodoType == 'all');\n            else if (subtodo.isComplete == showComplete) {\n              count += 1;\n            }\n          }\n        }\n      }\n      if (this.showTodoType == 'all') {\n        return allCount;\n      } else {\n        return count;\n      }\n    }\n  },\n  methods: {\n    createList: function() {\n      if (this.newTodoName == \"\") { return; }\n      if (this.selected == \"\"){return; }\n      else  {\n        this.todosRef.child(this.selected).push({\n          havechildren: 0,\n          name: this.newTodoName,\n          date: this.deadline,\n          category: this.selected,\n          achievementRate: 0,\n        })\n      }\n      this.newTodoName = \"\";\n    },\n    createSubTodo: function(list, subkey) {\n      console.log(list.category);\n      if (this.newSubTodoName == \"\") { return; }\n      if (list.category == 'private') {\n        this.todosRef.child(list.category).child(subkey).child(\"/subTasks\").push({\n          subName: this.newSubTodoName,\n          isComplete: false,\n          subDate: this.subDeadline,\n          todoStatus: false,\n        })\n      } else if (list.category == 'recruit') {\n        this.todosRef.child(list.category).child(subkey).child(\"/subTasks\").push({\n          subName: this.newSubTodoName,\n          isComplete: false,\n          subDate: this.subDeadline,\n          todoStatus: false,\n        })\n      } else {\n        this.todosRef.child(list.category).child(subkey).child(\"/subTasks\").push({\n          subName: this.newSubTodoName,\n          isComplete: false,\n          subDate: this.subDeadline,\n          todoStatus: false,\n        })\n      }\n      this.newSubTodoName = \"\";\n    },\n    updateIsCompleteTodo: function(subkey, subtodo, list, subsubkey) {\n      subtodo.isComplete = !subtodo.isComplete;\n      var updates = {};\n      updates[subsubkey] = subtodo;\n      console.log(list);\n      this.todosRef.child(list.category).child(subkey).child(\"/subTasks\").update(updates)\n    },\n    deleteLists: function(key) {\n      this.todosRef.child(key).remove();\n    },\n    // todoの削除\n    deleteTodos: function(subkey, list, subsubkey) {\n      this.todosRef.child(list.category).child(subkey).child(\"/subTasks\").child(subsubkey).remove();\n    },\n    achievementRate: function () {\n      for (let key in this.todos) {\n        let taskCategory = this.todos[key];\n        for (let subkey in taskCategory) {\n          let list = taskCategory[subkey],\n              numerator = 0,\n              denominator = 0;\n         for (let subsubkey in list.subTasks) {\n           let subtodo = list.subTasks[subsubkey];\n           denominator += 1;\n             if (subtodo.isComplete == true){\n               numerator += 1;\n             }\n           list.achievementRate = numerator / denominator * 100;\n         }\n        }\n      }\n    }\n  }\n};\n</script>\n\n<style>\n  .card {\n    padding: 16px;\n    margin: 16px;\n    background-color: #c8d2e3;\n    text-align: left;\n  }\n\n  .subcard {\n    padding: 12px;\n    margin: 16px;\n    background-color: #a6b6d5;\n  }\n\n  .todo {\n    padding: 5px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  input[type=\"checkbox\"] { display: none; }\n\n  input[type=\"checkbox\"] + label {\n    display: block;\n    position: relative;\n    padding-left: 35px;\n    margin-bottom: 20px;\n    font: 14px/20px 'Open Sans', Arial, sans-serif;\n    color: #000;\n    cursor: pointer;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n  }\n\n  input[type=\"checkbox\"] + label:last-child { margin-bottom: 0; }\n\n  input[type=\"checkbox\"] + label:before {\n    content: '';\n    display: block;\n    width: 20px;\n    height: 20px;\n    border: 1px solid #050505;\n    border-radius: 100px;\n    position: absolute;\n    left: 0;\n    top: 0;\n    opacity: .6;\n    -webkit-transition: all .12s, border-color .08s;\n    transition: all .12s, border-color .08s;\n  }\n\n  input[type=\"checkbox\"]:checked + label:before {\n    width: 10px;\n    top: -5px;\n    left: 5px;\n    border-radius: 0;\n    opacity: 1;\n    border-top-color: transparent;\n    border-left-color: transparent;\n    -webkit-transform: rotate(45deg);\n    transform: rotate(45deg);\n  }\n\n  .button-category {\n    padding: 16px 0;\n    width: 25vw;\n    border: 1px solid #cccccc;\n  }\n</style>\n"]}]}