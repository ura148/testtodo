{"remainingRequest":"/Users/uratomo/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/uratomo/test/src/components/Task.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/uratomo/test/src/components/Task.vue","mtime":1594636787797},{"path":"/Users/uratomo/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Task.vue"],"names":[],"mappingsfile":"Task.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"task\">\n    <header>\n      <h1>CategoList</h1>\n    </header>\n\n    <!-- Category filter radio button -->\n    <div class=\"tabs\">\n      <button v-on:click=\"activetab=0\" v-bind:class=\"[ activetab === 0 ? 'active' : '' ]\" class=\"button-category\">All</button>\n      <button v-on:click=\"activetab=1\" v-bind:class=\"[ activetab === 1 ? 'active' : '' ]\" class=\"button-category\">Recruit</button>\n      <button v-on:click=\"activetab=2\" v-bind:class=\"[ activetab === 2 ? 'active' : '' ]\" class=\"button-category\">Private</button>\n      <button v-on:click=\"activetab=3\" v-bind:class=\"[ activetab === 3 ? 'active' : '' ]\" class=\"button-category\">Bucket List</button>\n    </div>\n\n    <div class=\"content\">\n      <div v-show=\"activetab === 0\" class=\"tabcontent\">\n        <ul>\n          <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'all'; achievementRate()\">すべて</button></li>\n          <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'active'; achievementRate()\">未完タスク一覧</button></li>\n          <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'complete'; achievementRate()\">完了タスク一覧</button></li>\n        </ul>\n        <!-- listの一覧表示 -->\n        <!-- <p>{{ taskNumber + \"個のタスク\" }}</p> -->\n\n        <router-link to=\"/calendar\">Calendar</router-link>\n\n        <div v-for=\"(taskCategory, key) in filteredTodos\" :key=\"taskCategory.id\">\n          <div class=\"card\">\n            <p>{{ key }}</p>\n            <div v-for=\"(list, subkey) in taskCategory\" :key=\"list.id\" class=\"subcard\">\n              <p>{{list.name}}</p>\n              <button type=\"button\" @click=\"list.fixListShow=!list.fixListShow\" class=\"fa fa-pencil\"></button>\n              <!-- タスク再編集 -->\n              <div v-show=\"list.fixListShow\">\n                <input type=\"text\" v-model=\"fixname\">\n                <select v-model=\"selected\">\n                  <option v-for=\"option in options\" v-bind:value=\"option.value\" :key=\"option.id\">\n                    {{ option.text }}\n                  </option>\n                </select>\n                <button type=\"submit\" v-on:click=\"fixList(list, subkey)\">修正完了</button>\n              </div>\n\n              <ul>\n                <li v-for=\"(subtodo, subsubkey) in list.subTasks\" :key=\"subtodo.id\">\n                  <div v-if=\"subtodo.todoStatus == true\" class=\"todo\">\n                    <input type=\"checkbox\" v-model=\"subtodo.isComplete\">\n                    <label v-on:click=\"updateIsCompleteTodo(subkey, subtodo, list, subsubkey)\">{{subtodo.subName}}</label>\n                    <p>{{subtodo.subDate}}</p>\n                    <button type=\"submit\" v-on:click=\"deleteTodos(subkey, list, subsubkey)\">削除</button>\n                  </div>\n                </li>\n              </ul>\n\n              <div>\n                <input type=\"text\" v-model=\"newSubTodoName\">\n                <input type=\"date\" v-model=\"subDeadline\">\n                <button type=\"button\" v-on:click=\"createSubTodo(list, subkey)\">サブタスク作成</button>\n              </div>\n              <button type=\"submit\" v-on:click=\"deleteLists(list, subkey)\">削除</button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div v-show=\"activetab === 1\" class=\"tabcontent\">\n        <ul>\n          <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'all'; achievementRate()\">すべて</button></li>\n          <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'active'; achievementRate()\">未完タスク一覧</button></li>\n          <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'complete'; achievementRate()\">完了タスク一覧</button></li>\n        </ul>\n        <!-- listの一覧表示 -->\n        <!-- <p>{{ taskNumber + \"個のタスク\" }}</p> -->\n\n        <router-link to=\"/calendar\">Calendar</router-link>\n\n        <div v-for=\"(taskCategory, key) in filteredTodos\" :key=\"taskCategory.id\">\n          <div v-if=\"key == 'recruit'\" class=\"card\">\n            <p>{{ key }}</p>\n            <div v-for=\"(list, subkey) in taskCategory\" :key=\"list.id\" class=\"subcard\">\n              <p>{{list.name}}</p>\n              <p>{{ list.achievementRate + \"%完了\" }}</p>\n              <ul>\n                <li v-for=\"(subtodo, subsubkey) in list.subTasks\" :key=\"subtodo.id\" class=\"todo\">\n                  <input v-if=\"subtodo.todoStatus == true\" type=\"checkbox\" v-model=\"subtodo.isComplete\">\n                  <label v-if=\"subtodo.todoStatus == true\" v-on:click=\"updateIsCompleteTodo(subkey, subtodo, list, subsubkey)\">{{subtodo.subName}}</label>\n                  {{subtodo.subDate}}\n                  <button type=\"button\" name=\"button\">タスク再編集</button>\n                  <button v-if=\"subtodo.todoStatus == true\" type=\"submit\" v-on:click=\"deleteTodos(subkey, list, subsubkey)\">削除</button>\n                </li>\n              </ul>\n\n              <div>\n                <input type=\"text\" v-model=\"newSubTodoName\">\n                <input type=\"date\" v-model=\"subDeadline\">\n                <button type=\"button\" v-on:click=\"createSubTodo(list, subkey)\">サブタスク作成</button>\n              </div>\n              <button type=\"submit\" v-on:click=\"deleteLists(list, subkey)\">削除</button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div v-show=\"activetab === 2\" class=\"tabcontent\">\n        <ul>\n          <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'all'; achievementRate()\">すべて</button></li>\n          <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'active'; achievementRate()\">未完タスク一覧</button></li>\n          <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'complete'; achievementRate()\">完了タスク一覧</button></li>\n        </ul>\n        <!-- listの一覧表示 -->\n        <!-- <p>{{ taskNumber + \"個のタスク\" }}</p> -->\n\n        <router-link to=\"/calendar\">Calendar</router-link>\n\n        <div v-for=\"(taskCategory, key) in filteredTodos\" :key=\"taskCategory.id\">\n          <div v-if=\"key == 'private'\" class=\"card\">\n            <p>{{ key }}</p>\n            <div v-for=\"(list, subkey) in taskCategory\" :key=\"list.id\" class=\"subcard\">\n              <p>{{list.name}}</p>\n              <p>{{ list.achievementRate + \"%完了\" }}</p>\n              <ul>\n                <li v-for=\"(subtodo, subsubkey) in list.subTasks\" :key=\"subtodo.id\">\n                    <input v-if=\"subtodo.todoStatus == true\" type=\"checkbox\" v-model=\"subtodo.isComplete\">\n                    <label v-if=\"subtodo.todoStatus == true\" v-on:click=\"updateIsCompleteTodo(subkey, subtodo, list, subsubkey)\">{{subtodo.subName}}</label>\n                    p{{subtodo.subDate}}\n                    <button v-if=\"subtodo.todoStatus == true\" type=\"submit\" v-on:click=\"deleteTodos(subkey, list, subsubkey)\">削除</button>\n                </li>\n              </ul>\n\n              <div>\n                <input type=\"text\" v-model=\"newSubTodoName\">\n                <input type=\"date\" v-model=\"subDeadline\">\n                <button type=\"button\" v-on:click=\"createSubTodo(list, subkey)\">サブタスク作成</button>\n              </div>\n              <button type=\"submit\" v-on:click=\"deleteLists(list, subkey)\">削除</button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div v-show=\"activetab === 3\" class=\"tabcontent\">\n        <ul>\n          <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'all'; achievementRate()\">すべて</button></li>\n          <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'active'; achievementRate()\">未完タスク一覧</button></li>\n          <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'complete'; achievementRate()\">完了タスク一覧</button></li>\n        </ul>\n        <!-- listの一覧表示 -->\n        <!-- <p>{{ taskNumber + \"個のタスク\" }}</p> -->\n\n        <router-link to=\"/calendar\">Calendar</router-link>\n\n        <div v-for=\"(taskCategory, key) in filteredTodos\" :key=\"taskCategory.id\">\n          <div v-if=\"key == 'bucket list'\" class=\"card\">\n            <p>{{ key }}</p>\n              <div v-for=\"(list, subkey) in taskCategory\" :key=\"list.id\" class=\"subcard\">\n                <p>{{list.name}}</p>\n                <p>{{ list.achievementRate + \"%完了\" }}</p>\n                <ul>\n                  <li v-for=\"(subtodo, subsubkey) in list.subTasks\" :key=\"subtodo.id\" class=\"todo\">\n                      <input v-if=\"subtodo.todoStatus == true\" type=\"checkbox\" v-model=\"subtodo.isComplete\">\n                      <label v-if=\"subtodo.todoStatus == true\" v-on:click=\"updateIsCompleteTodo(subkey, subtodo, list, subsubkey)\">{{subtodo.subName}}</label>\n                      <p v-if=\"subtodo.todoStatus == true\">{{subtodo.subDate}}</p>\n                      <button v-if=\"subtodo.todoStatus == true\" type=\"submit\" v-on:click=\"deleteTodos(subkey, list, subsubkey)\">削除</button>\n                  </li>\n                </ul>\n\n                <div>\n                  <input type=\"text\" v-model=\"newSubTodoName\">\n                  <input type=\"date\" v-model=\"subDeadline\">\n                  <button type=\"button\" v-on:click=\"createSubTodo(list, subkey)\">サブタスク作成</button>\n                </div>\n                <button type=\"submit\" v-on:click=\"deleteLists(list, subkey)\">削除</button>\n              </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Make list button -->\n    <button type=\"button\" name=\"makelist\" @click=\"show=!show\" class=\"button-round button-round__left\" v-bind:class=\"{actives: show}\">\n      <span v-if=\"show == false\" class=\"fa fa-list\"></span>\n      <span v-else class=\"fa fa-times\"></span>\n    </button>\n\n    <!-- Make list contents -->\n    <div v-show=\"show\" class=\"todomake\">\n      <!-- 初期はVーmodelで\"newTodoName\"を入れているが空白、故にタスク作った後に空白にしないとミスが起こる -->\n      <div class=\"inputtodomake\">\n        <input type=\"text\" v-model=\"list.name && k\">\n        <select v-model=\"selected\">\n          <option v-for=\"option in options\" v-bind:value=\"option.value\" :key=\"option.id\">\n            {{ option.text }}\n          </option>\n        </select>\n        <!-- <button type=\"submit\" v-on:click=\"createList()\">タスク作成</button> -->\n        <button type=\"submit\" v-on:click=\"createList()\">リスト作成</button>\n      </div>\n    </div>\n\n    <router-link to=\"/calendar\">\n      <button type=\"button\" name=\"makelist\" class=\"button-round button-round__right\">\n        <span class=\"fa fa-calendar-check-o\"></span>\n      </button>\n    </router-link>\n  </div>\n</template>\n\n<script>\nimport firebase from \"firebase\";\n\nexport default {\n  name: \"Task\",\n  data() {\n    return {\n      show: false,\n      activetab: 0,\n      database: null,\n      todosRef: null,\n      newTodoName: \"\",\n      fixname:'',\n      newSubTodoName: \"\",\n      deadline:\"\",\n      subDeadline: \"\",\n      showTodoType: \"all\",\n      selected: '',\n      options: [\n        { text: 'private', value: 'private' },\n        { text: 'recruit', value: 'recruit' },\n        { text: 'bucket list', value: 'bucket list' }\n      ],\n      todos: []\n    };\n  },\n  created: function() {\n    this.db = firebase.database();\n    this.uid = firebase.auth().currentUser.uid;\n    // refはreferenceでデータベースにある特定の項目を指し示すメソッド\n    this.todosRef = this.db.ref(\"todos/\" + this.uid);\n    this.test = this.db.ref(\"todos/\" + this.uid + \"/\")\n    // データに変更があると実行されるfunction\n    var _this = this;\n    this.todosRef.on('value', function(snapshot) {\n      _this.todos = snapshot.val(); // データに変化が起きたときに再取得する\n    });\n  },\n  computed: {\n    filteredTodos: function () {\n      var showComplete = false;\n      if (this.showTodoType == 'complete') {\n        showComplete = true;\n      }\n      for (let key in this.todos) {\n        let taskCategory = this.todos[key];\n        // console.log(taskCategory);\n        for (let subkey in taskCategory) {\n          let list = taskCategory[subkey];\n          // console.log(list);\n          for (let subsubkey in list.subTasks) {\n            let subtodo = list.subTasks[subsubkey];\n             if (this.showTodoType == 'all') {\n               subtodo.todoStatus = true;\n             }\n              else if(subtodo.isComplete == showComplete) {\n                subtodo.todoStatus = true;\n              }else {\n                subtodo.todoStatus = false;\n              }\n          }\n        }\n      }\n      return this.todos;\n    },\n    taskNumber: function () {\n      let showComplete = false,\n          allCount = 0,\n          count = 0;\n      if (this.showTodoType == 'complete') {\n        showComplete = true;\n      }\n      for (let key in this.todos) {\n        let taskCategory = this.todos[key];\n        for (let subkey in taskCategory) {\n          let list = taskCategory[subkey];\n          for (let subsubkey in list.subTasks) {\n            let subtodo = list.subTasks[subsubkey];\n            console.log(subtodo);\n            allCount += 1;\n            if (this.showTodoType == 'all');\n            else if (subtodo.isComplete == showComplete) {\n              count += 1;\n            }\n          }\n        }\n      }\n      if (this.showTodoType == 'all') {\n        return allCount;\n      } else {\n        return count;\n      }\n    }\n  },\n  methods: {\n    createList: function() {\n      if (this.newTodoName == \"\") { return; }\n      if (this.selected == \"\"){return; }\n      else  {\n        this.todosRef.child(this.selected).push({\n          fixListShow: false,\n          havechildren: 0,\n          name: this.newTodoName,\n          category: this.selected,\n          achievementRate: 0,\n        })\n      }\n      this.newTodoName = \"\";\n    },\n    fixList: function (list, subkey) {\n      if (list.name == \"\") { return; }\n      if (this.selected == \"\"){return; }\n      else  {\n        console.log(\"修正完了！\");\n        list.name = list.name;\n        list.category = this.selected;\n        let fixed = {};\n        fixed[subkey] = list;\n        list.fixListShow = false\n        this.todosRef.child(list.category).update(fixed)\n      }\n      // this.fixname = \"\";\n      this.selected = \"\";\n\n    },\n    createSubTodo: function(list, subkey) {\n      console.log(list.category);\n      if (this.newSubTodoName == \"\") { return; }\n      if (list.category == 'private') {\n        this.todosRef.child(list.category).child(subkey).child(\"/subTasks\").push({\n          subName: this.newSubTodoName,\n          isComplete: false,\n          subDate: this.subDeadline,\n          todoStatus: false,\n        })\n      } else if (list.category == 'recruit') {\n        this.todosRef.child(list.category).child(subkey).child(\"/subTasks\").push({\n          subName: this.newSubTodoName,\n          isComplete: false,\n          subDate: this.subDeadline,\n          todoStatus: false,\n        })\n      } else {\n        this.todosRef.child(list.category).child(subkey).child(\"/subTasks\").push({\n          subName: this.newSubTodoName,\n          isComplete: false,\n          subDate: this.subDeadline,\n          todoStatus: false,\n        })\n      }\n      this.newSubTodoName = \"\";\n    },\n    updateIsCompleteTodo: function(subkey, subtodo, list, subsubkey) {\n      subtodo.isComplete = !subtodo.isComplete;\n      var updates = {};\n      updates[subsubkey] = subtodo;\n      console.log(list);\n      this.todosRef.child(list.category).child(subkey).child(\"/subTasks\").update(updates)\n    },\n    deleteLists: function(list, subkey) {\n      this.todosRef.child(list.category).child(subkey).remove();\n    },\n    // todoの削除\n    deleteTodos: function(subkey, list, subsubkey) {\n      this.todosRef.child(list.category).child(subkey).child(\"/subTasks\").child(subsubkey).remove();\n    },\n    achievementRate: function () {\n      for (let key in this.todos) {\n        let taskCategory = this.todos[key];\n        for (let subkey in taskCategory) {\n          let list = taskCategory[subkey],\n              numerator = 0,\n              denominator = 0;\n         for (let subsubkey in list.subTasks) {\n           let subtodo = list.subTasks[subsubkey];\n           denominator += 1;\n             if (subtodo.isComplete == true){\n               numerator += 1;\n             }\n           list.achievementRate = numerator / denominator * 100;\n         }\n        }\n      }\n    }\n  }\n};\n</script>\n\n<style>\n  .card {\n    padding: 16px;\n    margin: 16px;\n    background-color: #c8d2e3;\n    text-align: left;\n  }\n\n  .subcard {\n    padding: 12px;\n    margin: 16px;\n    background-color: #a6b6d5;\n  }\n\n  .todo {\n    padding: 5px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  .todomake {\n    width: 100%;\n    height: 100%;\n    position: fixed;\n    top: 0;\n    background-color: rgba(0, 0, 0, 0.3);\n  }\n\n  .active {\n    color: red;\n  }\n\n  .inputtodomake{\n    position: absolute;\n    z-index: 5;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n\n  input[type=\"checkbox\"] { display: none; }\n\n  input[type=\"checkbox\"] + label {\n    display: block;\n    position: relative;\n    padding-left: 35px;\n    margin-bottom: 20px;\n    font: 14px/20px 'Open Sans', Arial, sans-serif;\n    color: #000;\n    cursor: pointer;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n  }\n\n  input[type=\"checkbox\"] + label:last-child { margin-bottom: 0; }\n\n  input[type=\"checkbox\"] + label:before {\n    content: '';\n    display: block;\n    width: 20px;\n    height: 20px;\n    border: 1px solid #050505;\n    border-radius: 100px;\n    position: absolute;\n    left: 0;\n    top: 0;\n    opacity: .6;\n    -webkit-transition: all .12s, border-color .08s;\n    transition: all .12s, border-color .08s;\n  }\n\n  input[type=\"checkbox\"]:checked + label:before {\n    width: 10px;\n    top: -5px;\n    left: 5px;\n    border-radius: 0;\n    opacity: 1;\n    border-top-color: transparent;\n    border-left-color: transparent;\n    -webkit-transform: rotate(45deg);\n    transform: rotate(45deg);\n  }\n\n  .button-category {\n    padding: 16px 0;\n    width: 25vw;\n    border: 1px solid #cccccc;\n  }\n</style>\n"]}]}