{"remainingRequest":"/Users/uratomo/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/uratomo/test/src/components/Week.vue?vue&type=style&index=0&id=9e059bb8&scoped=true&lang=css&","dependencies":[{"path":"/Users/uratomo/test/src/components/Week.vue","mtime":1594298099907},{"path":"/Users/uratomo/test/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouY2VsbC1jb250ZW50IHsKICB0ZXh0LWFsaWduOmxlZnQ7CiAgd2lkdGg6IDcwcHg7CiAgaGVpZ2h0OiA1MHB4OwogIGZvbnQtc2l6ZTogNTAlOwogIC8qIGJvcmRlcjogMXB4IHNvbGlkICNlZmVmZWY7ICovCn0KLmNlbGwtY29udGVudC1saW5lIHsKICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2VmZWZlZjsKfQo="},{"version":3,"sources":["Week.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Week.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <h2>Week ToDos</h2>\n    <button type=\"button\" v-on:click=\"hoge()\">hoge</button>\n    <div class=\"\">\n      <button type=\"button\" v-on:click=\"count--\">◀︎</button>\n      <span>{{ weeks() }}</span>\n      <button type=\"button\" v-on:click=\"count++\">▶︎</button>\n    </div>\n\n\n\n    <router-link to=\"/\">task</router-link>\n    <button type=\"button\" v-on:click=\"ey()\">eybtn</button>\n    <template>\n      <div v-for=\"(taskCategory, key) in filteredTodos\" :key=\"taskCategory.id\">\n            <div v-for=\"(list, subkey) in taskCategory\" :key=\"list.id\" class=\"subcard\">\n              {{ \"のタスク\" }}\n              <ul>\n                <li v-for=\"(subtodo, subsubkey) in list.subTasks\" :key=\"subtodo.id\">\n                  <div v-if=\"startDay() <= subtodo.subDate && subtodo.subDate <= endDay()\" class=\"todo\">\n                    <input type=\"checkbox\" v-model=\"subtodo.isComplete\">\n                    <label v-on:click=\"updateIsCompleteTodo(subkey, subtodo, list, subsubkey)\">{{subtodo.subName}}</label>\n                    <button type=\"submit\" v-on:click=\"deleteTodos(subkey, list, subsubkey)\">削除</button>\n                  </div>\n                </li>\n              </ul>\n\n              <div>\n                <input type=\"text\" v-model=\"newSubTodoName\">\n                <input type=\"date\" v-model=\"subDeadline\">\n                <button type=\"button\" v-on:click=\"createSubTodo(list, subkey)\">サブタスク作成</button>\n              </div>\n            </div>\n        <button type=\"submit\" v-on:click=\"deleteLists(key)\">削除</button>\n      </div>\n\n    </template>\n</div>\n</template>\n\n<script>\nimport firebase from \"firebase\";\n\nexport default {\n  name: 'week',\n  data() {\n    return {\n      count: 0,\n      startDate: '',\n      database: null,\n      todosRef: null,\n      newTodoName: \"\",\n      newSubTodoName: \"\",\n      deadline:\"\",\n      subDeadline: \"\",\n      showTodoType: \"all\",\n      selected: '',\n      options: [\n        { text: 'private', value: 'private' },\n        { text: 'recruit', value: 'recruit' },\n        { text: 'bucket list', value: 'bucket list' }\n      ],\n      todos: []\n    }\n  },\n  created: function() {\n    this.db = firebase.database();\n    this.uid = firebase.auth().currentUser.uid;\n    // refはreferenceでデータベースにある特定の項目を指し示すメソッド\n    this.todosRef = this.db.ref(\"todos/\" + this.uid);\n    this.test = this.db.ref(\"todos/\" + this.uid + \"/\")\n    // データに変更があると実行されるfunction\n    var _this = this;\n    this.todosRef.on('value', function(snapshot) {\n      _this.todos = snapshot.val(); // データに変化が起きたときに再取得する\n    });\n  },\n  computed: {\n    filteredTodos: function () {\n      var showComplete = false;\n      if (this.showTodoType == 'complete') {\n        showComplete = true;\n      }\n      for (let key in this.todos) {\n        let taskCategory = this.todos[key];\n        // console.log(taskCategory);\n        for (let subkey in taskCategory) {\n          console.log(subkey);\n          let list = taskCategory[subkey];\n          // console.log(list);\n          for (let subsubkey in list.subTasks) {\n            let subtodo = list.subTasks[subsubkey];\n            console.log(subtodo.subName);\n            console.log(subsubkey);\n             if (this.showTodoType == 'all') {\n               subtodo.judge = true;\n             }\n              else if(subtodo.isComplete == showComplete) {\n                subtodo.judge = true;\n              }else {\n                subtodo.judge = false;\n              }\n          }\n        }\n      }\n      return this.todos;\n    },\n    termtest: function() {\n      var day = 7;\n      var today = new Date();\n      today.setDate(today.getDate() + day);\n      var yyyy = today.getFullYear();\n      var mm = (\"0\"+(today.getMonth()+1)).slice(-2);\n      var dd = (\"0\"+today.getDate()).slice(-2);\n      var ymd = (yyyy+'-'+mm+'-'+dd);\n      // let filterSubTodos = {};\n      console.log(ymd);\n      return ymd;\n    },\n    getweek: function () {\n      // let weekpoint = 0;\n      let today = new Date();\n      let this_year = today.getFullYear();\n      let this_month = today.getMonth();\n      let date = today.getDate();\n      let day_num = today.getDay();\n\n      let this_monday = date - day_num + this.count * 7;\n      let this_sunday = this_monday + 6;\n      let day = new String('日月火水木金土');\n\n      //月曜日の年月日\n      let start_date = new Date(this_year, this_month, this_monday);\n          start_date = start_date.getFullYear() + \"年\" + (start_date.getMonth() + 1) + \"月\" + start_date.getDate() + \"日\" + \" (\" + day.charAt( start_date.getDay() ) + \")\"\n      //日曜日の年月日\n      let end_date = new Date(this_year, this_month, this_sunday);\n          end_date =  end_date.getFullYear() + \"年\" + (end_date.getMonth() + 1) + \"月\" + end_date.getDate() + \"日\" + \" (\" + day.charAt( end_date.getDay() ) +\")\"\n      //文字列を作成\n      let target_week = start_date + \" ～ \" + end_date;\n      console.log(target_week);\n      return [start_date, end_date, target_week];\n    }\n  },\n  methods: {\n     dateToYYYYMMDD: function(date) {\n      let y = date.getFullYear()\n      let m = ('00' + (date.getMonth()+1)).slice(-2)\n      let d = ('00' + date.getDate()).slice(-2)\n      let result = y + '' + m + '' + d\n      return result\n    },\n    getContentFromKey: function(key) {\n      const target = this.dateList.find((date) => {\n        return (date.ymd === key)\n      })\n      return target.contents\n    },\n    // term: function(day) {\n    //   var today = new Date();\n    //   today.setDate(today.getDate() + day);\n    //   var yyyy = today.getFullYear();\n    //   var mm = (\"0\"+(today.getMonth()+1)).slice(-2);\n    //   var dd = (\"0\"+today.getDate()).slice(-2);\n    //   var ymd = (yyyy+'-'+mm+'-'+dd);\n    //   // let filterSubTodos = {};\n    //   console.log(ymd);\n    //   return ymd;\n    // },\n    deleteTodos: function(subkey, list, subsubkey) {\n      this.todosRef.child(list.category).child(subkey).child(\"/subTasks\").child(subsubkey).remove();\n    },\n    updateIsCompleteTodo: function(subkey, subtodo, list, subsubkey) {\n      subtodo.isComplete = !subtodo.isComplete;\n      var updates = {};\n      updates[subsubkey] = subtodo;\n      console.log(list);\n      this.todosRef.child(list.category).child(subkey).child(\"/subTasks\").update(updates)\n    },\n    ey: function() {\n      var today = new Date();\n      today.setDate(today.getDate());\n      var yyyy = today.getFullYear();\n      var mm = (\"0\"+(today.getMonth()+1)).slice(-2);\n      var dd = (\"0\"+today.getDate()).slice(-2);\n      console.log(yyyy+'-'+mm+'-'+dd);\n      let filterSubTodos = {};\n      console.log(this.todos);\n\n      for (let key in this.todos) {\n        let taskCategory = this.todos[key];\n        for (let subkey in taskCategory) {\n          let list = taskCategory[subkey];\n          console.log(list);\n          for (let subsubkey in list.subTasks) {\n            let subtodo = list.subTasks[subsubkey];\n            console.log(subtodo);\n\n            filterSubTodos[subsubkey] = subtodo;\n          }\n        }\n      }\n      console.log(filterSubTodos);\n    },\n    getsunday: function () {\n      let today = new Date();\n      let this_year = today.getFullYear();\n      let this_month = today.getMonth();\n      let date = today.getDate();\n      let day_num = today.getDay();\n\n      let this_monday = date - day_num + this.count * 7;\n      let this_sunday = this_monday + 6;\n      let day = new String('日月火水木金土');\n\n      //月曜日の年月日\n      let start_date = new Date(this_year, this_month, this_monday);\n          start_date = start_date.getFullYear() + \"年\" + (start_date.getMonth() + 1) + \"月\" + start_date.getDate() + \"日\" + \" (\" + day.charAt( start_date.getDay() ) + \")\"\n      //日曜日の年月日\n      let end_date = new Date(this_year, this_month, this_sunday);\n          end_date = end_date.getFullYear() + \"年\" + (end_date.getMonth() + 1) + \"月\" + end_date.getDate() + \"日\" + \" (\" + day.charAt( end_date.getDay() ) +\")\"\n      let target_week = start_date + \" ～ \" + end_date;\n\n      let planeStartDate = new Date(this_year, this_month, this_monday);\n          planeStartDate = planeStartDate.getFullYear() + \"-\" + (\"0\"+(planeStartDate.getMonth()+1)).slice(-2) + \"-\" + (\"0\"+planeStartDate.getDate()).slice(-2);\n\n      let planeEndDate = new Date(this_year, this_month, this_sunday);\n          planeEndDate = planeEndDate.getFullYear() + \"-\" + (\"0\"+(planeEndDate.getMonth()+1)).slice(-2) + \"-\" + (\"0\"+planeEndDate.getDate()).slice(-2);\n\n      console.log(planeStartDate);\n      return [target_week, planeStartDate, planeEndDate];\n    },\n    deleteLists: function(key) {\n      this.todosRef.child(key).remove();\n    },\n    // 秋の始まり日を取得\n    startDay: function () {\n      let a = this.getsunday();\n      return a[1];\n    },\n    endDay: function () {\n      let a = this.getsunday();\n      return a[2];\n    },\n    weeks: function () {\n      let a = this.getsunday();\n      return a[0];\n    }\n\n  }\n}\n</script>\n\n<style scoped>\n.cell-content {\n  text-align:left;\n  width: 70px;\n  height: 50px;\n  font-size: 50%;\n  /* border: 1px solid #efefef; */\n}\n.cell-content-line {\n  border-bottom: 1px solid #efefef;\n}\n</style>\n"]}]}