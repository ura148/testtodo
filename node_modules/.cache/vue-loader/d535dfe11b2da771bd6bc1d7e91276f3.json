{"remainingRequest":"/Users/uratomo/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/uratomo/test/src/components/Calendar.vue?vue&type=style&index=0&id=12cb4c6e&scoped=true&lang=css&","dependencies":[{"path":"/Users/uratomo/test/src/components/Calendar.vue","mtime":1594819422925},{"path":"/Users/uratomo/test/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmRheWRhdGUgewogIG1hcmdpbi10b3A6IDE2cHg7CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9CiAgLmRheWRhdGUtdHh0IHsKICAgIGZvbnQtc2l6ZTogMS42cmVtOwogIH0KICAuZGF5ZGF0ZS1hcnJvdyB7CiAgICBmb250LXNpemU6IDEuNnJlbTsKICB9Ci50YWItYm94IHsKICB3aWR0aDogMzMuMzMzM3Z3Owp9CkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6MTAyNHB4KXsKICAuZmlsdGVyIHsKICAgIHdpZHRoOiBjYWxjKDEwMHZ3IC0gMjg4cHgpOwogICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0OwogICAgbGVmdDogMjg4cHg7CiAgICB0cmFuc2Zvcm06IG5vbmU7CiAgfQogIC5kYXlkYXRlIHsKICAgIG1hcmdpbi10b3A6IDE2cHg7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgfQogICAgLmRheWRhdGUtdHh0IHsKICAgICAgZm9udC1zaXplOiAycmVtOwogICAgfQogICAgLmRheWRhdGUtYXJyb3cgewogICAgICBmb250LXNpemU6IDEuOHJlbTsKICAgIH0KICAudGFiLWJveCB7CiAgICB3aWR0aDogMzMuMzMzM3Z3OwogIH0KICAuY2VsbC1jb250ZW50IHsKICAgIHRleHQtYWxpZ246bGVmdDsKICAgIHdpZHRoOiA3MHB4OwogICAgaGVpZ2h0OiA1MHB4OwogICAgZm9udC1zaXplOiA1MCU7CiAgICAvKiBib3JkZXI6IDFweCBzb2xpZCAjZWZlZmVmOyAqLwogIH0KICAuY2VsbC1jb250ZW50LWxpbmUgewogICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlZmVmZWY7CiAgfQp9Cg=="},{"version":3,"sources":["Calendar.vue"],"names":[],"mappingsojBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Calendar.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <Header/>\n    <main class=\"main\">\n      <div class=\"showchange\">\n      <!-- Category filter -->\n        <div class=\"tab\">\n          <button v-on:click=\"activetab=0\" v-bind:class=\"[ activetab === 0 ? 'tab-box__active' : '' ]\" class=\"tab-box\">All</button>\n          <button v-on:click=\"activetab=1\" v-bind:class=\"[ activetab === 1 ? 'tab-box__active' : '' ]\" class=\"tab-box\">day</button>\n          <button v-on:click=\"activetab=2\" v-bind:class=\"[ activetab === 2 ? 'tab-box__active' : '' ]\" class=\"tab-box\">week</button>\n        </div>\n\n        <ul class=\"filter\">\n          <li class=\"filter-item\"><button class=\"filter-btn\" type=\"submit\" v-on:click=\"showTodoType = 'all'\">All</button></li>\n          <li class=\"filter-item\"><button class=\"filter-btn\" type=\"submit\" v-on:click=\"showTodoType = 'active'\">Active</button></li>\n          <li class=\"filter-item\"><button class=\"filter-btn\" type=\"submit\" v-on:click=\"showTodoType = 'complete'\">Complete</button></li>\n        </ul>\n      </div>\n\n      <div class=\"container\">\n        <div v-if=\"activetab === 0\" class=\"category\">\n          <div v-for=\"(taskCategory, key) in filteredList\" :key=\"taskCategory.id\" class=\"category-box\">\n            <div class=\"card\">\n              <p class=\"card-category-name\">{{ key }}</p>\n              <div v-for=\"(list, subkey) in taskCategory\" :key=\"list.id\" class=\"card-list\">\n\n                <!-- list名＋編集btn -->\n                <div class=\"card-namebox\">\n                  <p class=\"card-name\">{{list.name}}</p>\n                  <button type=\"button\" @click=\"list.fixListShow=!list.fixListShow\" class=\"btn btn-fix\"><span class=\"fa fa-pencil btn-fix\"></span></button>\n                  <button type=\"submit\" v-on:click=\"deleteLists(list, subkey)\" class=\"btn btn-delete\"><span class=\"fa fa-trash\"></span></button>\n                </div>\n\n                <!-- list再編集 -->\n                <div v-show=\"list.fixListShow\" class=\"popup\">\n                  <div  class=\"popup-fix__todo\">\n                    <p class=\"popup-item\">List name</p>\n                    <input type=\"text\" v-model=\"list.name\" class=\" popup-input\">\n\n                    <p class=\"popup-item\">Category</p>\n                    <select v-model=\"selectCategory\" class=\"popup-input \">\n                      <option v-for=\"option in options\" v-bind:value=\"option.value\" :key=\"option.id\">\n                        {{ option.text }}\n                      </option>\n                    </select>\n\n                    <div class=\"popup-btn-box\">\n                      <button type=\"button\" @click=\"list.fixListShow=!list.fixListShow\" class=\"popup-btn popup-btn__negative popup-btn__left\">Cancel</button>\n                      <button type=\"submit\" v-on:click=\"fixList(list, subkey)\" class=\"popup-btn popup-btn__positive\">Done</button>\n                    </div>\n                  </div>\n                </div>\n\n                <!-- todoを表示 -->\n                <ul>\n                  <li v-for=\"(todo, subsubkey) in list.subTasks\" :key=\"todo.id\">\n                    <div v-if=\"todo.todoStatus == true\" class=\"card-item\">\n                      <input type=\"checkbox\" v-model=\"todo.isComplete\">\n                      <label v-on:click=\"updateIsCompleteTodo(subkey, todo, list, subsubkey)\" class=\"card-item-name\">\n                        <span>{{todo.subName}}</span>\n                        <span>{{changeShowDate(todo)}}</span>\n                      </label>\n\n                      <!-- Todo編集btnと削除btn -->\n                      <div>\n                        <!-- todo編集btn -->\n                        <button type=\"button\" @click=\"todo.fixTodoShow=!todo.fixTodoShow\" class=\"btn btn-fix\"><span class=\"fa fa-pencil btn-fix\"></span></button>\n                        <button type=\"submit\" v-on:click=\"deleteTodos(subkey, list, subsubkey)\" class=\"btn btn-delete\"><span class=\"fa fa-trash\"></span></button>\n                      </div>\n                    </div>\n\n                    <!-- todo再編集 -->\n                    <div v-show=\"todo.fixTodoShow\" class=\"popup\">\n                      <div class=\"popup-fix__todo\">\n                        <p class=\"popup-item\">Todo name</p>\n                        <input type=\"text\" v-model=\"todo.subName\" v-bind:text=\"todo.subName\" class=\"popup-input\">\n\n                        <p class=\"popup-item\">Dead line</p>\n                        <input type=\"date\" v-model=\"deadline\" placeholder=\"2020-01-01\" class=\"popup-input \">\n\n                        <div class=\"popup-btn-box\">\n                          <button type=\"button\" @click=\"todo.fixTodoShow=!todo.fixTodoShow\" class=\"popup-btn popup-btn__negative popup-btn__left\">Cancel</button>\n                          <button type=\"submit\" v-on:click=\"addDeadlineFixName(list, todo, subkey, subsubkey); todo.fixTodoShow=!todo.fixTodoShow\" class=\"popup-btn popup-btn__positive\">Done</button>\n                        </div>\n                      </div>\n                    </div>\n\n                  </li>\n                </ul>\n\n                <div>\n                  <input type=\"text\" v-model=\"newTodoName\" placeholder=\"Make Todo's name\" class=\"popup-input\">\n                  <button type=\"button\" v-on:click=\"createTodo(list, subkey)\" class=\"btn btn-done\"><span class=\"fa fa-check\"></span></button>\n                </div>\n              </div>\n              <button  v-if=\"windowW >= 1024\" type=\"button\" name=\"makelist\" @click=\"show=!show\" class=\"btn-makelist\" v-bind:class=\"{actives: show}\">\n                <span>リスト追加</span>\n              </button>\n\n            </div>\n          </div>\n        </div>\n        <div v-if=\"activetab === 1\">\n          <div class=\"daydate\">\n            <button type=\"button\" v-on:click=\"dayCount--\" class=\"daydate-arrow\">◀︎</button>\n            <span class=\"daydate-txt\">{{ getTodayDate() }}</span>\n            <button type=\"button\" v-on:click=\"dayCount++\" class=\"daydate-arrow\">▶︎</button>\n          </div>\n          <!-- listの一覧表示 -->\n          <div class=\"category\">\n            <div v-for=\"(taskCategory, key) in filteredList\" :key=\"taskCategory.id\" class=\"category-box\">\n              <div class=\"card\">\n                <p class=\"card-category-name\">{{ key }}</p>\n                <ul v-for=\"(list, subkey) in taskCategory\" :key=\"list.id\">\n                <template v-if=\"list.havechildren != 0\">\n                  <li  class=\"card-list\">\n                    <!-- list名＋編集btn -->\n                    <div class=\"card-namebox\">\n                      <p class=\"card-name\">{{list.name}}</p>\n                      <button type=\"button\" @click=\"list.fixListShow=!list.fixListShow\" class=\"btn btn-fix\"><span class=\"fa fa-pencil btn-fix\"></span></button>\n                      <button type=\"submit\" v-on:click=\"deleteLists(list, subkey)\" class=\"btn btn-delete\"><span class=\"fa fa-trash\"></span></button>\n                    </div>\n\n                    <!-- list再編集 -->\n                    <div v-show=\"list.fixListShow\" class=\"popup\">\n                      <div  class=\"popup-fix__todo\">\n                        <p class=\"popup-fix-item\">List name</p>\n                        <input type=\"text\" v-model=\"list.name\" class=\" popup-input\">\n\n                        <p class=\"popup-fix-item\">Category</p>\n                        <select v-model=\"selectCategory\" class=\"popup-input \">\n                          <option v-for=\"option in options\" v-bind:value=\"option.value\" :key=\"option.id\">\n                            {{ option.text }}\n                          </option>\n                        </select>\n\n                        <div class=\"popup-btn-box\">\n                          <button type=\"button\" @click=\"list.fixListShow=!list.fixListShow\" class=\"popup-btn popup-btn__negative popup-btn__left\">Cancel</button>\n                          <button type=\"submit\" v-on:click=\"fixList(list, subkey)\" class=\"popup-btn popup-btn__positive\">Done</button>\n                        </div>\n                      </div>\n                    </div>\n\n                    <!-- todoを表示 -->\n                    <ul>\n                      <li v-for=\"(todo, subsubkey) in list.subTasks\" :key=\"todo.id\">\n                        <div v-if=\"todayDate == todo.subDate && todo.todoStatus == true\" class=\"card-item\">\n                          <input type=\"checkbox\" v-model=\"todo.isComplete\">\n                          <label v-on:click=\"updateIsCompleteTodo(subkey, todo, list, subsubkey)\" class=\"card-item-name\">\n                            <span>{{todo.subName}}</span>\n                            <span>{{changeShowDate(todo)}}</span>\n                          </label>\n\n                          <!-- Todo編集btnと削除btn -->\n                          <div>\n                            <!-- todo編集btn -->\n                            <button type=\"button\" @click=\"todo.fixTodoShow=!todo.fixTodoShow\" class=\"btn btn-fix\"><span class=\"fa fa-pencil btn-fix\"></span></button>\n                            <button type=\"submit\" v-on:click=\"deleteTodos(subkey, list, subsubkey)\" class=\"btn btn-delete\"><span class=\"fa fa-trash\"></span></button>\n                          </div>\n                        </div>\n\n                        <!-- todo再編集 -->\n                        <div v-show=\"todo.fixTodoShow\" class=\"popup\">\n                          <div class=\"popup-fix__todo\">\n                            <p class=\"popup-fix-item\">Todo name</p>\n                            <input type=\"text\" v-model=\"todo.subName\" v-bind:text=\"todo.subName\" class=\"popup-input\">\n\n                            <p class=\"popup-fix-item\">Dead line</p>\n                            <input type=\"date\" v-model=\"deadline\" placeholder=\"2020-01-01\" class=\"popup-input \">\n\n                            <div class=\"popup-btn-box\">\n                              <button type=\"button\" @click=\"todo.fixTodoShow=!todo.fixTodoShow\" class=\"popup-btn popup-btn__negative popup-btn__left\">Cancel</button>\n                              <button type=\"submit\" v-on:click=\"addDeadlineFixName(list, todo, subkey, subsubkey); todo.fixTodoShow=!todo.fixTodoShow\" class=\"popup-btn popup-btn__positive\">Done</button>\n                            </div>\n                          </div>\n                        </div>\n\n                      </li>\n                    </ul>\n\n                    <div>\n                      <input type=\"text\" v-model=\"newTodoName\" placeholder=\"Make Todo's name\" class=\"popup-input\">\n                      <button type=\"button\" v-on:click=\"createTodo(list, subkey)\" class=\"btn btn-done\"><span class=\"fa fa-check\"></span></button>\n                    </div>\n                  </li>\n                  </template>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div v-if=\"activetab === 2\">\n          <div class=\"daydate\">\n            <button type=\"button\" v-on:click=\"weekCount--\" class=\"daydate-arrow\">◀︎</button>\n            <span class=\"daydate-txt\">{{ getWeekDate() }}</span>\n            <button type=\"button\" v-on:click=\"weekCount++\" class=\"daydate-arrow\">▶︎</button>\n          </div>\n          <!-- listの一覧表示 -->\n          <div class=\"category\">\n            <div v-for=\"(taskCategory, key) in filteredList\" :key=\"taskCategory.id\" class=\"category-box\">\n              <div class=\"card\">\n                <p class=\"card-category-name\">{{ key }}</p>\n                <ul v-for=\"(list, subkey) in taskCategory\" :key=\"list.id\">\n                <template v-if=\"list.havechildren != 0\">\n                  <li  class=\"card-list\">\n                    <!-- list名＋編集btn -->\n                    <div class=\"card-namebox\">\n                      <p class=\"card-name\">{{list.name}}</p>\n                      <button type=\"button\" @click=\"list.fixListShow=!list.fixListShow\" class=\"btn btn-fix\"><span class=\"fa fa-pencil btn-fix\"></span></button>\n                      <button type=\"submit\" v-on:click=\"deleteLists(list, subkey)\" class=\"btn btn-delete\"><span class=\"fa fa-trash\"></span></button>\n                    </div>\n\n                    <!-- list再編集 -->\n                    <div v-show=\"list.fixListShow\" class=\"popup\">\n                      <div  class=\"popup-fix__todo\">\n                        <p class=\"popup-fix-item\">List name</p>\n                        <input type=\"text\" v-model=\"list.name\" class=\" popup-input\">\n\n                        <p class=\"popup-fix-item\">Category</p>\n                        <select v-model=\"selectCategory\" class=\"popup-input \">\n                          <option v-for=\"option in options\" v-bind:value=\"option.value\" :key=\"option.id\">\n                            {{ option.text }}\n                          </option>\n                        </select>\n\n                        <div class=\"popup-btn-box\">\n                          <button type=\"button\" @click=\"list.fixListShow=!list.fixListShow\" class=\"popup-btn popup-btn__negative popup-btn__left\">Cancel</button>\n                          <button type=\"submit\" v-on:click=\"fixList(list, subkey)\" class=\"popup-btn popup-btn__positive\">Done</button>\n                        </div>\n                      </div>\n                    </div>\n\n                    <!-- todoを表示 -->\n                    <ul>\n                      <li v-for=\"(todo, subsubkey) in list.subTasks\" :key=\"todo.id\">\n                        <div v-if=\"startDate <= todo.subDate && todo.subDate <= endDate && todo.todoStatus == true\" class=\"card-item\">\n                          <input type=\"checkbox\" v-model=\"todo.isComplete\">\n                          <label v-on:click=\"updateIsCompleteTodo(subkey, todo, list, subsubkey)\" class=\"card-item-name\">\n                            <span>{{todo.subName}}</span>\n                            <span>{{changeShowDate(todo)}}</span>\n                          </label>\n\n                          <!-- Todo編集btnと削除btn -->\n                          <div>\n                            <!-- todo編集btn -->\n                            <button type=\"button\" @click=\"todo.fixTodoShow=!todo.fixTodoShow\" class=\"btn btn-fix\"><span class=\"fa fa-pencil btn-fix\"></span></button>\n                            <button type=\"submit\" v-on:click=\"deleteTodos(subkey, list, subsubkey)\" class=\"btn btn-delete\"><span class=\"fa fa-trash\"></span></button>\n                          </div>\n                        </div>\n\n                        <!-- todo再編集 -->\n                        <div v-show=\"todo.fixTodoShow\" class=\"popup\">\n                          <div class=\"popup-fix__todo\">\n                            <p class=\"popup-fix-item\">Todo name</p>\n                            <input type=\"text\" v-model=\"todo.subName\" v-bind:text=\"todo.subName\" class=\"popup-input\">\n\n                            <p class=\"popup-fix-item\">Dead line</p>\n                            <input type=\"date\" v-model=\"deadline\" placeholder=\"2020-01-01\" class=\"popup-input \">\n\n                            <div class=\"popup-btn-box\">\n                              <button type=\"button\" @click=\"todo.fixTodoShow=!todo.fixTodoShow\" class=\"popup-btn popup-btn__negative popup-btn__left\">Cancel</button>\n                              <button type=\"submit\" v-on:click=\"addDeadlineFixName(list, todo, subkey, subsubkey); todo.fixTodoShow=!todo.fixTodoShow\" class=\"popup-btn popup-btn__positive\">Done</button>\n                            </div>\n                          </div>\n                        </div>\n\n                      </li>\n                    </ul>\n\n                    <div>\n                      <input type=\"text\" v-model=\"newTodoName\" placeholder=\"Make Todo's name\" class=\"popup-input\">\n                      <button type=\"button\" v-on:click=\"createTodo(list, subkey)\" class=\"btn btn-done\"><span class=\"fa fa-check\"></span></button>\n                    </div>\n                  </li>\n                </template>\n              </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div v-show=\"show\" class=\"popup\">\n        <!-- 初期はVーmodelで\"newlistName\"を入れているが空白、故にタスク作った後に空白にしないとミスが起こる -->\n        <div class=\"popup-fix__todo\">\n          <p class=\"popup-item\">List name</p>\n          <input type=\"text\" v-model=\"newlistName\" class=\"popup-input\">\n\n          <p class=\"popup-item\">Category</p>\n          <select v-model=\"selectCategory\" class=\"popup-input \">\n            <option v-for=\"option in options\" v-bind:value=\"option.value\" :key=\"option.id\">\n              {{ option.text }}\n            </option>\n          </select>\n\n          <!-- <button type=\"submit\" v-on:click=\"createList()\">タスク作成</button> -->\n          <div class=\"popup-btn-box\">\n            <button type=\"button\" @click=\"show=!show\" class=\"popup-btn popup-btn__negative popup-btn__left\">Cancel</button>\n            <button type=\"submit\" @click=\"createList()\" class=\"popup-btn popup-btn__positive\">Done</button>\n          </div>\n        </div>\n      </div>\n\n\n      <router-link to=\"/\" v-if=\"windowW <= 1024\">\n        <button type=\"button\" class=\"btn-round btn-round__right\">\n          <span class=\"fa fa-check-square\"></span>\n        </button>\n      </router-link>\n    </main>\n  </div>\n</template>\n\n<script>\nimport Header from '@/components/Header.vue';\nimport firebase from \"firebase\";\n\nexport default {\n  name: 'calendar',\n  data() {\n    return {\n      windowW: window.innerWidth,\n      windowH: window.innerHeight,\n      show: false,\n      activetab: 0,\n      dayCount: 0,\n      weekCount: 0,\n      monthCount: 0,\n      startDate: '',\n      endDate: '',\n      todayDate:'',\n      database: null,\n      todosRef: null,\n      newlistName: \"\",\n      newTodoName: \"\",\n      deadline: \"\",\n      showTodoType: \"all\",\n      selectCategory: '',\n      options: [\n        { text: 'bucket list', value: 'bucket list' },\n        { text: 'private', value: 'private' },\n        { text: 'recruit', value: 'recruit' },\n\n      ],\n      todos: []\n    }\n  },\n  components: {\n    Header\n  },\n  created: function() {\n    this.db = firebase.database();\n    this.uid = firebase.auth().currentUser.uid;\n    // refはreferenceでデータベースにある特定の項目を指し示すメソッド\n    this.todosRef = this.db.ref(\"todos/\" + this.uid);\n    this.test = this.db.ref(\"todos/\" + this.uid + \"/\")\n    // データに変更があると実行されるfunction\n    var _this = this;\n    this.todosRef.on('value', function(snapshot) {\n      _this.todos = snapshot.val(); // データに変化が起きたときに再取得する\n    });\n  },\n  computed: {\n    filteredList: function () {\n      let showComplete = false;\n      if (this.showTodoType == 'complete') {\n        showComplete = true;\n      }\n      for (let key in this.todos) {\n        let taskCategory = this.todos[key];\n        for (let subkey in taskCategory) {\n          let list = taskCategory[subkey];\n          list.havechildren = 0;\n          for (let subsubkey in list.subTasks) {\n            let todo = list.subTasks[subsubkey];\n            // todoTypeがallの場合\n            if (this.showTodoType == 'all') {\n              todo.todoStatus = true;\n            } else if(todo.isComplete == showComplete) {\n              todo.todoStatus = true;\n            }else {\n              todo.todoStatus = false;\n            }\n            // 全ての期間のタスク表示\n            if (this.activetab === 0){\n              list.havechildren++;\n            // 1日ごとのタスク表示\n            }else if (this.activetab === 1){\n              if (this.todayDate == todo.subDate){\n                list.havechildren++;\n              }else;\n            // 週間ごとのタスク表示\n            }else {\n              if (this.startDate <= todo.subDate && todo.subDate <= this.endDate ) {\n                list.havechildren++;\n              } else;\n            }\n          }\n        }\n      }\n      return this.todos;\n    }\n  },\n  methods: {\n    handleResize: function() {\n      // resizeのたびにこいつが発火するので、ここでやりたいことをやる\n      this.windowW = window.innerWidth;\n      this.windowH = window.innerHeight;\n    },\n    createList: function() {\n      if (this.newlistName == \"\") { return; }\n      if (this.selectCategory == \"\"){return; }\n      else  {\n        this.todosRef.child(this.selectCategory).push({\n          fixListShow: false,\n          havechildren: 0,\n          name: this.newlistName,\n          category: this.selectCategory,\n          achievementRate: 0,\n        })\n      }\n      this.show = false;\n      this.newlistName = \"\";\n    },\n    fixList: function (list, subkey) {\n      if (list.name == \"\") { return; }\n      if (this.selectCategory == \"\"){return; }\n      else  {\n        console.log(\"修正完了！\");\n        let fixListName = list.name\n        list.name = fixListName;\n        list.category = this.selectCategory;\n        let fixed = {};\n        fixed[subkey] = list;\n        list.fixListShow = false\n        this.todosRef.child(list.category).update(fixed)\n      }\n      this.fixListName = \"\";\n      this.selectCategory = \"\";\n    },\n    createTodo: function(list, subkey) {\n      console.log(list.category);\n      if (this.newTodoName == \"\") { return; }\n      else {\n        this.todosRef.child(list.category).child(subkey).child(\"/subTasks\").push({\n          subName: this.newTodoName,\n          isComplete: false,\n          subDate: this.deadline,\n          todoStatus: false,\n          fixTodoShow: false,\n        })\n      }\n      this.newTodoName = \"\";\n      this.deadline = \"\";\n    },\n    updateIsCompleteTodo: function(subkey, todo, list, subsubkey) {\n      todo.isComplete = !todo.isComplete;\n      var updates = {};\n      updates[subsubkey] = todo;\n      console.log(list);\n      this.todosRef.child(list.category).child(subkey).child(\"/subTasks\").update(updates)\n    },\n    changeShowDate: function(todo) {\n      let planeDate = todo.subDate;\n      let changeDate = planeDate.slice(-5);\n\n      return changeDate;\n    },\n    // 週に関するデータを設定\n    setWeekDate: function () {\n      let today = new Date();\n      let this_year = today.getFullYear();\n      let this_month = today.getMonth();\n      let date = today.getDate();\n\n      let day_num = today.getDay();\n      let this_monday = date - day_num + this.weekCount * 7;\n      let this_sunday = this_monday + 6;\n      let day = new String('日月火水木金土');\n\n      //月曜日の年月日\n      let start_date = new Date(this_year, this_month, this_monday);\n          start_date = (start_date.getMonth() + 1) + \"/\" + start_date.getDate() + \" (\" + day.charAt( start_date.getDay() ) + \")\"\n      //日曜日の年月日\n      let end_date = new Date(this_year, this_month, this_sunday);\n          end_date = (end_date.getMonth() + 1) + \"/\" + end_date.getDate() + \" (\" + day.charAt( end_date.getDay() ) +\")\"\n\n\n      //日曜日の年月日(データ照合用)\n      let planeStartDate = new Date(this_year, this_month, this_monday);\n          planeStartDate = planeStartDate.getFullYear() + \"-\" + (\"0\"+(planeStartDate.getMonth()+1)).slice(-2) + \"-\" + (\"0\"+planeStartDate.getDate()).slice(-2);\n\n      //月曜日の年月日(データ照合用)\n      let planeEndDate = new Date(this_year, this_month, this_sunday);\n          planeEndDate = planeEndDate.getFullYear() + \"-\" + (\"0\"+(planeEndDate.getMonth()+1)).slice(-2) + \"-\" + (\"0\"+planeEndDate.getDate()).slice(-2);\n\n\n      let target_week = start_date + \" ～ \" + end_date;\n      this.startDate = planeStartDate;\n      this.endDate = planeEndDate;\n      console.log(\"hoge\");\n      return [target_week, planeStartDate, planeEndDate];\n    },\n    setdayDate: function () {\n      let today = new Date();\n      let this_year = today.getFullYear();\n      let this_month = today.getMonth();\n      let datex = today.getDate() + this.dayCount;\n      let day = new String('日月火水木金土');\n\n      let today_date = new Date(this_year, this_month, datex);\n          today_date = (today_date.getMonth()+1)+ \"/\" + today_date.getDate() + \" (\" + day.charAt(today_date.getDay() ) +\")\"\n\n      let planetodayDate = new Date(this_year, this_month, datex);\n          planetodayDate = planetodayDate.getFullYear() + \"-\" + (\"0\"+(planetodayDate.getMonth()+1)).slice(-2) + \"-\" + (\"0\"+planetodayDate.getDate()).slice(-2)\n\n      this.todayDate = planetodayDate;\n      console.log(this.todayDate);\n      return [planetodayDate, today_date];\n    },\n    addDeadlineFixName: function (list, todo, subkey, subsubkey) {\n      if (todo.subName == \"\") { return; }\n      else  {\n        let newname = todo.subName\n        console.log(\"修正完了！\");\n        todo.subName = newname;\n        todo.subDate = this.deadline;\n        todo.fixTodoShow = false;\n\n        let addDateFixName = {};\n        addDateFixName[subsubkey] = todo;\n\n        this.todosRef.child(list.category).child(subkey).child(\"/subTasks\").update(addDateFixName)\n      }\n      this.fixListName = \"\";\n    },\n    // Listを削除\n    deleteLists: function(list, subkey) {\n      this.todosRef.child(list.category).child(subkey).remove();\n    },\n    // ToDoを削除\n    deleteTodos: function(subkey, list, subsubkey) {\n      this.todosRef.child(list.category).child(subkey).child(\"/subTasks\").child(subsubkey).remove();\n    },\n    // 週情報を取得\n    getTodayDate: function (){\n      let daydate = this.setdayDate();\n      return daydate[1];\n    },\n    getWeekDate: function () {\n      let a = this.setWeekDate();\n      return a[0];\n    }\n  },\n  mounted: function () {\n    window.addEventListener('resize', this.handleResize)\n  },\n  beforeDestroy: function () {\n    window.removeEventListener('resize', this.handleResize)\n  }\n}\n</script>\n\n<style scoped>\n.daydate {\n  margin-top: 16px;\n  text-align: center;\n}\n  .daydate-txt {\n    font-size: 1.6rem;\n  }\n  .daydate-arrow {\n    font-size: 1.6rem;\n  }\n.tab-box {\n  width: 33.3333vw;\n}\n@media screen and (min-width:1024px){\n  .filter {\n    width: calc(100vw - 288px);\n    justify-content: flex-start;\n    left: 288px;\n    transform: none;\n  }\n  .daydate {\n    margin-top: 16px;\n    text-align: center;\n  }\n    .daydate-txt {\n      font-size: 2rem;\n    }\n    .daydate-arrow {\n      font-size: 1.8rem;\n    }\n  .tab-box {\n    width: 33.3333vw;\n  }\n  .cell-content {\n    text-align:left;\n    width: 70px;\n    height: 50px;\n    font-size: 50%;\n    /* border: 1px solid #efefef; */\n  }\n  .cell-content-line {\n    border-bottom: 1px solid #efefef;\n  }\n}\n</style>\n"]}]}