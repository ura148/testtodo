{"remainingRequest":"/Users/uratomo/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/uratomo/test/src/components/Week.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/uratomo/test/src/components/Week.vue","mtime":1594198687039},{"path":"/Users/uratomo/test/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi8qIC5jYXJkIHsKICBwYWRkaW5nOiAxNnB4OwogIG1hcmdpbjogMTZweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzhkMmUzOwogIHRleHQtYWxpZ246IGxlZnQ7Cn0KCi5zdWJjYXJkIHsKICBwYWRkaW5nOiAxMnB4OwogIG1hcmdpbjogMTZweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjYTZiNmQ1Owp9CgoudG9kbyB7CiAgcGFkZGluZzogNXB4OwogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47Cn0gKi8KCmlucHV0W3R5cGU9ImNoZWNrYm94Il0geyBkaXNwbGF5OiBub25lOyB9CgppbnB1dFt0eXBlPSJjaGVja2JveCJdICsgbGFiZWwgewogIGRpc3BsYXk6IGJsb2NrOwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICBwYWRkaW5nLWxlZnQ6IDM1cHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKICBmb250OiAxNHB4LzIwcHggJ09wZW4gU2FucycsIEFyaWFsLCBzYW5zLXNlcmlmOwogIGNvbG9yOiAjMDAwOwogIGN1cnNvcjogcG9pbnRlcjsKICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lOwogIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7CiAgLW1zLXVzZXItc2VsZWN0OiBub25lOwp9CgppbnB1dFt0eXBlPSJjaGVja2JveCJdICsgbGFiZWw6bGFzdC1jaGlsZCB7IG1hcmdpbi1ib3R0b206IDA7IH0KCmlucHV0W3R5cGU9ImNoZWNrYm94Il0gKyBsYWJlbDpiZWZvcmUgewogIGNvbnRlbnQ6ICcnOwogIGRpc3BsYXk6IGJsb2NrOwogIHdpZHRoOiAyMHB4OwogIGhlaWdodDogMjBweDsKICBib3JkZXI6IDFweCBzb2xpZCAjMDUwNTA1OwogIGJvcmRlci1yYWRpdXM6IDEwMHB4OwogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBsZWZ0OiAwOwogIHRvcDogMDsKICBvcGFjaXR5OiAuNjsKICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAuMTJzLCBib3JkZXItY29sb3IgLjA4czsKICB0cmFuc2l0aW9uOiBhbGwgLjEycywgYm9yZGVyLWNvbG9yIC4wOHM7Cn0KCmlucHV0W3R5cGU9ImNoZWNrYm94Il06Y2hlY2tlZCArIGxhYmVsOmJlZm9yZSB7CiAgd2lkdGg6IDEwcHg7CiAgdG9wOiAtNXB4OwogIGxlZnQ6IDVweDsKICBib3JkZXItcmFkaXVzOiAwOwogIG9wYWNpdHk6IDE7CiAgYm9yZGVyLXRvcC1jb2xvcjogdHJhbnNwYXJlbnQ7CiAgYm9yZGVyLWxlZnQtY29sb3I6IHRyYW5zcGFyZW50OwogIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpOwogIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTsKfQo="},{"version":3,"sources":["Week.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgNA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Week.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"task\">\n    <h2>Week Todos</h2>\n  </div>\n</template>\n\n<script>\nimport firebase from \"firebase\";\n\nexport default {\n  name: \"Week\",\n  data() {\n    return {\n      database: null,\n      todosRef: null,\n      newTodoName: \"\",\n      newSubTodoName: \"\",\n      deadline:\"\",\n      subDeadline: \"\",\n      showTodoType: \"all\",\n      selected: '',\n      options: [\n        { text: 'private', value: 'private' },\n        { text: 'recruit', value: 'recruit' },\n        { text: 'bucket list', value: 'bucket list' }\n      ],\n      todos: []\n    };\n  },\n  created: function() {\n    this.db = firebase.database();\n    this.uid = firebase.auth().currentUser.uid;\n    // refはreferenceでデータベースにある特定の項目を指し示すメソッド\n    this.todosRef = this.db.ref(\"todos/\" + this.uid);\n    this.test = this.db.ref(\"todos/\" + this.uid + \"/\")\n    // データに変更があると実行されるfunction\n    var _this = this;\n    this.todosRef.on('value', function(snapshot) {\n      _this.todos = snapshot.val(); // データに変化が起きたときに再取得する\n    });\n  },\n  computed: {\n    // filteredTodos: function () {\n    //   var showComplete = false;\n    //   if (this.showTodoType == 'complete') {\n    //     showComplete = true;\n    //   }\n    //   let filterTodos = {},\n    //       filterSubTodos = {};\n    //   for (let key in this.todos) {\n    //     let todo = this.todos[key];\n    //     filterTodos[key] = todo;\n    //     for (let subkey in todo.subTasks) {\n    //       let subtodo = todo.subTasks[subkey];\n    //       // allの場合は全て表示\n    //       if (this.showTodoType == 'all') {\n    //         subtodo.judge = true;\n    //         filterSubTodos[subkey] = subtodo;\n    //       }\n    //       // completeの場合はチェックがついているもの、activeの時はチェックがついていないものを表示\n    //       else if(subtodo.isComplete == showComplete){\n    //         subtodo.judge = true;\n    //         filterSubTodos[subkey] = subtodo;\n    //       } else{\n    //         subtodo.judge = false;\n    //       }\n    //     }\n    //   }\n    //   return filterTodos;\n    // },\n    filteredTodos: function () {\n      var showComplete = false;\n      if (this.showTodoType == 'complete') {\n        showComplete = true;\n      }\n      for (let key in this.todos) {\n        let taskCategory = this.todos[key];\n        // console.log(taskCategory);\n        for (let subkey in taskCategory) {\n          console.log(subkey);\n          let list = taskCategory[subkey];\n          // console.log(list);\n          for (let subsubkey in list.subTasks) {\n            let subtodo = list.subTasks[subsubkey];\n            console.log(subtodo.subName);\n            console.log(subsubkey);\n             if (this.showTodoType == 'all') {\n               subtodo.judge = true;\n             }\n              else if(subtodo.isComplete == showComplete) {\n                subtodo.judge = true;\n              }else {\n                subtodo.judge = false;\n              }\n          }\n        }\n      }\n      return this.todos;\n    },\n    taskNumber: function () {\n      let showComplete = false,\n          allCount = 0,\n          count = 0;\n      if (this.showTodoType == 'complete') {\n        showComplete = true;\n      }\n      for (let key in this.todos) {\n        let taskCategory = this.todos[key];\n        for (let subkey in taskCategory) {\n          let list = taskCategory[subkey];\n          for (let subsubkey in list.subTasks) {\n            let subtodo = list.subTasks[subsubkey];\n            console.log(subtodo);\n            allCount += 1;\n            if (this.showTodoType == 'all'){\n              console.log(\"\");\n            } else if (subtodo.isComplete == showComplete) {\n              count += 1;\n            }\n          }\n        }\n      }\n      if (this.showTodoType == 'all') {\n        return allCount;\n      } else {\n        return count;\n      }\n    }\n  },\n  methods: {\n    createTodo: function() {\n      if (this.newTodoName == \"\") { return; }\n      if (this.selected == \"\"){return; }\n      else  {\n        this.todosRef.child(this.selected).push({\n          name: this.newTodoName,\n          date: this.deadline,\n          category: this.selected,\n          achievementRate: 0,\n        })\n      }\n      this.newTodoName = \"\";\n    },\n    createSubTodo: function(list, subkey) {\n      console.log(list.category);\n      if (this.newSubTodoName == \"\") { return; }\n      if (list.category == 'private') {\n        this.todosRef.child(list.category).child(subkey).child(\"/subTasks\").push({\n          subName: this.newSubTodoName,\n          isComplete: false,\n          subDate: this.subDeadline,\n          judge: false,\n        })\n      } else if (list.category == 'recruit') {\n        this.todosRef.child(list.category).child(subkey).child(\"/subTasks\").push({\n          subName: this.newSubTodoName,\n          isComplete: false,\n          subDate: this.subDeadline,\n          judge: false,\n        })\n      } else {\n        this.todosRef.child(list.category).child(subkey).child(\"/subTasks\").push({\n          subName: this.newSubTodoName,\n          isComplete: false,\n          subDate: this.subDeadline,\n          judge: false,\n        })\n      }\n      this.newSubTodoName = \"\";\n    },\n    updateIsCompleteTodo: function(subkey, subtodo, list, subsubkey) {\n      subtodo.isComplete = !subtodo.isComplete;\n      var updates = {};\n      updates[subsubkey] = subtodo;\n      console.log(list);\n      this.todosRef.child(list.category).child(subkey).child(\"/subTasks\").update(updates)\n    },\n    deleteLists: function(key) {\n      this.todosRef.child(key).remove();\n    },\n    // todoの削除\n    deleteTodos: function(subkey, list, subsubkey) {\n      this.todosRef.child(list.category).child(subkey).child(\"/subTasks\").child(subsubkey).remove();\n    },\n    fachievementRate: function () {\n      for (let key in this.todos) {\n        let taskCategory = this.todos[key];\n        for (let subkey in taskCategory) {\n          let list = taskCategory[subkey],\n              numerator = 0,\n              denominator = 0;\n         for (let subsubkey in list.subTasks) {\n           let subtodo = list.subTasks[subsubkey];\n           console.log(subtodo);\n           denominator += 1;\n             if (subtodo.isComplete == true){\n               numerator += 1;\n             }\n           list.achievementRate = numerator / denominator * 100;\n         }\n        }\n      }\n    }\n  }\n};\n</script>\n\n<style>\n  /* .card {\n    padding: 16px;\n    margin: 16px;\n    background-color: #c8d2e3;\n    text-align: left;\n  }\n\n  .subcard {\n    padding: 12px;\n    margin: 16px;\n    background-color: #a6b6d5;\n  }\n\n  .todo {\n    padding: 5px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  } */\n\n  input[type=\"checkbox\"] { display: none; }\n\n  input[type=\"checkbox\"] + label {\n    display: block;\n    position: relative;\n    padding-left: 35px;\n    margin-bottom: 20px;\n    font: 14px/20px 'Open Sans', Arial, sans-serif;\n    color: #000;\n    cursor: pointer;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n  }\n\n  input[type=\"checkbox\"] + label:last-child { margin-bottom: 0; }\n\n  input[type=\"checkbox\"] + label:before {\n    content: '';\n    display: block;\n    width: 20px;\n    height: 20px;\n    border: 1px solid #050505;\n    border-radius: 100px;\n    position: absolute;\n    left: 0;\n    top: 0;\n    opacity: .6;\n    -webkit-transition: all .12s, border-color .08s;\n    transition: all .12s, border-color .08s;\n  }\n\n  input[type=\"checkbox\"]:checked + label:before {\n    width: 10px;\n    top: -5px;\n    left: 5px;\n    border-radius: 0;\n    opacity: 1;\n    border-top-color: transparent;\n    border-left-color: transparent;\n    -webkit-transform: rotate(45deg);\n    transform: rotate(45deg);\n  }\n</style>\n"]}]}