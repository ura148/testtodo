{"remainingRequest":"/Users/uratomo/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/uratomo/test/src/components/Calendar.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/uratomo/test/src/components/Calendar.vue","mtime":1594733866703},{"path":"/Users/uratomo/test/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnRvZG9tYWtlIHsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDEwMCU7CiAgcG9zaXRpb246IGZpeGVkOwogIHRvcDogMDsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMyk7Cn0KCi5hY3RpdmUgewogIGNvbG9yOiByZWQ7Cn0KCi5pbnB1dHRvZG9tYWtlewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB6LWluZGV4OiA1OwogIHRvcDogNTAlOwogIGxlZnQ6IDUwJTsKICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsKfQoKaW5wdXRbdHlwZT0iY2hlY2tib3giXSB7IGRpc3BsYXk6IG5vbmU7IH0KCmlucHV0W3R5cGU9ImNoZWNrYm94Il0gKyBsYWJlbDpsYXN0LWNoaWxkIHsgbWFyZ2luLWJvdHRvbTogMDsgfQoKaW5wdXRbdHlwZT0iY2hlY2tib3giXSArIGxhYmVsOmJlZm9yZSB7CiAgY29udGVudDogJyc7CiAgZGlzcGxheTogYmxvY2s7CiAgd2lkdGg6IDIwcHg7CiAgaGVpZ2h0OiAyMHB4OwogIGJvcmRlcjogMXB4IHNvbGlkICMwNTA1MDU7CiAgYm9yZGVyLXJhZGl1czogMTAwcHg7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHRvcDogNTAlOwogIGxlZnQ6IDA7CiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpOwogIG9wYWNpdHk6IC42OwogIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIC4xMnMsIGJvcmRlci1jb2xvciAuMDhzOwogIHRyYW5zaXRpb246IGFsbCAuMTJzLCBib3JkZXItY29sb3IgLjA4czsKfQoKaW5wdXRbdHlwZT0iY2hlY2tib3giXTpjaGVja2VkICsgbGFiZWw6YmVmb3JlIHsKICB3aWR0aDogOHB4OwogIGhlaWdodDogMTJweDsKICB0b3A6IDMwJTsKICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7CiAgbGVmdDogNnB4OwogIGJvcmRlci1yYWRpdXM6IDA7CiAgb3BhY2l0eTogMTsKICBib3JkZXItdG9wLWNvbG9yOiB0cmFuc3BhcmVudDsKICBib3JkZXItbGVmdC1jb2xvcjogdHJhbnNwYXJlbnQ7CiAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7CiAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpOwp9Ci5tYWluIHsKICBtaW4taGVpZ2h0OiBjYWxjKDEwMHZoIC0gODhweCk7CiAgYmFja2dyb3VuZC1jb2xvcjogI2Q1ZTFmZDsKICBtYXJnaW4tdG9wOiA4OHB4Owp9CgouY29udGFpbmVyIHsKICBib3gtc2l6aW5nOiBib3JkZXItYm94OwogIHBhZGRpbmc6IDE2cHggMThweCAwcHg7CiAgcGFkZGluZy10b3A6IDE2cHg7Cn0KCi5jYXJkIHsKICB3aWR0aDogMTAwJQp9CiAgLmNhcmQtY2F0ZWdvcnktbmFtZSB7CiAgICBtYXJnaW4tYm90dG9tOiAxNnB4OwogIH0KICAuY2FyZC1uYW1lYm94IHsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBtYXJnaW4tYm90dG9tOiAxNnB4OwogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICB9CiAgLmNhcmQtbmFtZSB7CiAgICBmb250LXdlaWdodDogYm9sZDsKICB9CiAgLmNhcmQtbGlzdCB7CiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OwogICAgcGFkZGluZzogMTZweCA4cHg7CiAgICB3aWR0aDogMTAwJTsKICAgIGJvcmRlci1yYWRpdXM6IDhweDsKICAgIGJhY2tncm91bmQtY29sb3I6ICNmYWZhZmE7CiAgICBtYXJnaW4tYm90dG9tOiAzNnB4OwogICAgYm94LXNoYWRvdzogMHB4IDNweCA2cHggcmdiYSgwLDAsMCwwLjQpOwogIH0KICAuY2FyZC1pdGVtIHsKICAgIHBhZGRpbmc6IDE2cHggOHB4OwogICAgd2lkdGg6IDEwMDsKICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7CiAgICBib3JkZXItcmFkaXVzOiA4cHg7CiAgICBib3gtc2hhZG93OiAwcHggM3B4IDZweCByZ2JhKDAsMCwwLDAuNCk7CiAgICBtYXJnaW4tYm90dG9tOiA4cHg7CiAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAgZGlzcGxheTogZmxleDsKICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgfQogIC5jYXJkLWl0ZW0tbmFtZSB7CiAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICBwYWRkaW5nLWxlZnQ6IDM1cHg7CiAgICBmb250OiAxNHB4LzIwcHggJ09wZW4gU2FucycsIEFyaWFsLCBzYW5zLXNlcmlmOwogICAgY29sb3I6ICMwMDA7CiAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lOwogICAgLW1vei11c2VyLXNlbGVjdDogbm9uZTsKICAgIC1tcy11c2VyLXNlbGVjdDogbm9uZTsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBmbGV4LWZsb3c6IGNvbHVtbjsKICAgIG1hcmdpbi1ib3R0b206IDA7CiAgfQogIC5jYXJkLXRvZG8taW5wdXQgewogICAgaGVpZ2h0OiAyMHB4OwogICAgYm9yZGVyOiBub25lOwogICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICM3MDcwNzA7CiAgfQogICAgLmNhcmQtdG9kby1pbnB1dF9fY2hvb3NlewogICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwogICAgfQoudGFiIHsKICBkaXNwbGF5OiBmbGV4OwogIHBvc2l0aW9uOiBmaXhlZDsKICB6LWluZGV4OiAzOwogIHRvcDogNDhweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwogIGJveC1zaGFkb3c6IDBweCAzcHggNnB4IHJnYmEoMCwwLDAsMC40KTsKfQogIC50YWItYm94IHsKICAgIHdpZHRoOiAyNXZ3OwogICAgaGVpZ2h0OiA0MHB4OwogICAgZm9udC1zaXplOiAxLjRyZW07CiAgICBmb250LXdlaWdodDogYm9sZDsKICB9CiAgICAudGFiLWJveF9fYWN0aXZlIHsKICAgICAgY29sb3I6ICNmNzY3NTY7CiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmNGY0ZjQ7CiAgICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjNzA3MDcwOwogICAgfQoKLmZpbHRlciB7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKfQogIC5maWx0ZXItaXRlbTpub3QoOmxhc3QtY2hpbGQpIHsKICAgIG1hcmdpbi1yaWdodDogMjBweDsKICB9CiAgLmZpbHRlci1idG4gewogICAgcGFkZGluZzogNHB4IDE2cHg7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwogICAgYm9yZGVyLXJhZGl1czogOHB4OwogICAgYm94LXNoYWRvdzogMHB4IDNweCA2cHggcmdiYSgwLDAsMCwwLjQpOwogIH0KCi5idG4gewogIGN1cnNvcjogcG9pbnRlcjsKfQogIC5idG4tZGVsZXRlIHsKICAgIHdpZHRoOiAyNHB4OwogICAgaGVpZ2h0OiAyNHB4OwogICAgYm9yZGVyLXJhZGl1czogMjRweDsKICAgIGJhY2tncm91bmQtY29sb3I6ICNmNGY0ZjQ7CiAgICBjb2xvcjogI2I0YjRiNDsKICB9CgoucG9wdXAgewogIGNvbnRlbnQ6ICcnOwogIGRpc3BsYXk6IGJsb2NrOwogIHdpZHRoOiAxMDB2dzsKICBoZWlnaHQ6IDEwMHZoOwogIHBvc2l0aW9uOiBmaXhlZDsKICB6LWluZGV4OiAxMDsKICB0b3A6IDA7CiAgbGVmdDogMDsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNCk7Cn0KICAucG9wdXAtZml4X190b2RvIHsKICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7CiAgICBwYWRkaW5nOiAxNnB4OwogICAgd2lkdGg6IGNhbGMoMTAwdncgLSAzNnB4KTsKICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CiAgICBib3JkZXItcmFkaXVzOiA4cHg7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICB0b3A6IDUwJTsKICAgIGxlZnQ6IDUwJTsKICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpOwogICAgei1pbmRleDogMTU7CiAgfQogIC5wb3B1cC1maXgtaXRlbSB7CiAgICBtYXJnaW46IDE2cHggMDsKICB9CiAgLnBvcHVwLWZpeC1pdGVtOmZpcnN0LW9mLXR5cGUgewogICAgbWFyZ2luLXRvcDogMDsKICB9CiAgLnBvcHVwLWJ0bi1ib3ggewogICAgbWFyZ2luLXRvcDogMjRweDsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICB9CgogIC5wb3B1cC1idG4gewogICAgcGFkZGluZzogOHB4IDA7CiAgICB3aWR0aDogODBweDsKICAgIGJvcmRlci1yYWRpdXM6IDhweDsKICAgIGNvbG9yOiAjZmZmZmZmOwogIH0KICAgIC5wb3B1cC1idG5fX25lZ2F0aXZlIHsKICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2JjYmNiYzsKICAgICAgZm9udC1zaXplOiAxLjJyZW07CiAgICB9CiAgICAucG9wdXAtYnRuX19wb3NpdGl2ZSB7CiAgICAgIGJhY2tncm91bmQtY29sb3I6ICM3MTljZmM7CiAgICAgIGZvbnQtc2l6ZTogMS40cmVtOwogICAgICBmb250LXdlaWdodDogYm9sZDsKICAgIH0KICAgIC5wb3B1cC1idG5fX2xlZnQgewogICAgICBtYXJnaW4tcmlnaHQ6IDMycHg7CiAgICB9CgoKCgo="},{"version":3,"sources":["Calendar.vue"],"names":[],"mappingsqlfile":"Calendar.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"task\">\n    <Header/>\n\n    <!-- Category filter button -->\n    <main class=\"main\">\n      <ul class=\"tab\">\n        <li><button v-on:click=\"activetab=0\" v-bind:class=\"[ activetab === 0 ? 'tab-box__active' : '' ]\" class=\"tab-box\">All</button></li>\n        <li><button v-on:click=\"activetab=3\" v-bind:class=\"[ activetab === 3 ? 'tab-box__active' : '' ]\" class=\"tab-box\">Bucket List</button></li>\n        <li><button v-on:click=\"activetab=2\" v-bind:class=\"[ activetab === 2 ? 'tab-box__active' : '' ]\" class=\"tab-box\">Private</button></li>\n\n        <li><button v-on:click=\"activetab=1\" v-bind:class=\"[ activetab === 1 ? 'tab-box__active' : '' ]\" class=\"tab-box\">Recruit</button></li>\n\n      </ul>\n\n      <div class=\"container\">\n        <div v-show=\"activetab === 0\" class=\"tabcontent\">\n          <ul class=\"filter\">\n            <li class=\"filter-item\"><button class=\"filter-btn\" type=\"submit\" v-on:click=\"showTodoType = 'all'\">Active&Complete</button></li>\n            <li class=\"filter-item\"><button class=\"filter-btn\" type=\"submit\" v-on:click=\"showTodoType = 'active'\">Active</button></li>\n            <li class=\"filter-item\"><button class=\"filter-btn\" type=\"submit\" v-on:click=\"showTodoType = 'complete'\">Complete</button></li>\n          </ul>\n          <!-- listの一覧表示 -->\n\n          <div v-for=\"(taskCategory, key) in filteredTodos\" :key=\"taskCategory.id\">\n            <div class=\"card\">\n              <p class=\"card-category-name\">{{ key }}</p>\n              <div v-for=\"(list, subkey) in taskCategory\" :key=\"list.id\" class=\"card-list\">\n\n                <!-- list名＋編集btn -->\n                <div class=\"card-namebox\">\n                  <p class=\"card-name\">{{list.name}}</p>\n                  <button type=\"button\" @click=\"list.fixListShow=!list.fixListShow\" class=\"fa fa-pencil btn-fix\"></button>\n                  <button type=\"submit\" v-on:click=\"deleteLists(list, subkey)\" class=\"btn-delete\"><span class=\"fa fa-trash\"></span></button>\n                </div>\n\n                <!-- list再編集 -->\n                <div v-show=\"list.fixListShow\" class=\"popup\">\n                  <div  class=\"popup-fix__todo\">\n                    <p class=\"popup-fix-item\">List name</p>\n                    <input type=\"text\" v-model=\"list.name\" class=\" card-todo-input\">\n\n                    <p class=\"popup-fix-item\">Category</p>\n                    <select v-model=\"selected\" class=\"card-todo-input card-todo-input__choose\">\n                      <option v-for=\"option in options\" v-bind:value=\"option.value\" :key=\"option.id\">\n                        {{ option.text }}\n                      </option>\n                    </select>\n\n                    <div class=\"popup-btn-box\">\n                      <button type=\"button\" @click=\"list.fixListShow=!list.fixListShow\" class=\"popup-btn popup-btn__negative popup-btn__left\">Cancel</button>\n                      <button type=\"submit\" v-on:click=\"fixList(list, subkey)\" class=\"popup-btn popup-btn__positive\">Done</button>\n                    </div>\n                  </div>\n                </div>\n\n                <!-- todoを表示 -->\n                <ul>\n                  <li v-for=\"(subtodo, subsubkey) in list.subTasks\" :key=\"subtodo.id\">\n                    <div v-if=\"subtodo.todoStatus == true\" class=\"card-item\">\n                      <input type=\"checkbox\" v-model=\"subtodo.isComplete\">\n                      <label v-on:click=\"updateIsCompleteTodo(subkey, subtodo, list, subsubkey)\" class=\"card-item-name\">\n                        <span>{{subtodo.subName}}</span>\n                        <span>{{changeShowDate(subtodo)}}</span>\n                      </label>\n\n                      <!-- Todo編集btnと削除btn -->\n                      <div>\n                        <!-- todo編集btn -->\n                        <button type=\"button\" @click=\"subtodo.fixTodoShow=!subtodo.fixTodoShow\" class=\"fa fa-pencil btn-fix\"></button>\n\n                        <button type=\"submit\" v-on:click=\"deleteTodos(subkey, list, subsubkey)\" class=\"btn-delete\"><span class=\"fa fa-trash\"></span></button>\n                      </div>\n                    </div>\n\n                    <!-- todo再編集 -->\n                    <div v-show=\"subtodo.fixTodoShow\" class=\"popup\">\n                      <div class=\"popup-fix__todo\">\n                        <p class=\"popup-fix-item\">Todo name</p>\n                        <input type=\"text\" v-model=\"subtodo.subName\" v-bind:text=\"subtodo.subName\" class=\"card-todo-input\">\n\n                        <p class=\"popup-fix-item\">Dead line</p>\n                        <input type=\"date\" v-model=\"subDeadline\" placeholder=\"2020-01-01\" class=\"card-todo-input card-todo-input__choose\">\n\n                        <div class=\"popup-btn-box\">\n                          <button type=\"button\" @click=\"subtodo.fixTodoShow=!subtodo.fixTodoShow\" class=\"popup-btn popup-btn__negative popup-btn__left\">Cancel</button>\n                          <button type=\"submit\" v-on:click=\"addDeadlineFixName(list, subtodo, subkey, subsubkey); subtodo.fixTodoShow=!subtodo.fixTodoShow\" class=\"popup-btn popup-btn__positive\">Done</button>\n                        </div>\n                      </div>\n                    </div>\n\n                  </li>\n                </ul>\n\n                <div>\n                  <input type=\"text\" v-model=\"newTodoName\" placeholder=\"Make Todo's name\" class=\"card-todo-input\">\n                  <button type=\"button\" v-on:click=\"createTodo(list, subkey)\"><span class=\"fa fa-check\"></span></button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div v-show=\"activetab === 3\" class=\"tabcontent\">\n          <ul class=\"filter\">\n            <li class=\"filter-item\"><button class=\"filter-btn\" type=\"submit\" v-on:click=\"showTodoType = 'all'\">Active&Complete</button></li>\n            <li class=\"filter-item\"><button class=\"filter-btn\" type=\"submit\" v-on:click=\"showTodoType = 'active'\">Active</button></li>\n            <li class=\"filter-item\"><button class=\"filter-btn\" type=\"submit\" v-on:click=\"showTodoType = 'complete'\">Complete</button></li>\n          </ul>\n          <!-- listの一覧表示 -->\n\n          <div v-for=\"(taskCategory, key) in filteredTodos\" :key=\"taskCategory.id\" >\n            <div v-if=\"key == 'bucket list'\" class=\"card\">\n              <p class=\"card-category-name\">{{ key }}</p>\n\n              <div v-for=\"(list, subkey) in taskCategory\" :key=\"list.id\" class=\"card-list\">\n                <!-- list名＋編集btn -->\n                <div class=\"card-namebox\">\n                  <p class=\"card-name\">{{list.name}}</p>\n                  <button type=\"button\" @click=\"list.fixListShow=!list.fixListShow\" class=\"fa fa-pencil btn-fix\"></button>\n                  <button type=\"submit\" v-on:click=\"deleteLists(list, subkey)\" class=\"btn-delete\"><span class=\"fa fa-trash\"></span></button>\n                </div>\n\n                <!-- list再編集 -->\n                <div v-show=\"list.fixListShow\" class=\"popup\">\n                  <div  class=\"popup-fix__todo\">\n                    <p class=\"popup-fix-item\">List name</p>\n                    <input type=\"text\" v-model=\"list.name\" class=\" card-todo-input\">\n\n                    <p class=\"popup-fix-item\">Category</p>\n                    <select v-model=\"selected\" class=\"card-todo-input card-todo-input__choose\">\n                      <option v-for=\"option in options\" v-bind:value=\"option.value\" :key=\"option.id\">\n                        {{ option.text }}\n                      </option>\n                    </select>\n\n                    <div class=\"popup-btn-box\">\n                      <button type=\"button\" @click=\"list.fixListShow=!list.fixListShow\" class=\"popup-btn popup-btn__negative popup-btn__left\">Cancel</button>\n                      <button type=\"submit\" v-on:click=\"fixList(list, subkey)\" class=\"popup-btn popup-btn__positive\">Done</button>\n                    </div>\n                  </div>\n                </div>\n\n                <!-- todoを表示 -->\n                <ul>\n                  <li v-for=\"(subtodo, subsubkey) in list.subTasks\" :key=\"subtodo.id\">\n                    <div v-if=\"subtodo.todoStatus == true\" class=\"card-item\">\n                      <input type=\"checkbox\" v-model=\"subtodo.isComplete\">\n                      <label v-on:click=\"updateIsCompleteTodo(subkey, subtodo, list, subsubkey)\" class=\"card-item-name\">\n                        <span>{{subtodo.subName}}</span>\n                        <span>{{changeShowDate(subtodo)}}</span>\n                      </label>\n\n                      <!-- Todo編集btnと削除btn -->\n                      <div>\n                        <!-- todo編集btn -->\n                        <button type=\"button\" @click=\"subtodo.fixTodoShow=!subtodo.fixTodoShow\" class=\"fa fa-pencil btn-fix\"></button>\n\n                        <button type=\"submit\" v-on:click=\"deleteTodos(subkey, list, subsubkey)\" class=\"btn-delete\"><span class=\"fa fa-trash\"></span></button>\n                      </div>\n                    </div>\n\n                    <!-- todo再編集 -->\n                    <div v-show=\"subtodo.fixTodoShow\" class=\"popup\">\n                      <div class=\"popup-fix__todo\">\n                        <p class=\"popup-fix-item\">Todo name</p>\n                        <input type=\"text\" v-model=\"subtodo.subName\" v-bind:text=\"subtodo.subName\" class=\"card-todo-input\">\n\n                        <p class=\"popup-fix-item\">Dead line</p>\n                        <input type=\"date\" v-model=\"subDeadline\" placeholder=\"2020-01-01\" class=\"card-todo-input card-todo-input__choose\">\n\n                        <div class=\"popup-btn-box\">\n                          <button type=\"button\" @click=\"subtodo.fixTodoShow=!subtodo.fixTodoShow\" class=\"popup-btn popup-btn__negative popup-btn__left\">Cancel</button>\n                          <button type=\"submit\" v-on:click=\"addDeadlineFixName(list, subtodo, subkey, subsubkey); subtodo.fixTodoShow=!subtodo.fixTodoShow\" class=\"popup-btn popup-btn__positive\">Done</button>\n                        </div>\n                      </div>\n                    </div>\n\n                  </li>\n                </ul>\n\n                <div>\n                  <input type=\"text\" v-model=\"newTodoName\" placeholder=\"Make Todo's name\" class=\"card-todo-input\">\n                  <button type=\"button\" v-on:click=\"createTodo(list, subkey)\"><span class=\"fa fa-check\"></span></button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div v-show=\"activetab === 2\" class=\"tabcontent\">\n          <ul class=\"filter\">\n            <li class=\"filter-item\"><button class=\"filter-btn\" type=\"submit\" v-on:click=\"showTodoType = 'all'\">Active&Complete</button></li>\n            <li class=\"filter-item\"><button class=\"filter-btn\" type=\"submit\" v-on:click=\"showTodoType = 'active'\">Active</button></li>\n            <li class=\"filter-item\"><button class=\"filter-btn\" type=\"submit\" v-on:click=\"showTodoType = 'complete'\">Complete</button></li>\n          </ul>\n          <!-- listの一覧表示 -->\n\n          <div v-for=\"(taskCategory, key) in filteredTodos\" :key=\"taskCategory.id\" >\n            <div v-if=\"key == 'private'\" class=\"card\">\n              <p class=\"card-category-name\">{{ key }}</p>\n\n              <div v-for=\"(list, subkey) in taskCategory\" :key=\"list.id\" class=\"card-list\">\n                <!-- list名＋編集btn -->\n                <div class=\"card-namebox\">\n                  <p class=\"card-name\">{{list.name}}</p>\n                  <button type=\"button\" @click=\"list.fixListShow=!list.fixListShow\" class=\"fa fa-pencil btn-fix\"></button>\n                  <button type=\"submit\" v-on:click=\"deleteLists(list, subkey)\" class=\"btn-delete\"><span class=\"fa fa-trash\"></span></button>\n                </div>\n\n                <!-- list再編集 -->\n                <div v-show=\"list.fixListShow\" class=\"popup\">\n                  <div  class=\"popup-fix__todo\">\n                    <p class=\"popup-fix-item\">List name</p>\n                    <input type=\"text\" v-model=\"list.name\" class=\" card-todo-input\">\n\n                    <p class=\"popup-fix-item\">Category</p>\n                    <select v-model=\"selected\" class=\"card-todo-input card-todo-input__choose\">\n                      <option v-for=\"option in options\" v-bind:value=\"option.value\" :key=\"option.id\">\n                        {{ option.text }}\n                      </option>\n                    </select>\n\n                    <div class=\"popup-btn-box\">\n                      <button type=\"button\" @click=\"list.fixListShow=!list.fixListShow\" class=\"popup-btn popup-btn__negative popup-btn__left\">Cancel</button>\n                      <button type=\"submit\" v-on:click=\"fixList(list, subkey)\" class=\"popup-btn popup-btn__positive\">Done</button>\n                    </div>\n                  </div>\n                </div>\n\n                <!-- todoを表示 -->\n                <ul>\n                  <li v-for=\"(subtodo, subsubkey) in list.subTasks\" :key=\"subtodo.id\">\n                    <div v-if=\"subtodo.todoStatus == true\" class=\"card-item\">\n                      <input type=\"checkbox\" v-model=\"subtodo.isComplete\">\n                      <label v-on:click=\"updateIsCompleteTodo(subkey, subtodo, list, subsubkey)\" class=\"card-item-name\">\n                        <span>{{subtodo.subName}}</span>\n                        <span>{{changeShowDate(subtodo)}}</span>\n                      </label>\n\n                      <!-- Todo編集btnと削除btn -->\n                      <div>\n                        <!-- todo編集btn -->\n                        <button type=\"button\" @click=\"subtodo.fixTodoShow=!subtodo.fixTodoShow\" class=\"fa fa-pencil btn-fix\"></button>\n\n                        <button type=\"submit\" v-on:click=\"deleteTodos(subkey, list, subsubkey)\" class=\"btn-delete\"><span class=\"fa fa-trash\"></span></button>\n                      </div>\n                    </div>\n\n                    <!-- todo再編集 -->\n                    <div v-show=\"subtodo.fixTodoShow\" class=\"popup\">\n                      <div class=\"popup-fix__todo\">\n                        <p class=\"popup-fix-item\">Todo name</p>\n                        <input type=\"text\" v-model=\"subtodo.subName\" v-bind:text=\"subtodo.subName\" class=\"card-todo-input\">\n\n                        <p class=\"popup-fix-item\">Dead line</p>\n                        <input type=\"date\" v-model=\"subDeadline\" placeholder=\"2020-01-01\" class=\"card-todo-input card-todo-input__choose\">\n\n                        <div class=\"popup-btn-box\">\n                          <button type=\"button\" @click=\"subtodo.fixTodoShow=!subtodo.fixTodoShow\" class=\"popup-btn popup-btn__negative popup-btn__left\">Cancel</button>\n                          <button type=\"submit\" v-on:click=\"addDeadlineFixName(list, subtodo, subkey, subsubkey); subtodo.fixTodoShow=!subtodo.fixTodoShow\" class=\"popup-btn popup-btn__positive\">Done</button>\n                        </div>\n                      </div>\n                    </div>\n\n                  </li>\n                </ul>\n\n                <div>\n                  <input type=\"text\" v-model=\"newTodoName\" placeholder=\"Make Todo's name\" class=\"card-todo-input\">\n                  <button type=\"button\" v-on:click=\"createTodo(list, subkey)\"><span class=\"fa fa-check\"></span></button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div v-show=\"activetab === 1\" class=\"tabcontent\">\n          <ul class=\"filter\">\n            <li class=\"filter-item\"><button class=\"filter-btn\" type=\"submit\" v-on:click=\"showTodoType = 'all'\">Active&Complete</button></li>\n            <li class=\"filter-item\"><button class=\"filter-btn\" type=\"submit\" v-on:click=\"showTodoType = 'active'\">Active</button></li>\n            <li class=\"filter-item\"><button class=\"filter-btn\" type=\"submit\" v-on:click=\"showTodoType = 'complete'\">Complete</button></li>\n          </ul>\n          <!-- listの一覧表示 -->\n\n          <div v-for=\"(taskCategory, key) in filteredTodos\" :key=\"taskCategory.id\" >\n            <div v-if=\"key == 'recruit'\" class=\"card\">\n              <p class=\"card-category-name\">{{ key }}</p>\n\n              <div v-for=\"(list, subkey) in taskCategory\" :key=\"list.id\" class=\"card-list\">\n                <!-- list名＋編集btn -->\n                <div class=\"card-namebox\">\n                  <p class=\"card-name\">{{list.name}}</p>\n                  <button type=\"button\" @click=\"list.fixListShow=!list.fixListShow\" class=\"fa fa-pencil btn-fix\"></button>\n                  <button type=\"submit\" v-on:click=\"deleteLists(list, subkey)\" class=\"btn-delete\"><span class=\"fa fa-trash\"></span></button>\n                </div>\n\n                <!-- list再編集 -->\n                <div v-show=\"list.fixListShow\" class=\"popup\">\n                  <div  class=\"popup-fix__todo\">\n                    <p class=\"popup-fix-item\">List name</p>\n                    <input type=\"text\" v-model=\"list.name\" class=\" card-todo-input\">\n\n                    <p class=\"popup-fix-item\">Category</p>\n                    <select v-model=\"selected\" class=\"card-todo-input card-todo-input__choose\">\n                      <option v-for=\"option in options\" v-bind:value=\"option.value\" :key=\"option.id\">\n                        {{ option.text }}\n                      </option>\n                    </select>\n\n                    <div class=\"popup-btn-box\">\n                      <button type=\"button\" @click=\"list.fixListShow=!list.fixListShow\" class=\"popup-btn popup-btn__negative popup-btn__left\">Cancel</button>\n                      <button type=\"submit\" v-on:click=\"fixList(list, subkey)\" class=\"popup-btn popup-btn__positive\">Done</button>\n                    </div>\n                  </div>\n                </div>\n\n                <!-- todoを表示 -->\n                <ul>\n                  <li v-for=\"(subtodo, subsubkey) in list.subTasks\" :key=\"subtodo.id\">\n                    <div v-if=\"subtodo.todoStatus == true\" class=\"card-item\">\n                      <input type=\"checkbox\" v-model=\"subtodo.isComplete\">\n                      <label v-on:click=\"updateIsCompleteTodo(subkey, subtodo, list, subsubkey)\" class=\"card-item-name\">\n                        <span>{{subtodo.subName}}</span>\n                        <span>{{changeShowDate(subtodo)}}</span>\n                      </label>\n\n                      <!-- Todo編集btnと削除btn -->\n                      <div>\n                        <!-- todo編集btn -->\n                        <button type=\"button\" @click=\"subtodo.fixTodoShow=!subtodo.fixTodoShow\" class=\"fa fa-pencil btn-fix\"></button>\n\n                        <button type=\"submit\" v-on:click=\"deleteTodos(subkey, list, subsubkey)\" class=\"btn-delete\"><span class=\"fa fa-trash\"></span></button>\n                      </div>\n                    </div>\n\n                    <!-- todo再編集 -->\n                    <div v-show=\"subtodo.fixTodoShow\" class=\"popup\">\n                      <div class=\"popup-fix__todo\">\n                        <p class=\"popup-fix-item\">Todo name</p>\n                        <input type=\"text\" v-model=\"subtodo.subName\" v-bind:text=\"subtodo.subName\" class=\"card-todo-input\">\n\n                        <p class=\"popup-fix-item\">Dead line</p>\n                        <input type=\"date\" v-model=\"subDeadline\" placeholder=\"2020-01-01\" class=\"card-todo-input card-todo-input__choose\">\n\n                        <div class=\"popup-btn-box\">\n                          <button type=\"button\" @click=\"subtodo.fixTodoShow=!subtodo.fixTodoShow\" class=\"popup-btn popup-btn__negative popup-btn__left\">Cancel</button>\n                          <button type=\"submit\" v-on:click=\"addDeadlineFixName(list, subtodo, subkey, subsubkey); subtodo.fixTodoShow=!subtodo.fixTodoShow\" class=\"popup-btn popup-btn__positive\">Done</button>\n                        </div>\n                      </div>\n                    </div>\n\n                  </li>\n                </ul>\n\n                <div>\n                  <input type=\"text\" v-model=\"newTodoName\" placeholder=\"Make Todo's name\" class=\"card-todo-input\">\n                  <button type=\"button\" v-on:click=\"createTodo(list, subkey)\"><span class=\"fa fa-check\"></span></button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n      <!-- Make list button -->\n      <button type=\"button\" name=\"makelist\" @click=\"show=!show\" class=\"button-round button-round__left\" v-bind:class=\"{actives: show}\">\n        <span v-if=\"show == false\" class=\"fa fa-list\"></span>\n        <span v-else class=\"fa fa-times\"></span>\n      </button>\n\n      <!-- Make list contents -->\n      <div v-show=\"show\" class=\"todomake\">\n        <!-- 初期はVーmodelで\"newlistName\"を入れているが空白、故にタスク作った後に空白にしないとミスが起こる -->\n        <div class=\"inputtodomake\">\n          <input type=\"text\" v-model=\"newlistName\">\n          <select v-model=\"selected\">\n            <option v-for=\"option in options\" v-bind:value=\"option.value\" :key=\"option.id\">\n              {{ option.text }}\n            </option>\n          </select>\n          <!-- <button type=\"submit\" v-on:click=\"createList()\">タスク作成</button> -->\n          <button type=\"submit\" v-on:click=\"createList()\">リスト作成</button>\n        </div>\n      </div>\n\n      <router-link to=\"/calendar\">\n        <button type=\"button\" name=\"makelist\" class=\"button-round button-round__right\">\n          <span class=\"fa fa-calendar-check-o\"></span>\n        </button>\n      </router-link>\n    </main>\n\n  </div>\n</template>\n\n<script>\nimport Header from '@/components/Header.vue';\nimport firebase from \"firebase\";\n\nexport default {\n  name: \"Calendar\",\n  data() {\n    return {\n      show: false,\n      activetab: 0,\n      database: null,\n      todosRef: null,\n      newlistName: '',\n      fixListName: '',\n      newTodoName: '',\n      fixTodoName: '',\n      deadline: '',\n      subDeadline: '',\n      showTodoType: \"all\",\n      selected: '',\n      options: [\n        { text: 'bucket list', value: 'bucket list' },\n        { text: 'private', value: 'private' },\n        { text: 'recruit', value: 'recruit' },\n      ],\n      todos: []\n    };\n  },\n  components: {\n    Header\n  },\n  created: function() {\n    this.db = firebase.database();\n    this.uid = firebase.auth().currentUser.uid;\n    // refはreferenceでデータベースにある特定の項目を指し示すメソッド\n    this.todosRef = this.db.ref(\"todos/\" + this.uid);\n    this.test = this.db.ref(\"todos/\" + this.uid + \"/\")\n    // データに変更があると実行されるfunction\n    var _this = this;\n    this.todosRef.on('value', function(snapshot) {\n      _this.todos = snapshot.val(); // データに変化が起きたときに再取得する\n    });\n  },\n  computed: {\n    filteredTodos: function () {\n      var showComplete = false;\n      if (this.showTodoType == 'complete') {\n        showComplete = true;\n      }\n      for (let key in this.todos) {\n        let taskCategory = this.todos[key];\n        // console.log(taskCategory);\n        for (let subkey in taskCategory) {\n          let list = taskCategory[subkey];\n          // console.log(list);\n          for (let subsubkey in list.subTasks) {\n            let subtodo = list.subTasks[subsubkey];\n             if (this.showTodoType == 'all') {\n               subtodo.todoStatus = true;\n             }\n              else if(subtodo.isComplete == showComplete) {\n                subtodo.todoStatus = true;\n              }else {\n                subtodo.todoStatus = false;\n              }\n          }\n        }\n      }\n      return this.todos;\n    },\n    taskNumber: function () {\n      let showComplete = false,\n          allCount = 0,\n          count = 0;\n      if (this.showTodoType == 'complete') {\n        showComplete = true;\n      }\n      for (let key in this.todos) {\n        let taskCategory = this.todos[key];\n        for (let subkey in taskCategory) {\n          let list = taskCategory[subkey];\n          for (let subsubkey in list.subTasks) {\n            let subtodo = list.subTasks[subsubkey];\n            console.log(subtodo);\n            allCount += 1;\n            if (this.showTodoType == 'all');\n            else if (subtodo.isComplete == showComplete) {\n              count += 1;\n            }\n          }\n        }\n      }\n      if (this.showTodoType == 'all') {\n        return allCount;\n      } else {\n        return count;\n      }\n    }\n  },\n  methods: {\n    createList: function() {\n      if (this.newlistName == \"\") { return; }\n      if (this.selected == \"\"){return; }\n      else  {\n        this.todosRef.child(this.selected).push({\n          fixListShow: false,\n          havechildren: 0,\n          name: this.newlistName,\n          category: this.selected,\n          achievementRate: 0,\n        })\n      }\n      this.newlistName = \"\";\n    },\n    fixList: function (list, subkey) {\n      if (list.name == \"\") { return; }\n      if (this.selected == \"\"){return; }\n      else  {\n        console.log(\"修正完了！\");\n        let fixListName = list.name\n        list.name = fixListName;\n        list.category = this.selected;\n        let fixed = {};\n        fixed[subkey] = list;\n        list.fixListShow = false\n        this.todosRef.child(list.category).update(fixed)\n      }\n      this.fixListName = \"\";\n      this.selected = \"\";\n    },\n    createTodo: function(list, subkey) {\n      console.log(list.category);\n      if (this.newTodoName == \"\") { return; }\n      else {\n        this.todosRef.child(list.category).child(subkey).child(\"/subTasks\").push({\n          subName: this.newTodoName,\n          isComplete: false,\n          subDate: this.subDeadline,\n          todoStatus: false,\n          fixTodoShow: false,\n        })\n      }\n      this.newTodoName = \"\";\n    },\n    addDeadlineFixName: function (list, subtodo, subkey, subsubkey) {\n      if (subtodo.subName == \"\") { return; }\n      else  {\n        let newname = subtodo.subName\n        console.log(\"修正完了！\");\n        subtodo.subName = newname;\n        subtodo.subDate = this.subDeadline;\n        subtodo.fixTodoShow = false;\n\n        let addDateFixName = {};\n        addDateFixName[subsubkey] = subtodo;\n\n        this.todosRef.child(list.category).child(subkey).child(\"/subTasks\").update(addDateFixName)\n      }\n      this.fixListName = \"\";\n    },\n    updateIsCompleteTodo: function(subkey, subtodo, list, subsubkey) {\n      subtodo.isComplete = !subtodo.isComplete;\n      var updates = {};\n      updates[subsubkey] = subtodo;\n      console.log(list);\n      this.todosRef.child(list.category).child(subkey).child(\"/subTasks\").update(updates)\n    },\n    changeShowDate: function(subtodo) {\n      let planeDate = subtodo.subDate;\n      let changeDate = planeDate.slice(-5);\n\n      return changeDate;\n    },\n    deleteLists: function(list, subkey) {\n      this.todosRef.child(list.category).child(subkey).remove();\n    },\n    // todoの削除\n    deleteTodos: function(subkey, list, subsubkey) {\n      this.todosRef.child(list.category).child(subkey).child(\"/subTasks\").child(subsubkey).remove();\n    },\n    achievementRate: function () {\n      for (let key in this.todos) {\n        let taskCategory = this.todos[key];\n        for (let subkey in taskCategory) {\n          let list = taskCategory[subkey],\n              numerator = 0,\n              denominator = 0;\n         for (let subsubkey in list.subTasks) {\n           let subtodo = list.subTasks[subsubkey];\n           denominator += 1;\n             if (subtodo.isComplete == true){\n               numerator += 1;\n             }\n           list.achievementRate = numerator / denominator * 100;\n         }\n        }\n      }\n    }\n  }\n};\n</script>\n\n<style>\n  .todomake {\n    width: 100%;\n    height: 100%;\n    position: fixed;\n    top: 0;\n    background-color: rgba(0, 0, 0, 0.3);\n  }\n\n  .active {\n    color: red;\n  }\n\n  .inputtodomake{\n    position: absolute;\n    z-index: 5;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n\n  input[type=\"checkbox\"] { display: none; }\n\n  input[type=\"checkbox\"] + label:last-child { margin-bottom: 0; }\n\n  input[type=\"checkbox\"] + label:before {\n    content: '';\n    display: block;\n    width: 20px;\n    height: 20px;\n    border: 1px solid #050505;\n    border-radius: 100px;\n    position: absolute;\n    top: 50%;\n    left: 0;\n    transform: translateY(-50%);\n    opacity: .6;\n    -webkit-transition: all .12s, border-color .08s;\n    transition: all .12s, border-color .08s;\n  }\n\n  input[type=\"checkbox\"]:checked + label:before {\n    width: 8px;\n    height: 12px;\n    top: 30%;\n    transform: translateY(-50%);\n    left: 6px;\n    border-radius: 0;\n    opacity: 1;\n    border-top-color: transparent;\n    border-left-color: transparent;\n    -webkit-transform: rotate(45deg);\n    transform: rotate(45deg);\n  }\n  .main {\n    min-height: calc(100vh - 88px);\n    background-color: #d5e1fd;\n    margin-top: 88px;\n  }\n\n  .container {\n    box-sizing: border-box;\n    padding: 16px 18px 0px;\n    padding-top: 16px;\n  }\n\n  .card {\n    width: 100%\n  }\n    .card-category-name {\n      margin-bottom: 16px;\n    }\n    .card-namebox {\n      display: flex;\n      margin-bottom: 16px;\n      align-items: center;\n    }\n    .card-name {\n      font-weight: bold;\n    }\n    .card-list {\n      box-sizing: border-box;\n      padding: 16px 8px;\n      width: 100%;\n      border-radius: 8px;\n      background-color: #fafafa;\n      margin-bottom: 36px;\n      box-shadow: 0px 3px 6px rgba(0,0,0,0.4);\n    }\n    .card-item {\n      padding: 16px 8px;\n      width: 100;\n      background-color: #ffffff;\n      border-radius: 8px;\n      box-shadow: 0px 3px 6px rgba(0,0,0,0.4);\n      margin-bottom: 8px;\n      align-items: center;\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n    }\n    .card-item-name {\n      position: relative;\n      padding-left: 35px;\n      font: 14px/20px 'Open Sans', Arial, sans-serif;\n      color: #000;\n      cursor: pointer;\n      -webkit-user-select: none;\n      -moz-user-select: none;\n      -ms-user-select: none;\n      display: flex;\n      flex-flow: column;\n      margin-bottom: 0;\n    }\n    .card-todo-input {\n      height: 20px;\n      border: none;\n      border-bottom: 1px solid #707070;\n    }\n      .card-todo-input__choose{\n        background-color: #fff;\n      }\n  .tab {\n    display: flex;\n    position: fixed;\n    z-index: 3;\n    top: 48px;\n    background-color: #fff;\n    box-shadow: 0px 3px 6px rgba(0,0,0,0.4);\n  }\n    .tab-box {\n      width: 25vw;\n      height: 40px;\n      font-size: 1.4rem;\n      font-weight: bold;\n    }\n      .tab-box__active {\n        color: #f76756;\n        background-color: #f4f4f4;\n        border-bottom: 2px solid #707070;\n      }\n\n  .filter {\n    display: flex;\n    justify-content: center;\n  }\n    .filter-item:not(:last-child) {\n      margin-right: 20px;\n    }\n    .filter-btn {\n      padding: 4px 16px;\n      background-color: #fff;\n      border-radius: 8px;\n      box-shadow: 0px 3px 6px rgba(0,0,0,0.4);\n    }\n\n  .btn {\n    cursor: pointer;\n  }\n    .btn-delete {\n      width: 24px;\n      height: 24px;\n      border-radius: 24px;\n      background-color: #f4f4f4;\n      color: #b4b4b4;\n    }\n\n  .popup {\n    content: '';\n    display: block;\n    width: 100vw;\n    height: 100vh;\n    position: fixed;\n    z-index: 10;\n    top: 0;\n    left: 0;\n    background-color: rgba(0, 0, 0, 0.4);\n  }\n    .popup-fix__todo {\n      box-sizing: border-box;\n      padding: 16px;\n      width: calc(100vw - 36px);\n      background-color: #fff;\n      border-radius: 8px;\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      z-index: 15;\n    }\n    .popup-fix-item {\n      margin: 16px 0;\n    }\n    .popup-fix-item:first-of-type {\n      margin-top: 0;\n    }\n    .popup-btn-box {\n      margin-top: 24px;\n      text-align: center;\n    }\n\n    .popup-btn {\n      padding: 8px 0;\n      width: 80px;\n      border-radius: 8px;\n      color: #ffffff;\n    }\n      .popup-btn__negative {\n        background-color: #bcbcbc;\n        font-size: 1.2rem;\n      }\n      .popup-btn__positive {\n        background-color: #719cfc;\n        font-size: 1.4rem;\n        font-weight: bold;\n      }\n      .popup-btn__left {\n        margin-right: 32px;\n      }\n\n\n\n\n</style>\n"]}]}