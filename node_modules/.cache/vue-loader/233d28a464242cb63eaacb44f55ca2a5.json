{"remainingRequest":"/Users/uratomo/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/uratomo/test/src/components/Calendar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/uratomo/test/src/components/Calendar.vue","mtime":1594643364983},{"path":"/Users/uratomo/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Calendar.vue"],"names":[],"mappingsfile":"Calendar.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <header>\n      <h1>CategoList</h1>\n    </header>\n\n    <!-- Category filter radio button -->\n    <div class=\"tabs\">\n      <button v-on:click=\"activetab=0\" v-bind:class=\"[ activetab === 0 ? 'active' : '' ]\" class=\"button-category\">All</button>\n      <button v-on:click=\"activetab=1\" v-bind:class=\"[ activetab === 1 ? 'active' : '' ]\" class=\"button-category\">day</button>\n      <button v-on:click=\"activetab=2\" v-bind:class=\"[ activetab === 2 ? 'active' : '' ]\" class=\"button-category\">week</button>\n    </div>\n\n    <div class=\"content\">\n      <div v-show=\"activetab === 0\" class=\"tabcontent\">\n        <ul>\n          <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'all'\">すべて</button></li>\n          <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'active'\">未完タスク一覧</button></li>\n          <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'complete'\">完了タスク一覧</button></li>\n        </ul>\n\n        <router-link to=\"/\">task</router-link>\n\n        <div v-for=\"(taskCategory, key) in filteredList\" :key=\"taskCategory.id\" class=\"card\">\n          <p>{{ key }}</p>\n          <div v-for=\"(list, subkey) in taskCategory\" :key=\"list.id\">\n            <template v-if=\"list.havechildren != 0\">\n              <ul class=\"subcard\">\n                  {{ list.name + \"リスト\"}}\n                <li v-for=\"(subtodo, subsubkey) in list.subTasks\" :key=\"subtodo.id\">\n                  <div v-if=\"subtodo.todoStatus == true\" class=\"todo\">\n                    <input type=\"checkbox\" v-model=\"subtodo.isComplete\">\n                    <label v-on:click=\"updateIsCompleteTodo(subkey, subtodo, list, subsubkey)\">{{subtodo.subName}}</label>\n                    {{subtodo.subDate}}\n                    <button type=\"submit\" v-on:click=\"deleteTodos(subkey, list, subsubkey)\">削除</button>\n                  </div>\n                </li>\n                <div>\n                  <input type=\"text\" v-model=\"newSubTodoName\">\n                  <input type=\"date\" v-model=\"subDeadline\">\n                  <button type=\"button\" v-on:click=\"createSubTodo(list, subkey)\">サブタスク作成</button>\n                </div>\n                <button type=\"submit\" v-on:click=\"deleteLists(key)\">削除</button>\n              </ul>\n            </template>\n          </div>\n        </div>\n      </div>\n      <div v-show=\"activetab === 1\" class=\"tabcontent\">\n        <div v-if=\"activetab === 1\" class=\"\">\n          <button type=\"button\" v-on:click=\"dayCount--\">◀︎</button>\n          <span>{{ getTodayDate() }}</span>\n          <button type=\"button\" v-on:click=\"dayCount++\">▶︎</button>\n        </div>\n\n\n        <ul>\n          <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'all'\">すべて</button></li>\n          <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'active'\">未完タスク一覧</button></li>\n          <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'complete'\">完了タスク一覧</button></li>\n        </ul>\n\n        <router-link to=\"/\">task</router-link>\n\n        <div v-for=\"(taskCategory, key) in filteredList\" :key=\"taskCategory.id\" class=\"card\">\n          <p>{{ key }}</p>\n          <div v-for=\"(list, subkey) in taskCategory\" :key=\"list.id\">\n            <template v-if=\"list.havechildren != 0\">\n              <ul class=\"subcard\">\n                  {{ list.name + \"リスト\"}}\n                <li v-for=\"(subtodo, subsubkey) in list.subTasks\" :key=\"subtodo.id\">\n                  <div v-if=\"todayDate == subtodo.subDate && subtodo.todoStatus == true\" class=\"todo\">\n                    <input type=\"checkbox\" v-model=\"subtodo.isComplete\">\n                    <label v-on:click=\"updateIsCompleteTodo(subkey, subtodo, list, subsubkey)\">{{subtodo.subName}}</label>\n                    {{subtodo.subDate}}\n                    <button type=\"submit\" v-on:click=\"deleteTodos(subkey, list, subsubkey)\">削除</button>\n                  </div>\n                </li>\n                <div>\n                  <input type=\"text\" v-model=\"newSubTodoName\">\n                  <input type=\"date\" v-model=\"subDeadline\">\n                  <button type=\"button\" v-on:click=\"createSubTodo(list, subkey)\">サブタスク作成</button>\n                </div>\n                <button type=\"submit\" v-on:click=\"deleteLists(key)\">削除</button>\n              </ul>\n            </template>\n          </div>\n        </div>\n      </div>\n      <div v-show=\"activetab === 2\" class=\"tabcontent\">\n        <template >\n          <div v-if=\"activetab === 2\" class=\"\">\n            <button type=\"button\" v-on:click=\"weekCount--\">◀︎</button>\n            <span>{{ getWeekDate() }}</span>\n            <button type=\"button\" v-on:click=\"weekCount++\">▶︎</button>\n          </div>\n\n          <ul>\n            <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'all'\">すべて</button></li>\n            <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'active'\">未完タスク一覧</button></li>\n            <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'complete'\">完了タスク一覧</button></li>\n          </ul>\n\n          <router-link to=\"/\">task</router-link>\n\n          <div v-for=\"(taskCategory, key) in filteredList\" :key=\"taskCategory.id\" class=\"card\">\n            <p>{{ key }}</p>\n            <div v-for=\"(list, subkey) in taskCategory\" :key=\"list.id\">\n              <template v-if=\"list.havechildren != 0\">\n                <ul class=\"subcard\">\n                    {{ list.name + \"リスト\"}}\n                  <li v-for=\"(subtodo, subsubkey) in list.subTasks\" :key=\"subtodo.id\">\n                    <div v-if=\"startDate <= subtodo.subDate && subtodo.subDate <= endDate && subtodo.todoStatus == true\" class=\"todo\">\n                      <input type=\"checkbox\" v-model=\"subtodo.isComplete\">\n                      <label v-on:click=\"updateIsCompleteTodo(subkey, subtodo, list, subsubkey)\">{{subtodo.subName}}</label>\n                      {{subtodo.subDate}}\n                      <button type=\"submit\" v-on:click=\"deleteTodos(subkey, list, subsubkey)\">削除</button>\n                    </div>\n                  </li>\n                  <div>\n                    <input type=\"text\" v-model=\"newSubTodoName\">\n                    <input type=\"date\" v-model=\"subDeadline\">\n                    <button type=\"button\" v-on:click=\"createSubTodo(list, subkey)\">サブタスク作成</button>\n                  </div>\n                  <button type=\"submit\" v-on:click=\"deleteLists(key)\">削除</button>\n                </ul>\n              </template>\n            </div>\n          </div>\n        </template>\n      </div>\n    </div>\n\n    <router-link to=\"/\">\n      <button type=\"button\" name=\"makelist\" class=\"button-round button-round__right\">\n        <span class=\"fa fa-check-square\"></span>\n      </button>\n    </router-link>\n  </div>\n</template>\n\n<script>\nimport firebase from \"firebase\";\n\nexport default {\n  name: 'calendar',\n  data() {\n    return {\n      show: false,\n      activetab: 0,\n      dayCount: 0,\n      weekCount: 0,\n      monthCount: 0,\n      startDate: '',\n      endDate: '',\n      todayDate:'',\n      database: null,\n      todosRef: null,\n      newTodoName: \"\",\n      newSubTodoName: \"\",\n      deadline:\"\",\n      subDeadline: \"\",\n      showTodoType: \"all\",\n      selected: '',\n      options: [\n        { text: 'private', value: 'private' },\n        { text: 'recruit', value: 'recruit' },\n        { text: 'bucket list', value: 'bucket list' }\n      ],\n      todos: []\n    }\n  },\n  created: function() {\n    this.db = firebase.database();\n    this.uid = firebase.auth().currentUser.uid;\n    // refはreferenceでデータベースにある特定の項目を指し示すメソッド\n    this.todosRef = this.db.ref(\"todos/\" + this.uid);\n    this.test = this.db.ref(\"todos/\" + this.uid + \"/\");\n    // データに変更があると実行されるfunction\n    var _this = this;\n    this.todosRef.on('value', function(snapshot) {\n      _this.todos = snapshot.val(); // データに変化が起きたときに再取得する\n    });\n  },\n  computed: {\n    filteredList: function () {\n      let showComplete = false;\n      if (this.showTodoType == 'complete') {\n        showComplete = true;\n      }\n      for (let key in this.todos) {\n        let taskCategory = this.todos[key];\n        for (let subkey in taskCategory) {\n          let list = taskCategory[subkey];\n          list.havechildren = 0;\n          for (let subsubkey in list.subTasks) {\n            let subtodo = list.subTasks[subsubkey];\n            // todoTypeがallの場合\n            if (this.showTodoType == 'all') {\n              subtodo.todoStatus = true;\n            } else if(subtodo.isComplete == showComplete) {\n              subtodo.todoStatus = true;\n            }else {\n              subtodo.todoStatus = false;\n            }\n            // 全ての期間のタスク表示\n            if (this.activetab === 0){\n              list.havechildren++;\n            // 1日ごとのタスク表示\n            }else if (this.activetab === 1){\n              if (this.todayDate == subtodo.subDate){\n                list.havechildren++;\n              }else;\n            // 週間ごとのタスク表示\n            }else {\n              if (this.startDate <= subtodo.subDate && subtodo.subDate <= this.endDate ) {\n                list.havechildren++;\n              } else;\n            }\n          }\n        }\n      }\n      return this.todos;\n    }\n  },\n\n  methods: {\n    // ToDo作成\n    createSubTodo: function(list, subkey) {\n      console.log(list.category);\n      if (this.newSubTodoName == \"\") { return; }\n      if (list.category == 'private') {\n        this.todosRef.child(list.category).child(subkey).child(\"/subTasks\").push({\n          subName: this.newSubTodoName,\n          isComplete: false,\n          subDate: this.subDeadline,\n          todoStatus: false,\n        })\n      } else if (list.category == 'recruit') {\n        this.todosRef.child(list.category).child(subkey).child(\"/subTasks\").push({\n          subName: this.newSubTodoName,\n          isComplete: false,\n          subDate: this.subDeadline,\n          todoStatus: false,\n        })\n      } else {\n        this.todosRef.child(list.category).child(subkey).child(\"/subTasks\").push({\n          subName: this.newSubTodoName,\n          isComplete: false,\n          subDate: this.subDeadline,\n          todoStatus: false,\n        })\n      }\n      this.newSubTodoName = \"\";\n    },\n    updateIsCompleteTodo: function(subkey, subtodo, list, subsubkey) {\n      subtodo.isComplete = !subtodo.isComplete;\n      var updates = {};\n      updates[subsubkey] = subtodo;\n      console.log(list);\n      this.todosRef.child(list.category).child(subkey).child(\"/subTasks\").update(updates)\n    },\n    // 週に関するデータを設定\n    setWeekDate: function () {\n      let today = new Date();\n      let this_year = today.getFullYear();\n      let this_month = today.getMonth();\n      let date = today.getDate();\n\n      let day_num = today.getDay();\n      let this_monday = date - day_num + this.weekCount * 7;\n      let this_sunday = this_monday + 6;\n      let day = new String('日月火水木金土');\n\n      //月曜日の年月日\n      let start_date = new Date(this_year, this_month, this_monday);\n          start_date = start_date.getFullYear() + \"年\" + (start_date.getMonth() + 1) + \"月\" + start_date.getDate() + \"日\" + \" (\" + day.charAt( start_date.getDay() ) + \")\"\n      //日曜日の年月日\n      let end_date = new Date(this_year, this_month, this_sunday);\n          end_date = end_date.getFullYear() + \"年\" + (end_date.getMonth() + 1) + \"月\" + end_date.getDate() + \"日\" + \" (\" + day.charAt( end_date.getDay() ) +\")\"\n\n\n      //日曜日の年月日(データ照合用)\n      let planeStartDate = new Date(this_year, this_month, this_monday);\n          planeStartDate = planeStartDate.getFullYear() + \"-\" + (\"0\"+(planeStartDate.getMonth()+1)).slice(-2) + \"-\" + (\"0\"+planeStartDate.getDate()).slice(-2);\n\n      //月曜日の年月日(データ照合用)\n      let planeEndDate = new Date(this_year, this_month, this_sunday);\n          planeEndDate = planeEndDate.getFullYear() + \"-\" + (\"0\"+(planeEndDate.getMonth()+1)).slice(-2) + \"-\" + (\"0\"+planeEndDate.getDate()).slice(-2);\n\n\n      let target_week = start_date + \" ～ \" + end_date;\n      this.startDate = planeStartDate;\n      this.endDate = planeEndDate;\n      console.log(\"hoge\");\n      return [target_week, planeStartDate, planeEndDate];\n    },\n    setdayDate: function () {\n      let today = new Date();\n      let this_year = today.getFullYear();\n      let this_month = today.getMonth();\n      let datex = today.getDate() + this.dayCount;\n      let day = new String('日月火水木金土');\n\n      let today_date = new Date(this_year, this_month, datex);\n          today_date = today_date.getFullYear() + \"年\" + (today_date.getMonth()+1)+ \"月\" + today_date.getDate() + \"日\" + \" (\" + day.charAt(today_date.getDay() ) +\")\"\n\n      let planetodayDate = new Date(this_year, this_month, datex);\n          planetodayDate = planetodayDate.getFullYear() + \"-\" + (\"0\"+(planetodayDate.getMonth()+1)).slice(-2) + \"-\" + (\"0\"+planetodayDate.getDate()).slice(-2)\n\n      this.todayDate = planetodayDate;\n      console.log(this.todayDate);\n      return [planetodayDate, today_date];\n    },\n    // Listを削除\n    deleteLists: function(key) {\n      this.todosRef.child(key).remove();\n    },\n    // ToDoを削除\n    deleteTodos: function(subkey, list, subsubkey) {\n      this.todosRef.child(list.category).child(subkey).child(\"/subTasks\").child(subsubkey).remove();\n    },\n    // 週情報を取得\n    getTodayDate: function (){\n      let daydate = this.setdayDate();\n      return daydate[1];\n    },\n    getWeekDate: function () {\n      let a = this.setWeekDate();\n      return a[0];\n    }\n  }\n}\n</script>\n\n<style scoped>\n.cell-content {\n  text-align:left;\n  width: 70px;\n  height: 50px;\n  font-size: 50%;\n  /* border: 1px solid #efefef; */\n}\n.cell-content-line {\n  border-bottom: 1px solid #efefef;\n}\n</style>\n"]}]}