{"remainingRequest":"/Users/uratomo/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/uratomo/test/src/components/Task.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/uratomo/test/src/components/Task.vue","mtime":1593668747689},{"path":"/Users/uratomo/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBmaXJlYmFzZSBmcm9tICJmaXJlYmFzZSI7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlRhc2siLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkYXRhYmFzZTogbnVsbCwKICAgICAgdG9kb3NSZWY6IG51bGwsCiAgICAgIG5ld1RvZG9OYW1lOiAiIiwKICAgICAgc2hvd1RvZG9UeXBlOiAiYWxsIiwKICAgICAgdG9kb3M6IFtdCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24oKSB7CiAgICB0aGlzLmRhdGFiYXNlID0gZmlyZWJhc2UuZGF0YWJhc2UoKTsKICAgIHRoaXMudWlkID0gZmlyZWJhc2UuYXV0aCgpLmN1cnJlbnRVc2VyLnVpZDsKICAgIC8vIHJlZuOBr3JlZmVyZW5jZeOBp+ODh+ODvOOCv+ODmeODvOOCueOBq+OBguOCi+eJueWumuOBrumgheebruOCkuaMh+OBl+ekuuOBmeODoeOCveODg+ODiQogICAgdGhpcy50b2Rvc1JlZiA9IHRoaXMuZGF0YWJhc2UucmVmKCJ0b2Rvcy8iICsgdGhpcy51aWQpOwogICAgLy8g44OH44O844K/44Gr5aSJ5pu044GM44GC44KL44Go5a6f6KGM44GV44KM44KLZnVuY3Rpb24KICAgIHZhciBfdGhpcyA9IHRoaXM7CiAgICB0aGlzLnRvZG9zUmVmLm9uKCd2YWx1ZScsIGZ1bmN0aW9uKHNuYXBzaG90KSB7CiAgICAgIF90aGlzLnRvZG9zID0gc25hcHNob3QudmFsKCk7IC8vIOODh+ODvOOCv+OBq+WkieWMluOBjOi1t+OBjeOBn+OBqOOBjeOBq+WGjeWPluW+l+OBmeOCiwogICAgfSk7CiAgfSwKICBjb21wdXRlZDogewogICAgLy8g44OV44Kj44Or44K/44O844Gu5a6f6KOFc2hvd1RvZG9UeXBl44GM5aSJ5pu044GV44KM44KL44Go5a6f6KGM44GV44KM44KLCiAgICBmaWx0ZXJlZFRvZG9zOiBmdW5jdGlvbiAoKSB7CiAgICAgIGlmICh0aGlzLnNob3dUb2RvVHlwZSA9PSAnYWxsJykgewogICAgICAgIHJldHVybiB0aGlzLnRvZG9zOwogICAgICB9IGVsc2UgewogICAgICAgIHZhciBzaG93SXNDb21wbGV0ZSA9IGZhbHNlOwogICAgICAgIGlmICh0aGlzLnNob3dUb2RvVHlwZSA9PSAnY29tcGxldGUnKSB7CiAgICAgICAgICBzaG93SXNDb21wbGV0ZSA9IHRydWUKICAgICAgICB9CiAgICAgICAgdmFyIGZpbHRlclRvZG9zID0ge307CiAgICAgICAgZm9yICh2YXIga2V5IGluIHRoaXMudG9kb3MpIHsKICAgICAgICAgIHZhciB0b2RvID0gdGhpcy50b2Rvc1trZXldOwogICAgICAgICAgaWYgKHRvZG8uaXNDb21wbGV0ZSA9PSBzaG93SXNDb21wbGV0ZSkgewogICAgICAgICAgICBmaWx0ZXJUb2Rvc1trZXldID0gdG9kbzsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgY29uc29sZS5sb2coZmlsdGVyVG9kb3MpOwogICAgICAgIHJldHVybiBmaWx0ZXJUb2RvczsKICAgICAgfQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgLy8gRELjga50b2Rvcy9bdWlkXS/ku6XkuIvjgavjg4fjg7zjgr/jgpLmoLzntI3jgZfjgabjgYTjgY8KICAgIGNyZWF0ZVRvZG86IGZ1bmN0aW9uKCkgewogICAgICAvLyDkvZXjgoLjgarjgZHjgozjgbDjgr/jgrnjgq/jga/kvZzjgonjgozjgarjgYQKICAgICAgaWYgKHRoaXMubmV3VG9kb05hbWUgPT0gIiIpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgLy8gZGF0YWJhc2Xjgavjgr/jgrnjgq/lkI3jgajlrozkuobmnKrlrozkuobnirbmhYvjgpLlhaXlipsKICAgICAgdGhpcy50b2Rvc1JlZi5wdXNoKHsKICAgICAgICBuYW1lOiB0aGlzLm5ld1RvZG9OYW1lLAogICAgICAgIGlzQ29tcGxldGU6IGZhbHNlCiAgICAgIH0pOwogICAgICB0aGlzLm5ld1RvZG9OYW1lID0gIiIKICAgIH0sCiAgICAvLyDlrozkuobjg7vmnKrlrozkuobjga7lgKTjga7mm7TmlrAKICAgIHVwZGF0ZUlzQ29tcGxldGVUb2RvOiBmdW5jdGlvbih0b2RvLCBrZXkpIHsKICAgICAgdG9kby5pc0NvbXBsZXRlID0gIXRvZG8uaXNDb21wbGV0ZTsKICAgICAgLy8gRELlhoXjga7jg4fjg7zjgr/jgpLmm7TmlrDjgZnjgosKICAgICAgdmFyIHVwZGF0ZXMgPSB7fTsKICAgICAgLy8gdG9kby5pZOOBp+WkieabtOOBmeOCi3RvZG/jgr/jgrnjgq/jgpLmjIflrprjgZfjgIFkYXRh44GM5pu05paw44GV44KM44GfdG9kb+OCkuaMv+WFpeOBmeOCiwogICAgICB1cGRhdGVzW2tleV0gPSB0b2RvOwogICAgICB0aGlzLnRvZG9zUmVmLnVwZGF0ZSh1cGRhdGVzKQogICAgfSwKICAgIC8vIHRvZG/jga7liYrpmaQKICAgIGRlbGV0ZVRvZG86IGZ1bmN0aW9uKGtleSkgewogICAgICB0aGlzLnRvZG9zUmVmLmNoaWxkKGtleSkucmVtb3ZlKCk7CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["Task.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Task.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"task\">\n     <h2>タスク</h2>\n    <div>\n      <!-- 初期はVーmodelで\"newTodoName\"を入れているが空白、故にタスク作った後に空白にしないとミスが起こる -->\n      <input type=\"text\" v-model=\"newTodoName\">\n      <button type=\"submit\" v-on:click=\"createTodo()\">タスク作成</button>\n    </div>\n    <ul>\n      <li><button type=\"submit\" v-on:click=\"showTodoType = 'all'\">すべて</button></li>\n      <li><button type=\"submit\" v-on:click=\"showTodoType = 'active'\">未完タスク一覧</button></li>\n      <li><button type=\"submit\" v-on:click=\"showTodoType = 'complete'\">完了タスク一覧</button></li>\n    </ul>\n    <!-- todoの一覧表示 -->\n    <ul v-for=\"(todo, key) in filteredTodos\" :key=\"todo.id\">\n      <li><input type=\"checkbox\" v-model=\"todo.isComplete\" v-on:click=\"updateIsCompleteTodo(todo, key)\">{{ todo.name + key }}</li>\n      <button type=\"submit\" v-on:click=\"deleteTodo(key)\">削除</button>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport firebase from \"firebase\";\n\nexport default {\n  name: \"Task\",\n  data() {\n    return {\n      database: null,\n      todosRef: null,\n      newTodoName: \"\",\n      showTodoType: \"all\",\n      todos: []\n    };\n  },\n  created: function() {\n    this.database = firebase.database();\n    this.uid = firebase.auth().currentUser.uid;\n    // refはreferenceでデータベースにある特定の項目を指し示すメソッド\n    this.todosRef = this.database.ref(\"todos/\" + this.uid);\n    // データに変更があると実行されるfunction\n    var _this = this;\n    this.todosRef.on('value', function(snapshot) {\n      _this.todos = snapshot.val(); // データに変化が起きたときに再取得する\n    });\n  },\n  computed: {\n    // フィルターの実装showTodoTypeが変更されると実行される\n    filteredTodos: function () {\n      if (this.showTodoType == 'all') {\n        return this.todos;\n      } else {\n        var showIsComplete = false;\n        if (this.showTodoType == 'complete') {\n          showIsComplete = true\n        }\n        var filterTodos = {};\n        for (var key in this.todos) {\n          var todo = this.todos[key];\n          if (todo.isComplete == showIsComplete) {\n            filterTodos[key] = todo;\n          }\n        }\n        console.log(filterTodos);\n        return filterTodos;\n      }\n    }\n  },\n  methods: {\n    // DBのtodos/[uid]/以下にデータを格納していく\n    createTodo: function() {\n      // 何もなければタスクは作られない\n      if (this.newTodoName == \"\") {\n        return;\n      }\n      // databaseにタスク名と完了未完了状態を入力\n      this.todosRef.push({\n        name: this.newTodoName,\n        isComplete: false\n      });\n      this.newTodoName = \"\"\n    },\n    // 完了・未完了の値の更新\n    updateIsCompleteTodo: function(todo, key) {\n      todo.isComplete = !todo.isComplete;\n      // DB内のデータを更新する\n      var updates = {};\n      // todo.idで変更するtodoタスクを指定し、dataが更新されたtodoを挿入する\n      updates[key] = todo;\n      this.todosRef.update(updates)\n    },\n    // todoの削除\n    deleteTodo: function(key) {\n      this.todosRef.child(key).remove();\n    }\n  }\n};\n</script>\n\n<style>\n</style>\n"]}]}