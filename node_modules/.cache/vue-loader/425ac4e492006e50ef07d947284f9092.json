{"remainingRequest":"/Users/uratomo/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/uratomo/test/src/components/Task.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/uratomo/test/src/components/Task.vue","mtime":1594042643953},{"path":"/Users/uratomo/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Task.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"Task.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"task\">\n     <h2>タスク</h2>\n    <div>\n      <!-- 初期はVーmodelで\"newTodoName\"を入れているが空白、故にタスク作った後に空白にしないとミスが起こる -->\n      <input type=\"text\" v-model=\"newTodoName\">\n      <input type=\"date\" v-model=\"deadline\">\n      <select v-model=\"selected\">\n        <option v-for=\"option in options\" v-bind:value=\"option.value\" :key=\"option.id\">\n          {{ option.text }}\n        </option>\n      </select>\n      <!-- <select name=\"blood\">\n        <option value=\"A\">A型</option>\n        <option value=\"B\">B型</option>\n        <option value=\"O\">O型</option>\n        <option value=\"AB\">AB型</option>\n      </select> -->\n      <!-- <button type=\"submit\" v-on:click=\"createList()\">タスク作成</button> -->\n      <button type=\"submit\" v-on:click=\"createTodo()\">リスト作成</button>\n    </div>\n    <ul>\n      <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'all'\">すべて</button></li>\n      <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'active'\">未完タスク一覧</button></li>\n      <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'complete'\">完了タスク一覧</button></li>\n    </ul>\n\n\n    <!-- todoの一覧表示 -->\n    <p>{{ taskNumber + \"個のタスク\" }}</p>\n\n    <ul v-for=\"(taskCategory, key) in filteredTodos\" :key=\"taskCategory.id\">\n      <li class=\"card\">\n        <p>{{ key }}</p>\n        <div class=\"\">\n          <!-- <input type=\"checkbox\" v-model=\"todo.isComplete\" v-on:click=\"updateIsCompleteTodo(todo, key)\"> -->\n\n\n          <div v-for=\"(list, subkey) in taskCategory\" :key=\"list.id\">\n            <p>{{list.name}}</p>\n            <div v-for=\"(subtodo, subsubkey) in list.subTasks\" :key=\"subtodo.id\">\n              <div v-if=\"subtodo.judge == true\">\n                <p>{{subtodo.subName}}</p>\n                <input type=\"checkbox\" v-model=\"subtodo.isComplete\" v-on:click=\"updateIsCompleteTodo(subkey, subtodo, list, subsubkey)\">\n              </div>\n            </div>\n\n\n            <div>\n              <input type=\"text\" v-model=\"newSubTodoName\">\n              <input type=\"date\" v-model=\"subDeadline\">\n              <button type=\"submit\" v-on:click=\"createSubTodo(list, subkey)\">サブタスク作成</button>\n            </div>\n          </div>\n        </div>\n      </li>\n      <button type=\"submit\" v-on:click=\"deleteTodo(key)\">削除</button>\n    </ul>\n\n\n\n    <ul>\n      <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'private'\">private</button></li>\n      <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'recruit'\">recruit</button></li>\n      <li><button class=\"btn\" type=\"submit\" v-on:click=\"showTodoType = 'beforeIDie'\">bucket list</button></li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport firebase from \"firebase\";\n\nexport default {\n  name: \"Task\",\n  data() {\n    return {\n      database: null,\n      todosRef: null,\n      newTodoName: \"\",\n      newSubTodoName: \"\",\n      deadline:\"\",\n      subDeadline: \"\",\n      showTodoType: \"all\",\n      selected: '',\n      options: [\n        { text: 'private', value: 'private' },\n        { text: 'recruit', value: 'recruit' },\n        { text: 'bucket list', value: 'bucket list' }\n      ],\n      todos: []\n    };\n  },\n  created: function() {\n    this.db = firebase.database();\n    this.uid = firebase.auth().currentUser.uid;\n    // refはreferenceでデータベースにある特定の項目を指し示すメソッド\n    this.todosRef = this.db.ref(\"todos/\" + this.uid);\n    this.test = this.db.ref(\"todos/\" + this.uid + \"/\")\n    // データに変更があると実行されるfunction\n    var _this = this;\n    this.todosRef.on('value', function(snapshot) {\n      _this.todos = snapshot.val(); // データに変化が起きたときに再取得する\n    });\n  },\n  computed: {\n    // filteredTodos: function () {\n    //   var showComplete = false;\n    //   if (this.showTodoType == 'complete') {\n    //     showComplete = true;\n    //   }\n    //   let filterTodos = {},\n    //       filterSubTodos = {};\n    //   for (let key in this.todos) {\n    //     let todo = this.todos[key];\n    //     filterTodos[key] = todo;\n    //     for (let subkey in todo.subTasks) {\n    //       let subtodo = todo.subTasks[subkey];\n    //       // allの場合は全て表示\n    //       if (this.showTodoType == 'all') {\n    //         subtodo.judge = true;\n    //         filterSubTodos[subkey] = subtodo;\n    //       }\n    //       // completeの場合はチェックがついているもの、activeの時はチェックがついていないものを表示\n    //       else if(subtodo.isComplete == showComplete){\n    //         subtodo.judge = true;\n    //         filterSubTodos[subkey] = subtodo;\n    //       } else{\n    //         subtodo.judge = false;\n    //       }\n    //     }\n    //   }\n    //   return filterTodos;\n    // },\n    filteredTodos: function () {\n      var showComplete = false;\n      if (this.showTodoType == 'complete') {\n        showComplete = true;\n      }\n      let filterTodos = {};\n      for (let key in this.todos) {\n        let taskCategory = this.todos[key];\n        // console.log(taskCategory);\n        for (let subkey in taskCategory) {\n          console.log(subkey);\n          let list = taskCategory[subkey];\n          // console.log(list);\n          for (let subsubkey in list.subTasks) {\n            let subtodo = list.subTasks[subsubkey];\n            console.log(subtodo.subName);\n            console.log(subsubkey);\n             if (this.showTodoType == 'all') {\n               subtodo.judge = true;\n             }\n              else if(subtodo.isComplete == showComplete) {\n                subtodo.judge = true;\n                filterTodos[subkey] = subtodo;\n              }else {\n                subtodo.judge = false;\n              }\n          }\n        }\n        // for (let subkey in taskCategory) {\n        //   let todo = taskCategory[subkey];\n        //   // console.log(todo);\n        //   // allの場合は全て表示\n        //\n        //   // completeの場合はチェックがついているもの、activeの時はチェックがついていないものを表示\n        //\n        // }\n      }\n      return this.todos;\n    },\n    taskNumber: function () {\n      let count = 0;\n      for (var key in this.todos) {\n        var todo = this.todos[key];\n        console.log(todo);\n        // console.log(todo.id);\n        if (this.showTodoType == 'all'){\n          console.log(todo);\n          console.log(todo.subTasks);\n          count += 1;\n          for (var subkey in todo.subTasks) {\n            console.log(subkey);\n            var subtodo = todo.subTasks[subkey];\n            console.log(subtodo);\n            console.log(subtodo.subName);\n            count += 1;\n          }\n        } else if (this.showTodoType == 'active'){\n          if (todo.isComplete == false){\n            count += 1;\n          }\n        } else {\n          if (todo.isComplete == true){\n            count += 1;\n          }\n        }\n      }\n      return count;\n    }\n  },\n  methods: {\n    createTodo: function() {\n      if (this.newTodoName == \"\") { return; }\n      if (this.selected == \"\"){return; }\n      else if (this.selected == \"private\") {\n        this.todosRef.child(this.selected).push({\n          name: this.newTodoName,\n          date: this.deadline,\n          category: this.selected,\n        })\n      } else {\n        this.todosRef.child(this.selected).push({\n          name: this.newTodoName,\n          date: this.deadline,\n          category: this.selected,\n        })\n      }\n      this.newTodoName = \"\";\n    },\n    createSubTodo: function(list, subkey) {\n      console.log(list.category);\n      if (this.newSubTodoName == \"\") { return; }\n      if (list.category == 'private') {\n        this.todosRef.child(list.category).child(subkey).child(\"/subTasks\").push({\n          subName: this.newSubTodoName,\n          isComplete: false,\n          subDate: this.subDeadline,\n          judge: false,\n        })\n      } else if (list.category == 'recruit') {\n        this.todosRef.child(list.category).child(subkey).child(\"/subTasks\").push({\n          subName: this.newSubTodoName,\n          isComplete: false,\n          subDate: this.subDeadline,\n          judge: false,\n        })\n      } else {\n        this.todosRef.child(list.category).child(subkey).child(\"/subTasks\").push({\n          subName: this.newSubTodoName,\n          isComplete: false,\n          subDate: this.subDeadline,\n          judge: false,\n        })\n      }\n      this.newSubTodoName = \"\";\n    },\n    updateIsCompleteTodo: function(subkey, subtodo, list, subsubkey) {\n      subtodo.isComplete = !subtodo.isComplete;\n      var updates = {};\n      updates[subsubkey] = subtodo;\n      console.log(list);\n      this.todosRef.child(list.category).child(subkey).child(\"/subTasks\").update(updates)\n    },\n    // todoの削除\n    deleteTodo: function(key) {\n      this.todosRef.child(key).remove();\n    }\n  }\n};\n</script>\n\n<style>\n.card {\n  background-color: #c8d2e3;\n}\n\n.subcard {\n  background-color: #a6b6d5;\n}\n\n</style>\n"]}]}