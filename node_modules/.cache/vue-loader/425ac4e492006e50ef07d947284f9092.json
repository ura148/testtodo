{"remainingRequest":"/Users/uratomo/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/uratomo/test/src/components/Task.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/uratomo/test/src/components/Task.vue","mtime":1593595509899},{"path":"/Users/uratomo/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBmaXJlYmFzZSBmcm9tICJmaXJlYmFzZSI7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlRhc2siLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkYXRhYmFzZTogbnVsbCwKICAgICAgdG9kb3NSZWY6IG51bGwsCiAgICAgIG5ld1RvZG9OYW1lOiAiIiwKICAgICAgc2hvd1RvZG9UeXBlOiAiYWxsIiwKICAgICAgdG9kb3M6IFtdCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24oKSB7CiAgICB0aGlzLmRhdGFiYXNlID0gZmlyZWJhc2UuZGF0YWJhc2UoKTsKICAgIHRoaXMudWlkID0gZmlyZWJhc2UuYXV0aCgpLmN1cnJlbnRVc2VyLnVpZDsKICAgIHRoaXMudG9kb3NSZWYgPSB0aGlzLmRhdGFiYXNlLnJlZigidG9kb3MvIiArIHRoaXMudWlkKTsKCiAgICAKICAgIC8vIOODh+ODvOOCv+OBq+WkieabtOOBjOOBguOCi+OBqOWun+ihjOOBleOCjOOCi2Z1bmN0aW9uCiAgICB0aGlzLnRvZG9zUmVmLm9uKCJ2YWx1ZSIsIChzbmFwc2hvdCkgPT4gewogICAgICB0aGlzLnRvZG9zID0gc25hcHNob3QudmFsKCk7IC8vIOWGjeWPluW+l+OBl+OBpnRvZG9z44Gr5qC857SN44GZ44KLCiAgICB9KTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICAvLyDjg5XjgqPjg6vjgr/jg7zjga7lrp/oo4VzaG93VG9kb1R5cGXjgYzlpInmm7TjgZXjgozjgovjgajlrp/ooYzjgZXjgozjgosKICAgIGZpbHRlcmVkVG9kb3M6IGZ1bmN0aW9uKCkgewogICAgICBpZiAodGhpcy5zaG93VG9kb1R5cGUgPT0gImFsbCIpIHsKICAgICAgICByZXR1cm4gdGhpcy50b2RvczsKICAgICAgfSBlbHNlIHsKICAgICAgICB2YXIgc2hvd0lzQ29tcGxldGUgPSBmYWxzZTsKICAgICAgICBpZiAodGhpcy5zaG93VG9kb1R5cGUgPT0gImNvbXBsZXRlIikgewogICAgICAgICAgc2hvd0lzQ29tcGxldGUgPSB0cnVlOwogICAgICAgIH0KICAgICAgICB2YXIgZmlsdGVyVG9kb3MgPSB7fTsKICAgICAgICBmb3IgKHZhciBrZXkgaW4gdGhpcy50b2RvcykgewogICAgICAgICAgdmFyIHRvZG8gPSB0aGlzLnRvZG9zW2tleV07CiAgICAgICAgICBpZiAodG9kby5pc0NvbXBsZXRlID09IHNob3dJc0NvbXBsZXRlKSB7CiAgICAgICAgICAgIGZpbHRlclRvZG9zW2tleV0gPSB0b2RvOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gZmlsdGVyVG9kb3M7CiAgICAgIH0KICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIERC44GudG9kb3MvW3VpZF0v5Lul5LiL44Gr44OH44O844K/44KS5qC857SN44GX44Gm44GE44GPCiAgICBjcmVhdGVUb2RvOiBmdW5jdGlvbigpIHsKICAgICAgaWYgKHRoaXMubmV3VG9kb05hbWUgPT0gIiIpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgdGhpcy50b2Rvc1JlZi5wdXNoKHsKICAgICAgICBuYW1lOiB0aGlzLm5ld1RvZG9OYW1lLAogICAgICAgIGlzQ29tcGxldGU6IGZhbHNlCiAgICAgIH0pOwogICAgICB0aGlzLm5ld1RvZG9OYW1lID0gIiI7CiAgICB9LAogICAgLy8g5a6M5LqG44O75pyq5a6M5LqG44Gu5YCk44Gu5pu05pawCiAgICB1cGRhdGVJc0NvbXBsZXRlVG9kbzogZnVuY3Rpb24odG9kbywga2V5KSB7CiAgICAgIHRvZG8uaXNDb21wbGV0ZSA9ICF0b2RvLmlzQ29tcGxldGU7CiAgICAgIHZhciB1cGRhdGVzID0ge307CiAgICAgIHVwZGF0ZXNba2V5XSA9IHRvZG87CiAgICAgIHRoaXMudG9kb3NSZWYudXBkYXRlKHVwZGF0ZXMpCiAgICB9LAogICAgLy8gdG9kb+OBruWJiumZpAogICAgZGVsZXRlVG9kbzogZnVuY3Rpb24oa2V5KSB7CiAgICAgIHRoaXMudG9kb3NSZWYuY2hpbGQoa2V5KS5yZW1vdmUoKTsKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["Task.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Task.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"task\">\n     <h2>タスク</h2>\n    <div>\n      <input type=\"text\" v-model=\"newTodoName\">\n      <button type=\"submit\" v-on:click=\"createTodo()\">タスク作成</button>\n    </div>\n    <ul>\n      <li><button type=\"submit\" v-on:click=\"showTodoType = 'all'\">すべて</button></li>\n      <li><button type=\"submit\" v-on:click=\"showTodoType = 'active'\">未完タスク一覧</button></li>\n      <li><button type=\"submit\" v-on:click=\"showTodoType = 'complete'\">完了タスク一覧</button></li>\n    </ul>\n    <!-- todoの一覧表示 -->\n    <ul v-for=\"(todo, key) in filteredTodos\" :key=\"todo.id\">\n      <li><input class=\"toggle\" type=\"checkbox\" v-model=\"todo.isComplete\" v-on:click=\"updateIsCompleteTodo(todo, key)\">{{ todo.name }}</li>\n      <button type=\"submit\" v-on:click=\"deleteTodo(key)\">削除</button>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport firebase from \"firebase\";\n\nexport default {\n  name: \"Task\",\n  data() {\n    return {\n      database: null,\n      todosRef: null,\n      newTodoName: \"\",\n      showTodoType: \"all\",\n      todos: []\n    };\n  },\n  created: function() {\n    this.database = firebase.database();\n    this.uid = firebase.auth().currentUser.uid;\n    this.todosRef = this.database.ref(\"todos/\" + this.uid);\n\n    \n    // データに変更があると実行されるfunction\n    this.todosRef.on(\"value\", (snapshot) => {\n      this.todos = snapshot.val(); // 再取得してtodosに格納する\n    });\n  },\n  computed: {\n    // フィルターの実装showTodoTypeが変更されると実行される\n    filteredTodos: function() {\n      if (this.showTodoType == \"all\") {\n        return this.todos;\n      } else {\n        var showIsComplete = false;\n        if (this.showTodoType == \"complete\") {\n          showIsComplete = true;\n        }\n        var filterTodos = {};\n        for (var key in this.todos) {\n          var todo = this.todos[key];\n          if (todo.isComplete == showIsComplete) {\n            filterTodos[key] = todo;\n          }\n        }\n        return filterTodos;\n      }\n    }\n  },\n  methods: {\n    // DBのtodos/[uid]/以下にデータを格納していく\n    createTodo: function() {\n      if (this.newTodoName == \"\") {\n        return;\n      }\n      this.todosRef.push({\n        name: this.newTodoName,\n        isComplete: false\n      });\n      this.newTodoName = \"\";\n    },\n    // 完了・未完了の値の更新\n    updateIsCompleteTodo: function(todo, key) {\n      todo.isComplete = !todo.isComplete;\n      var updates = {};\n      updates[key] = todo;\n      this.todosRef.update(updates)\n    },\n    // todoの削除\n    deleteTodo: function(key) {\n      this.todosRef.child(key).remove();\n    }\n  }\n};\n</script>\n\n<style>\n</style>\n"]}]}