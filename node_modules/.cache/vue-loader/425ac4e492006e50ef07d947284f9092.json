{"remainingRequest":"/Users/uratomo/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/uratomo/test/src/components/Task.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/uratomo/test/src/components/Task.vue","mtime":1593762707088},{"path":"/Users/uratomo/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uratomo/test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBmaXJlYmFzZSBmcm9tICJmaXJlYmFzZSI7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlRhc2siLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkYXRhYmFzZTogbnVsbCwKICAgICAgdG9kb3NSZWY6IG51bGwsCiAgICAgIG5ld1RvZG9OYW1lOiAiIiwKICAgICAgZGVhZGxpbmU6IiIsCiAgICAgIHNob3dUb2RvVHlwZTogImFsbCIsCiAgICAgIHRvZG9zOiBbXQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uKCkgewogICAgdGhpcy5kYXRhYmFzZSA9IGZpcmViYXNlLmRhdGFiYXNlKCk7CiAgICB0aGlzLnVpZCA9IGZpcmViYXNlLmF1dGgoKS5jdXJyZW50VXNlci51aWQ7CiAgICAvLyByZWbjga9yZWZlcmVuY2Xjgafjg4fjg7zjgr/jg5njg7zjgrnjgavjgYLjgovnibnlrprjga7poIXnm67jgpLmjIfjgZfnpLrjgZnjg6Hjgr3jg4Pjg4kKICAgIHRoaXMudG9kb3NSZWYgPSB0aGlzLmRhdGFiYXNlLnJlZigidG9kb3MvIiArIHRoaXMudWlkKTsKICAgIC8vIOODh+ODvOOCv+OBq+WkieabtOOBjOOBguOCi+OBqOWun+ihjOOBleOCjOOCi2Z1bmN0aW9uCiAgICB2YXIgX3RoaXMgPSB0aGlzOwogICAgdGhpcy50b2Rvc1JlZi5vbigndmFsdWUnLCBmdW5jdGlvbihzbmFwc2hvdCkgewogICAgICBfdGhpcy50b2RvcyA9IHNuYXBzaG90LnZhbCgpOyAvLyDjg4fjg7zjgr/jgavlpInljJbjgYzotbfjgY3jgZ/jgajjgY3jgavlho3lj5blvpfjgZnjgosKICAgIH0pOwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC8vIOODleOCo+ODq+OCv+ODvOOBruWun+ijhXNob3dUb2RvVHlwZeOBjOWkieabtOOBleOCjOOCi+OBqOWun+ihjOOBleOCjOOCiwogICAgZmlsdGVyZWRUb2RvczogZnVuY3Rpb24gKCkgewogICAgICBpZiAodGhpcy5zaG93VG9kb1R5cGUgPT0gJ2FsbCcpIHsKICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnRvZG9zKTsKICAgICAgICByZXR1cm4gdGhpcy50b2RvczsKICAgICAgfSBlbHNlIHsKICAgICAgICB2YXIgc2hvd0NvbXBsZXRlID0gZmFsc2U7CiAgICAgICAgaWYgKHRoaXMuc2hvd1RvZG9UeXBlID09ICdjb21wbGV0ZScpIHsKICAgICAgICAgIHNob3dDb21wbGV0ZSA9IHRydWUKICAgICAgICB9CiAgICAgICAgdmFyIGZpbHRlclRvZG9zID0ge307CgogICAgICAgIGZvciAodmFyIGtleSBpbiB0aGlzLnRvZG9zKSB7CiAgICAgICAgICB2YXIgdG9kbyA9IHRoaXMudG9kb3Nba2V5XTsKICAgICAgICAgIGlmICh0b2RvLmlzQ29tcGxldGUgPT0gc2hvd0NvbXBsZXRlKSB7CiAgICAgICAgICAgIGZpbHRlclRvZG9zW2tleV0gPSB0b2RvOwogICAgICAgICAgICBjb25zb2xlLmxvZyhmaWx0ZXJUb2Rvc1trZXldKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgY29uc29sZS5sb2coZmlsdGVyVG9kb3MpOwogICAgICAgIHJldHVybiBmaWx0ZXJUb2RvczsKICAgICAgfQogICAgfSwKICAgIHRhc2tOdW1iZXI6IGZ1bmN0aW9uICgpIHsKICAgICAgbGV0IGNvdW50ID0gMDsKICAgICAgZm9yICh2YXIga2V5IGluIHRoaXMudG9kb3MpIHsKICAgICAgICB2YXIgdG9kbyA9IHRoaXMudG9kb3Nba2V5XTsKICAgICAgICBpZiAodGhpcy5zaG93VG9kb1R5cGUgPT0gJ2FsbCcpewogICAgICAgICAgY29uc29sZS5sb2coa2V5KTsKICAgICAgICAgIGNvdW50ICs9IDE7CiAgICAgICAgICBjb25zb2xlLmxvZyhjb3VudCk7CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnNob3dUb2RvVHlwZSA9PSAnYWN0aXZlJyl7CiAgICAgICAgICBpZiAodG9kby5pc0NvbXBsZXRlID09IGZhbHNlKXsKICAgICAgICAgICAgY291bnQgKz0gMTsKICAgICAgICAgICAgY29uc29sZS5sb2coY291bnQpOwogICAgICAgICAgfSAgICAKICAgICAgICB9IGVsc2UgewogICAgICAgICAgaWYgKHRvZG8uaXNDb21wbGV0ZSA9PSB0cnVlKXsKICAgICAgICAgICAgY291bnQgKz0gMTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgLy8gdmFyIHRvZG8gPSB0aGlzLnRvZG9zW2tleV07CiAgICAgICAgLy8gaWYgKHRvZG8uaXNDb21wbGV0ZSA9PSBzaG93Q29tcGxldGUpIHsKICAgICAgICAvLyAgIGZpbHRlclRvZG9zW2tleV0gPSB0b2RvOwogICAgICAgIC8vICAgY29uc29sZS5sb2coZmlsdGVyVG9kb3Nba2V5XSk7CiAgICAgICAgLy8gfQogICAgICB9CiAgICAgIHJldHVybiBjb3VudDsKCiAgICAgIC8vIHZhciBzaG93Q29tcGxldGUgPSBmYWxzZTsKICAgICAgLy8gaWYgKHRoaXMuc2hvd1RvZG9UeXBlID09ICdjb21wbGV0ZScpIHsKICAgICAgLy8gICBzaG93Q29tcGxldGUgPSB0cnVlCiAgICAgIC8vIH0KICAgICAgLy8gdmFyIGZpbHRlclRvZG9zID0ge307CiAgICAgIC8vIGZvciAodmFyIGtleSBpbiB0aGlzLnRvZG9zKSB7CiAgICAgIC8vICAgdmFyIHRvZG8gPSB0aGlzLnRvZG9zW2tleV07CiAgICAgIC8vICAgaWYgKHRvZG8uaXNDb21wbGV0ZSA9PSBzaG93Q29tcGxldGUpIHsKICAgICAgLy8gICAgIGZpbHRlclRvZG9zW2tleV0gPSB0b2RvOwogICAgICAvLyAgICAgY29uc29sZS5sb2coZmlsdGVyVG9kb3Nba2V5XSk7CiAgICAgIC8vICAgfQogICAgICAvLyB9CiAgICB9LAogICAgLy8gcmVtYWluaW5nOiBmdW5jdGlvbigpIHsKCQkvLyAJdmFyIGNvdW50ID0gMDsKCQkvLyAJdmFyIHRvZG9zID0gdGhpcy50b2RvczsKCQkvLyAJdmFyIGxlbmd0aCA9IHRvZG9zLmxlbmd0aDsKICAgIC8vICAgY29uc29sZS5sb2cobGVuZ3RoKTsKCQkJLy8gZm9yKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7CgkJCS8vIAlpZighdG9kb3NbaV0uZG9uZSkgewoJCQkvLyAJCWNvdW50Kys7CgkJCS8vIAl9CgkJCS8vIH0KCQkJLy8gcmV0dXJuIGNvdW50OwogIH0sCiAgbWV0aG9kczogewogICAgLy8gRELjga50b2Rvcy9bdWlkXS/ku6XkuIvjgavjg4fjg7zjgr/jgpLmoLzntI3jgZfjgabjgYTjgY8KICAgIGNyZWF0ZVRvZG86IGZ1bmN0aW9uKCkgewogICAgICBpZiAodGhpcy5uZXdUb2RvTmFtZSA9PSAiIikgeyByZXR1cm47IH0KICAgICAgdGhpcy50b2Rvc1JlZi5wdXNoKHsKICAgICAgICBuYW1lOiB0aGlzLm5ld1RvZG9OYW1lLAogICAgICAgIGlzQ29tcGxldGU6IGZhbHNlLAogICAgICAgIGRhdGU6IHRoaXMuZGVhZGxpbmUsCiAgICAgIH0pCiAgICAgIHRoaXMubmV3VG9kb05hbWUgPSAiIjsKICAgIH0sCiAgICAvLyDlrozkuobjg7vmnKrlrozkuobjga7lgKTjga7mm7TmlrAKICAgIHVwZGF0ZUlzQ29tcGxldGVUb2RvOiBmdW5jdGlvbih0b2RvLCBrZXkpIHsKICAgICAgdG9kby5pc0NvbXBsZXRlID0gIXRvZG8uaXNDb21wbGV0ZTsKICAgICAgLy8gRELlhoXjga7jg4fjg7zjgr/jgpLmm7TmlrDjgZnjgosKICAgICAgdmFyIHVwZGF0ZXMgPSB7fTsKICAgICAgLy8gdG9kby5pZOOBp+WkieabtOOBmeOCi3RvZG/jgr/jgrnjgq/jgpLmjIflrprjgZfjgIFkYXRh44GM5pu05paw44GV44KM44GfdG9kb+OCkuaMv+WFpeOBmeOCiwogICAgICB1cGRhdGVzW2tleV0gPSB0b2RvOwogICAgICB0aGlzLnRvZG9zUmVmLnVwZGF0ZSh1cGRhdGVzKQogICAgfSwKICAgIC8vIHRvZG/jga7liYrpmaQKICAgIGRlbGV0ZVRvZG86IGZ1bmN0aW9uKGtleSkgewogICAgICB0aGlzLnRvZG9zUmVmLmNoaWxkKGtleSkucmVtb3ZlKCk7CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["Task.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Task.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"task\">\n     <h2>タスク</h2>\n    <div>\n      <!-- 初期はVーmodelで\"newTodoName\"を入れているが空白、故にタスク作った後に空白にしないとミスが起こる -->\n      <input type=\"text\" v-model=\"newTodoName\">\n      <input type=\"date\" v-model=\"deadline\">\n      <button type=\"submit\" v-on:click=\"createTodo()\">タスク作成</button>\n    </div>\n    <ul>\n      <li><button type=\"submit\" v-on:click=\"showTodoType = 'all'\">すべて</button></li>\n      <li><button type=\"submit\" v-on:click=\"showTodoType = 'active'\">未完タスク一覧</button></li>\n      <li><button type=\"submit\" v-on:click=\"showTodoType = 'complete'\">完了タスク一覧</button></li>\n    </ul>\n    <!-- todoの一覧表示 -->\n    <p>{{ taskNumber + \"個のタスク\" }}</p>\n    <ul v-for=\"(todo, key) in filteredTodos\" :key=\"todo.id\">\n      <li class=\"card\">\n        <input type=\"checkbox\" v-model=\"todo.isComplete\" v-on:click=\"updateIsCompleteTodo(todo, key)\">\n        <p>{{ todo.name }}</p>\n        <p>{{ todo.date }}</p>\n      </li>\n      <button type=\"submit\" v-on:click=\"deleteTodo(key)\">削除</button>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport firebase from \"firebase\";\n\nexport default {\n  name: \"Task\",\n  data() {\n    return {\n      database: null,\n      todosRef: null,\n      newTodoName: \"\",\n      deadline:\"\",\n      showTodoType: \"all\",\n      todos: []\n    };\n  },\n  created: function() {\n    this.database = firebase.database();\n    this.uid = firebase.auth().currentUser.uid;\n    // refはreferenceでデータベースにある特定の項目を指し示すメソッド\n    this.todosRef = this.database.ref(\"todos/\" + this.uid);\n    // データに変更があると実行されるfunction\n    var _this = this;\n    this.todosRef.on('value', function(snapshot) {\n      _this.todos = snapshot.val(); // データに変化が起きたときに再取得する\n    });\n  },\n  computed: {\n    // フィルターの実装showTodoTypeが変更されると実行される\n    filteredTodos: function () {\n      if (this.showTodoType == 'all') {\n        console.log(this.todos);\n        return this.todos;\n      } else {\n        var showComplete = false;\n        if (this.showTodoType == 'complete') {\n          showComplete = true\n        }\n        var filterTodos = {};\n\n        for (var key in this.todos) {\n          var todo = this.todos[key];\n          if (todo.isComplete == showComplete) {\n            filterTodos[key] = todo;\n            console.log(filterTodos[key]);\n          }\n        }\n        console.log(filterTodos);\n        return filterTodos;\n      }\n    },\n    taskNumber: function () {\n      let count = 0;\n      for (var key in this.todos) {\n        var todo = this.todos[key];\n        if (this.showTodoType == 'all'){\n          console.log(key);\n          count += 1;\n          console.log(count);\n        } else if (this.showTodoType == 'active'){\n          if (todo.isComplete == false){\n            count += 1;\n            console.log(count);\n          }    \n        } else {\n          if (todo.isComplete == true){\n            count += 1;\n          }\n        }\n        // var todo = this.todos[key];\n        // if (todo.isComplete == showComplete) {\n        //   filterTodos[key] = todo;\n        //   console.log(filterTodos[key]);\n        // }\n      }\n      return count;\n\n      // var showComplete = false;\n      // if (this.showTodoType == 'complete') {\n      //   showComplete = true\n      // }\n      // var filterTodos = {};\n      // for (var key in this.todos) {\n      //   var todo = this.todos[key];\n      //   if (todo.isComplete == showComplete) {\n      //     filterTodos[key] = todo;\n      //     console.log(filterTodos[key]);\n      //   }\n      // }\n    },\n    // remaining: function() {\n\t\t// \tvar count = 0;\n\t\t// \tvar todos = this.todos;\n\t\t// \tvar length = todos.length;\n    //   console.log(length);\n\t\t\t// for(var i = 0; i < length; i++) {\n\t\t\t// \tif(!todos[i].done) {\n\t\t\t// \t\tcount++;\n\t\t\t// \t}\n\t\t\t// }\n\t\t\t// return count;\n  },\n  methods: {\n    // DBのtodos/[uid]/以下にデータを格納していく\n    createTodo: function() {\n      if (this.newTodoName == \"\") { return; }\n      this.todosRef.push({\n        name: this.newTodoName,\n        isComplete: false,\n        date: this.deadline,\n      })\n      this.newTodoName = \"\";\n    },\n    // 完了・未完了の値の更新\n    updateIsCompleteTodo: function(todo, key) {\n      todo.isComplete = !todo.isComplete;\n      // DB内のデータを更新する\n      var updates = {};\n      // todo.idで変更するtodoタスクを指定し、dataが更新されたtodoを挿入する\n      updates[key] = todo;\n      this.todosRef.update(updates)\n    },\n    // todoの削除\n    deleteTodo: function(key) {\n      this.todosRef.child(key).remove();\n    }\n  }\n};\n</script>\n\n<style>\n\n</style>\n"]}]}